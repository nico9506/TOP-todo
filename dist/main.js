(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(537),r=t.n(a),i=t(645),o=t.n(i)()(r());o.push([n.id,':root {\n    /* Color theme */\n    --ct-darker: #2d2d2d;\n    --ct-dark: #3d3d3d;\n    --ct-grey: #535353;\n    --ct-numix: #d64937;\n    --ct-blue: #379cd6;\n    --ct-green: #5cd637;\n    --ct-light: #dcdcdc;\n    --ct-white: #ffffff;\n    /* Color theme (filter) for SVG images */\n    --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n        brightness(102%) contrast(84%);\n    --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n        brightness(101%) contrast(74%);\n    --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n        brightness(95%) contrast(89%);\n    --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n        brightness(92%) contrast(80%);\n    --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n        brightness(123%) contrast(73%);\n    --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n        brightness(105%) contrast(102%);\n\n    /* Elements height */\n    --navbar-h: 3.8rem;\n    --side-panel-length: 15rem;\n    --content-h: calc(\n        100vh - var(--navbar-h) - var(--footer-h) - var(--side-panel-length)\n    );\n    --footer-h: 3rem;\n\n    /* Font size */\n    --logo-fs: 1.3rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.8rem;\n    --subheader-fs: 1.4rem;\n    --subheader-sm-fs: 1.3rem;\n    --content-fs: 0.9rem;\n\n    --taskRow-h: 4rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n        "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n    color: var(--ct-darker);\n}\n\nbody {\n    background-color: var(--ct-grey);\n    display: grid;\n    grid-template:\n        var(--navbar-h) var(--side-panel-length) var(--content-h) var(\n            --footer-h\n        )\n        / 1fr;\n    grid-template-areas:\n        "navbar"\n        "side-panel"\n        "main-content"\n        "footer";\n}\n\n.hidden {\n    grid-template-areas:\n        "navbar"\n        "main-content"\n        "main-content"\n        "footer";\n}\n\n/* --------------------- Nav bar -------------------- */\nnav {\n    grid-area: navbar;\n    background-color: var(--ct-darker);\n    font-size: var(--navbar-fs);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n}\n\n.title-container {\n    width: fit-content;\n    height: 90%;\n    display: flex;\n    align-items: center;\n}\n\n.logo {\n    width: var(--logo-fs);\n    margin-right: 1rem;\n    filter: var(--filter-light);\n}\n\n.logo:hover {\n    cursor: pointer;\n    filter: var(--filter-numix);\n}\n\n.app-name {\n    display: none;\n    color: var(--ct-light);\n    font-family: cursive, sans-serif;\n    font-style: italic;\n    font-size: var(--header-fs);\n    padding-top: 10px;\n}\n\n.btn-icon-label {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    gap: 0rem;\n    padding: 0.5rem;\n    font-size: 0; /*0px to hide the label*/\n    border-radius: 30px;\n    border: 0 none;\n    background-color: var(--ct-light);\n    text-transform: capitalize;\n}\n\n.btn-icon-label > img {\n    width: var(--header-fs);\n    filter: var(--filter-darker);\n}\n\n.btn-icon-label:hover {\n    cursor: pointer;\n    background-color: var(--ct-numix);\n}\n\n#sp_g_home {\n    margin-top: 2rem;\n}\n\n#sp_g_anytime {\n    margin-bottom: 2rem;\n}\n\n/* --------------------- Side panel -------------------- */\n.side-panel {\n    grid-area: side-panel;\n    background-color: var(--ct-grey);\n    padding: 1rem;\n    overflow: auto;\n    animation: slideDown 0.5s;\n}\n\n.side-panel-hidden {\n    display: none;\n}\n\n.side-panel > h1 {\n    color: var(--ct-light);\n}\n\n.sp-group {\n    height: var(--header-fs);\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5rem;\n    padding-left: 0.5rem;\n}\n\n.sp-group:hover {\n    cursor: pointer;\n    background-color: var(--ct-dark);\n    border: 0px solid var(--ct-dark);\n    border-radius: 10px;\n}\n\n.sp-group-selected {\n    background-color: var(--ct-darker);\n    border: 0px solid var(--ct-darker);\n    border-radius: 10px;\n}\n\n.sp-group > .sp-g-icon {\n    width: var(--subheader-fs);\n    filter: var(--filter-light);\n}\n\n.sp-group > .sp-g-label {\n    text-transform: capitalize;\n    color: var(--ct-light);\n}\n\n.popup {\n    margin-top: 1rem;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-unhidden {\n    display: block !important;\n    animation: scaleX 0.5s;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    font-size: var(--navbar-fs);\n    width: 100%;\n    text-align: center;\n}\n\n.form-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.form-container > input, .form-container > select {\n    width: 100%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form {\n    width: 47%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form:hover {\n    cursor: pointer;\n    background-color: var(--ct-green);\n    border: 2px solid var(--ct-green);\n    border-radius: 5px;\n}\n.form-container > .cancel:hover {\n    background-color: var(--ct-numix);\n    border: 2px solid var(--ct-numix);\n}\n\n.list-box {\n    display: grid;\n    grid-template: 1fr / 1fr var(--subheader-sm-fs) var(--subheader-sm-fs);\n}\n\n.btn-edit-list, .btn-delete-list {\n    background-color: var(--ct-light);\n    filter: var(--filter-light);\n    border: 0 none;\n    border-radius: 50%;\n    width: var(--subheader-sm-fs);\n    height: var(--subheader-sm-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-list {\n    margin-right: 3px;\n}\n\n.btn-edit-list:hover, .btn-delete-list:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-list:hover {\n    background-color: var(--ct-blue);\n    filter: unset;\n}\n\n.btn-delete-list:hover {\n    background-color: var(--ct-numix);\n    filter: unset;\n}\n\n/* --------------------- main panel -------------------- */\n.main-content {\n    grid-area: main-content;\n    background-color: var(--ct-light);\n    padding: 1rem;\n    display: grid;\n    grid-template: 4rem 1fr / 1fr;\n    grid-template-areas:\n        "parent-list-name"\n        "tasks-grid";\n}\n\n.main-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n}\n\n.popup-task {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    height: fit-content;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    grid-area: parent-list-name;\n}\n\n.popup-task > .form-container > label {\n    color: var(--ct-light);\n    width: 100%;\n    text-align: left;\n    margin-top: 0.5rem;\n}\n\n.popup-task > .form-container > input:nth-last-child(3) {\n    margin-bottom: 1rem;\n}\n\n.tasks-section {\n    grid-area: tasks-grid;\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 1rem; */\n    overflow-y: auto;\n}\n\n.task-container {\n    margin-bottom: 1rem;\n    width: 100%;\n    border: 1px solid var(--ct-grey);\n    border-radius: 10px;\n    padding: 0.5rem 1rem;\n    display: grid;\n    grid-template: var(--taskRow-h) var(--taskRow-h) calc(var(--taskRow-h) * 2) / 4fr 1fr 1fr;\n    grid-template-areas:\n        "taskName taskEdit taskDelete"\n        "taskDateAndParent taskDateAndParent taskDateAndParent"\n        "taskDesc taskDesc taskDesc";\n}\n\n.task-name {\n    grid-area: taskName;\n    overflow: auto;\n    font-size: var(--subheader-fs);\n}\n\n.task-desc {\n    grid-area: taskDesc;\n    overflow: auto;\n}\n\n.task-date-list-info {\n    grid-area: taskDateAndParent;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1rem;\n}\n\n.btn-edit-task, .btn-delete-task {\n    background-color: var(--ct-light);\n    /* filter: var(--filter-darker); */\n    border: 0 none;\n    width: var(--header-fs);\n    height: var(--header-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-task:hover, .btn-delete-task:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-task:hover {\n    background-color: var(--ct-blue);\n}\n\n.btn-delete-task:hover {\n    background-color: var(--ct-numix);\n}\n\n.btn-edit-task {\n    grid-area: taskEdit;\n}\n\n.btn-delete-task {\n    grid-area: taskDelete;\n}\n\n.task-controls {\n    width: var(--subheader-fs)\n}\n\n.task-priority-low {\n    border-color: var(--ct-white);\n    box-shadow: inset 0 0 10px 0 var(--ct-white);\n}\n\n.task-priority-medium {\n    border-color: var(--ct-blue);\n    box-shadow: inset 0 0 10px 0 var(--ct-blue);\n}\n\n.task-priority-high {\n    border-color: var(--ct-numix);\n    box-shadow: inset 0 0 10px 0 var(--ct-numix);\n}\n/* --------------------- Footer -------------------- */\nfooter {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--ct-darker);\n}\n\nfooter > .github-contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: 0.5rem;\n    text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n    width: var(--logo-fs);\n    filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n    font-size: var(--logo-fs);\n    color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n    color: var(--ct-numix);\n}\n\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --logo-fs: 1.4rem;\n        --navbar-fs: 1rem;\n        --header-fs: 1.9rem;\n        --subheader-fs: 1.5rem;\n        --subheader-sm-fs: 1.4rem;\n        --content-fs: 1rem;\n    }\n\n    .app-name {\n        display: block;\n    }\n\n    .btn-icon-label {\n        font-size: var(--navbar-fs);\n        gap: 0.5rem;\n        padding: 0.5rem 1rem 0.5rem 0.5rem;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --logo-fs: 1.5rem;\n        --navbar-fs: 1.1rem;\n        --header-fs: 2rem;\n        --subheader-fs: 1.6rem;\n        --subheader-sm-fs: 1.5rem;\n        --content-fs: 1rem;\n\n        /* Elements height */\n        --side-panel-length: min(14rem, 40%);\n        --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n    }\n\n    body {\n        grid-template:\n            var(--navbar-h) var(--content-h) var(--footer-h) / var(\n                --side-panel-length\n            )\n            1fr;\n        grid-template-areas:\n            "navbar navbar"\n            "side-panel main-content"\n            "footer footer";\n    }\n\n    .hidden {\n        grid-template-areas:\n            "navbar navbar"\n            "main-content main-content"\n            "footer footer";\n    }\n\n    .side-panel {\n        animation: slideRight 0.5s;\n    }\n\n    .task-container {\n        grid-template: var(--taskRow-h) var(--taskRow-h) / 2fr 3fr 1fr;\n        grid-template-areas:\n            "taskName taskDesc taskEdit"\n            "taskDateAndParent taskDesc taskDelete";\n    }\n\n    .task-desc {\n        padding-left: 1rem;\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    0% {\n        transform: translate(0, -100%);\n    }\n    100% {\n        transform: translate(0, 0);\n    }\n}\n\n@keyframes slideRight {\n    0% {\n        transform: translate(-100%);\n    }\n    100% {\n        transform: translate(0);\n    }\n}\n\n@keyframes scaleX {\n    0% {\n        transform: scaleX(0);\n    }\n    100% {\n        transform: scaleX(100%);\n    }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n    /* Color theme */\n    --ct-darker: #2d2d2d;\n    --ct-dark: #3d3d3d;\n    --ct-grey: #535353;\n    --ct-numix: #d64937;\n    --ct-blue: #379cd6;\n    --ct-green: #5cd637;\n    --ct-light: #dcdcdc;\n    --ct-white: #ffffff;\n    /* Color theme (filter) for SVG images */\n    --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n        brightness(102%) contrast(84%);\n    --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n        brightness(101%) contrast(74%);\n    --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n        brightness(95%) contrast(89%);\n    --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n        brightness(92%) contrast(80%);\n    --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n        brightness(123%) contrast(73%);\n    --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n        brightness(105%) contrast(102%);\n\n    /* Elements height */\n    --navbar-h: 3.8rem;\n    --side-panel-length: 15rem;\n    --content-h: calc(\n        100vh - var(--navbar-h) - var(--footer-h) - var(--side-panel-length)\n    );\n    --footer-h: 3rem;\n\n    /* Font size */\n    --logo-fs: 1.3rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.8rem;\n    --subheader-fs: 1.4rem;\n    --subheader-sm-fs: 1.3rem;\n    --content-fs: 0.9rem;\n\n    --taskRow-h: 4rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n        "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n    color: var(--ct-darker);\n}\n\nbody {\n    background-color: var(--ct-grey);\n    display: grid;\n    grid-template:\n        var(--navbar-h) var(--side-panel-length) var(--content-h) var(\n            --footer-h\n        )\n        / 1fr;\n    grid-template-areas:\n        "navbar"\n        "side-panel"\n        "main-content"\n        "footer";\n}\n\n.hidden {\n    grid-template-areas:\n        "navbar"\n        "main-content"\n        "main-content"\n        "footer";\n}\n\n/* --------------------- Nav bar -------------------- */\nnav {\n    grid-area: navbar;\n    background-color: var(--ct-darker);\n    font-size: var(--navbar-fs);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n}\n\n.title-container {\n    width: fit-content;\n    height: 90%;\n    display: flex;\n    align-items: center;\n}\n\n.logo {\n    width: var(--logo-fs);\n    margin-right: 1rem;\n    filter: var(--filter-light);\n}\n\n.logo:hover {\n    cursor: pointer;\n    filter: var(--filter-numix);\n}\n\n.app-name {\n    display: none;\n    color: var(--ct-light);\n    font-family: cursive, sans-serif;\n    font-style: italic;\n    font-size: var(--header-fs);\n    padding-top: 10px;\n}\n\n.btn-icon-label {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    gap: 0rem;\n    padding: 0.5rem;\n    font-size: 0; /*0px to hide the label*/\n    border-radius: 30px;\n    border: 0 none;\n    background-color: var(--ct-light);\n    text-transform: capitalize;\n}\n\n.btn-icon-label > img {\n    width: var(--header-fs);\n    filter: var(--filter-darker);\n}\n\n.btn-icon-label:hover {\n    cursor: pointer;\n    background-color: var(--ct-numix);\n}\n\n#sp_g_home {\n    margin-top: 2rem;\n}\n\n#sp_g_anytime {\n    margin-bottom: 2rem;\n}\n\n/* --------------------- Side panel -------------------- */\n.side-panel {\n    grid-area: side-panel;\n    background-color: var(--ct-grey);\n    padding: 1rem;\n    overflow: auto;\n    animation: slideDown 0.5s;\n}\n\n.side-panel-hidden {\n    display: none;\n}\n\n.side-panel > h1 {\n    color: var(--ct-light);\n}\n\n.sp-group {\n    height: var(--header-fs);\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5rem;\n    padding-left: 0.5rem;\n}\n\n.sp-group:hover {\n    cursor: pointer;\n    background-color: var(--ct-dark);\n    border: 0px solid var(--ct-dark);\n    border-radius: 10px;\n}\n\n.sp-group-selected {\n    background-color: var(--ct-darker);\n    border: 0px solid var(--ct-darker);\n    border-radius: 10px;\n}\n\n.sp-group > .sp-g-icon {\n    width: var(--subheader-fs);\n    filter: var(--filter-light);\n}\n\n.sp-group > .sp-g-label {\n    text-transform: capitalize;\n    color: var(--ct-light);\n}\n\n.popup {\n    margin-top: 1rem;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-unhidden {\n    display: block !important;\n    animation: scaleX 0.5s;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    font-size: var(--navbar-fs);\n    width: 100%;\n    text-align: center;\n}\n\n.form-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.form-container > input, .form-container > select {\n    width: 100%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form {\n    width: 47%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form:hover {\n    cursor: pointer;\n    background-color: var(--ct-green);\n    border: 2px solid var(--ct-green);\n    border-radius: 5px;\n}\n.form-container > .cancel:hover {\n    background-color: var(--ct-numix);\n    border: 2px solid var(--ct-numix);\n}\n\n.list-box {\n    display: grid;\n    grid-template: 1fr / 1fr var(--subheader-sm-fs) var(--subheader-sm-fs);\n}\n\n.btn-edit-list, .btn-delete-list {\n    background-color: var(--ct-light);\n    filter: var(--filter-light);\n    border: 0 none;\n    border-radius: 50%;\n    width: var(--subheader-sm-fs);\n    height: var(--subheader-sm-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-list {\n    margin-right: 3px;\n}\n\n.btn-edit-list:hover, .btn-delete-list:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-list:hover {\n    background-color: var(--ct-blue);\n    filter: unset;\n}\n\n.btn-delete-list:hover {\n    background-color: var(--ct-numix);\n    filter: unset;\n}\n\n/* --------------------- main panel -------------------- */\n.main-content {\n    grid-area: main-content;\n    background-color: var(--ct-light);\n    padding: 1rem;\n    display: grid;\n    grid-template: 4rem 1fr / 1fr;\n    grid-template-areas:\n        "parent-list-name"\n        "tasks-grid";\n}\n\n.main-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n}\n\n.popup-task {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    height: fit-content;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    grid-area: parent-list-name;\n}\n\n.popup-task > .form-container > label {\n    color: var(--ct-light);\n    width: 100%;\n    text-align: left;\n    margin-top: 0.5rem;\n}\n\n.popup-task > .form-container > input:nth-last-child(3) {\n    margin-bottom: 1rem;\n}\n\n.tasks-section {\n    grid-area: tasks-grid;\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 1rem; */\n    overflow-y: auto;\n}\n\n.task-container {\n    margin-bottom: 1rem;\n    width: 100%;\n    border: 1px solid var(--ct-grey);\n    border-radius: 10px;\n    padding: 0.5rem 1rem;\n    display: grid;\n    grid-template: var(--taskRow-h) var(--taskRow-h) calc(var(--taskRow-h) * 2) / 4fr 1fr 1fr;\n    grid-template-areas:\n        "taskName taskEdit taskDelete"\n        "taskDateAndParent taskDateAndParent taskDateAndParent"\n        "taskDesc taskDesc taskDesc";\n}\n\n.task-name {\n    grid-area: taskName;\n    overflow: auto;\n    font-size: var(--subheader-fs);\n}\n\n.task-desc {\n    grid-area: taskDesc;\n    overflow: auto;\n}\n\n.task-date-list-info {\n    grid-area: taskDateAndParent;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1rem;\n}\n\n.btn-edit-task, .btn-delete-task {\n    background-color: var(--ct-light);\n    /* filter: var(--filter-darker); */\n    border: 0 none;\n    width: var(--header-fs);\n    height: var(--header-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-task:hover, .btn-delete-task:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-task:hover {\n    background-color: var(--ct-blue);\n}\n\n.btn-delete-task:hover {\n    background-color: var(--ct-numix);\n}\n\n.btn-edit-task {\n    grid-area: taskEdit;\n}\n\n.btn-delete-task {\n    grid-area: taskDelete;\n}\n\n.task-controls {\n    width: var(--subheader-fs)\n}\n\n.task-priority-low {\n    border-color: var(--ct-white);\n    box-shadow: inset 0 0 10px 0 var(--ct-white);\n}\n\n.task-priority-medium {\n    border-color: var(--ct-blue);\n    box-shadow: inset 0 0 10px 0 var(--ct-blue);\n}\n\n.task-priority-high {\n    border-color: var(--ct-numix);\n    box-shadow: inset 0 0 10px 0 var(--ct-numix);\n}\n/* --------------------- Footer -------------------- */\nfooter {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--ct-darker);\n}\n\nfooter > .github-contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: 0.5rem;\n    text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n    width: var(--logo-fs);\n    filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n    font-size: var(--logo-fs);\n    color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n    color: var(--ct-numix);\n}\n\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --logo-fs: 1.4rem;\n        --navbar-fs: 1rem;\n        --header-fs: 1.9rem;\n        --subheader-fs: 1.5rem;\n        --subheader-sm-fs: 1.4rem;\n        --content-fs: 1rem;\n    }\n\n    .app-name {\n        display: block;\n    }\n\n    .btn-icon-label {\n        font-size: var(--navbar-fs);\n        gap: 0.5rem;\n        padding: 0.5rem 1rem 0.5rem 0.5rem;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --logo-fs: 1.5rem;\n        --navbar-fs: 1.1rem;\n        --header-fs: 2rem;\n        --subheader-fs: 1.6rem;\n        --subheader-sm-fs: 1.5rem;\n        --content-fs: 1rem;\n\n        /* Elements height */\n        --side-panel-length: min(14rem, 40%);\n        --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n    }\n\n    body {\n        grid-template:\n            var(--navbar-h) var(--content-h) var(--footer-h) / var(\n                --side-panel-length\n            )\n            1fr;\n        grid-template-areas:\n            "navbar navbar"\n            "side-panel main-content"\n            "footer footer";\n    }\n\n    .hidden {\n        grid-template-areas:\n            "navbar navbar"\n            "main-content main-content"\n            "footer footer";\n    }\n\n    .side-panel {\n        animation: slideRight 0.5s;\n    }\n\n    .task-container {\n        grid-template: var(--taskRow-h) var(--taskRow-h) / 2fr 3fr 1fr;\n        grid-template-areas:\n            "taskName taskDesc taskEdit"\n            "taskDateAndParent taskDesc taskDelete";\n    }\n\n    .task-desc {\n        padding-left: 1rem;\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    0% {\n        transform: translate(0, -100%);\n    }\n    100% {\n        transform: translate(0, 0);\n    }\n}\n\n@keyframes slideRight {\n    0% {\n        transform: translate(-100%);\n    }\n    100% {\n        transform: translate(0);\n    }\n}\n\n@keyframes scaleX {\n    0% {\n        transform: scaleX(0);\n    }\n    100% {\n        transform: scaleX(100%);\n    }\n}\n'],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);a&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},o=[],s=0;s<n.length;s++){var d=n[s],A=a.base?d[0]+a.base:d[0],c=i[A]||0,l="".concat(A," ").concat(c);i[A]=c+1;var p=t(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,a);a.byIndex=s,e.splice(s,0,{identifier:l,updater:u,references:1})}o.push(l)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=a(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=t(i[o]);e[s].references--}for(var d=a(n,r),A=0;A<i.length;A++){var c=t(i[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var i=e[a]={id:a,exports:{}};return n[a](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!n;)n=a[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"34b6d4f73e126d6b67d3.svg",e=t.p+"6272eb45ad17559332c9.svg",a=t.p+"6d4f8d6e9335a6ad1b70.svg",r=t.p+"4378e7db70c0a08749bc.svg",i=t.p+"0714a8b8a10131b7ef5f.svg",o=t.p+"1766b7bc2dabaa983863.svg",s=t.p+"a616c2e47378174c9635.svg",d=t.p+"3a6d73eb09b146db3363.svg",A=t.p+"4275c76a6db68c66d788.svg",c=t.p+"20eafb8bf8283f483a6e.svg";class l{#n;#e;#t;#a;#r;#i;constructor(n,e="",t=_,a="General",r=m.MEDIUM){this.#n=n,this.#e=e,this.#t=t,this.#a=a,this.#r=r,this.#i="task_"+M()}get name(){return this.#n}set name(n){this.#n=n}get desc(){return this.#e}set desc(n){this.#e=n}get dueDate(){return this.#t}set dueDate(n){this.#t=n}get parentList(){return this.#a}set parentList(n){this.#a=n}get priority(){return this.#r}set priority(n){this.#r=n}get id(){return this.#i}}class p{#o;#s;constructor(n){this.#o=n,this.#s="list_"+M()}get name(){return this.#o}set name(n){this.#o=n}get id(){return this.#s}}const m=Object.freeze({LOW:-1,MEDIUM:0,HIGH:1});let u="anytime",C="";const g=[],f=[];function h(n){const e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new n.constructor(+n):"number"==typeof n||"[object Number]"===e||"string"==typeof n||"[object String]"===e?new Date(n):new Date(NaN)}function B(n){const e=h(n);return e.setHours(0,0,0,0),e}function I(n){return e=n,t=Date.now(),+B(e)==+B(t);var e,t}Math.pow(10,8);const v=864e5;function b(n){const e=h(n),t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),+n-+t}function k(n,e){const t=h(n),a=h(e),r=y(t,a),i=Math.abs(function(n,e){const t=B(n),a=B(e),r=+t-b(t),i=+a-b(a);return Math.round((r-i)/v)}(t,a));t.setDate(t.getDate()-r*i);const o=r*(i-Number(y(t,a)===-r));return 0===o?0:o}function y(n,e){const t=n.getFullYear()-e.getFullYear()||n.getMonth()-e.getMonth()||n.getDate()-e.getDate()||n.getHours()-e.getHours()||n.getMinutes()-e.getMinutes()||n.getSeconds()-e.getSeconds()||n.getMilliseconds()-e.getMilliseconds();return t<0?-1:t>0?1:t}function E(){return B(Date.now())}const _=new Date(864e12);let x="",w="";function D(){const n=this.id.slice(5),e=document.getElementById("parent_list_name_main_panel");e.textContent="-",f.forEach((t=>{console.log("listID = "+n),console.log("(element in array) list.id = "+t.id),console.log("(element in array) list.name = "+t.name),t.id==n&&(e.textContent=t.name)})),console.log("(punto 0) tasksProjectFilter in taskByProject(): "+C),C=n,console.log("(punto 1) tasksProjectFilter in taskByProject(): "+C),R(),document.getElementById(this.id).classList.add("sp-group-selected"),N()}function L(){document.getElementById("sp_g_home").classList.remove("sp-group-selected"),document.getElementById("sp_g_today").classList.remove("sp-group-selected"),document.getElementById("sp_g_upcoming").classList.remove("sp-group-selected"),document.getElementById("sp_g_anytime").classList.remove("sp-group-selected")}function j(){document.getElementById("new_task_popup").classList.toggle("popup-unhidden"),document.getElementById("new_task_input_name").value="",document.getElementById("new_task_input_desc").value="",document.getElementById("new_task_input_date").value="",document.getElementById("new_task_input_priority").value="",document.getElementById("new_task_input_parent_list").value="",x=""}function S(){document.getElementById("new_list_input_form").classList.toggle("popup-unhidden"),document.getElementById("new_list_input_field_text").value=""}function M(){return Math.floor(Math.random()*Date.now())}function N(){const n=document.getElementById("task_panel");let e;const t=[];switch(n.innerHTML="",u){case"today":e=g.filter((n=>I(h(n.dueDate))));break;case"upcoming":e=g.filter((n=>k(h(n.dueDate),E())<7&&k(h(n.dueDate),E())>=0));break;default:e=g}console.log("tasksProjectFilter in refreshtTaskView(): "+C),""==C?e.forEach((e=>{n.appendChild(z(e))})):(e.forEach((n=>{n.parentList==C&&t.push(n)})),t.forEach((e=>{n.appendChild(z(e))})))}function Q(){const n=document.getElementById("new_task_input_name"),e=document.getElementById("new_task_input_desc"),t=document.getElementById("new_task_input_date"),a=document.getElementById("new_task_input_priority"),r=document.getElementById("new_task_input_parent_list");let i=-1/0,o="";for(let n=0;n<g.length;n++)g[n].id===x&&(i=n);if(i>-1){const s=g[i];for(let n=0;n<f.length;n++)f[n].name==r.value&&(o=f[n].id);s.name=n.value,s.desc=e.value,s.dueDate=t.value,s.priority=a.value,s.parentList=o,console.log("Edited: "+x)}else{for(let n=0;n<f.length;n++)f[n].name==r.value&&(o=f[n].id);!function(n,e="",t=_,a="General",r=m.MEDIUM){const i=new l(n,e,t,a,r);g.push(i),console.log("New task added to array: "+i.id)}(n.value,e.value,t.value,o,a.value)}x="",j(),N()}function z(n){const e=document.createElement("div");switch(e.classList.add("task-container"),console.log("taskObject.priority: "+n.priority),parseInt(n.priority)){case-1:e.classList.add("task-priority-low");break;case 0:e.classList.add("task-priority-medium");break;case 1:e.classList.add("task-priority-high")}const t=document.createElement("h1");t.textContent=n.name,t.classList.add("task-name"),e.appendChild(t);const a=document.createElement("div");a.classList.add("task-date-list-info");const r=document.createElement("h3");r.classList.add("task-date"),r.textContent=n.dueDate,a.appendChild(r);const i=document.createElement("h3");i.classList.add("task-parent-list");for(let e=0;e<f.length;e++)f[e].id==n.parentList&&(i.textContent=f[e].name);a.appendChild(i),e.appendChild(a);const o=document.createElement("p");o.classList.add("task-desc"),o.textContent=n.desc,e.appendChild(o);const s=document.createElement("button");s.classList.add("btn-edit-task");const d=new Image;d.src=A,d.classList.add("task-controls"),d.setAttribute("editID",n.id),d.addEventListener("click",P),s.appendChild(d),e.appendChild(s);const l=document.createElement("button");l.classList.add("btn-delete-task");const p=new Image;return p.src=c,p.classList.add("task-controls"),p.id=n.id,p.addEventListener("click",T),l.appendChild(p),e.appendChild(l),e}function T(){for(let n=0;n<g.length;n++)if(g[n].id==this.id){g.splice(n,1),console.log("Deleted permanently: "+this.id);break}N()}function P(){let n=-1/0;x=this.getAttribute("editID");for(let e=0;e<g.length;e++)g[e].id===x&&(n=e);if(n>-1){const e=g[n],t=document.getElementById("new_task_input_name"),a=document.getElementById("new_task_input_desc"),r=document.getElementById("new_task_input_date"),i=document.getElementById("new_task_input_priority"),o=document.getElementById("new_task_input_parent_list");let s="";for(let n=0;n<f.length;n++)f[n].id==e.parentList&&(s=f[n].name);j(),x=this.getAttribute("editID"),t.value=e.name,a.value=e.desc,r.value=e.dueDate,i.value=e.priority,o.value=s,console.log("element.parentList: "+e.parentList),console.log("Popup refilled with: "+x)}}function R(){try{document.getElementById("sidePanel-lists").remove()}catch(n){console.log("element ID: sidePanel-lists DOES NOT EXIST")}const n=document.createElement("div");n.id="sidePanel-lists",f.forEach((e=>{n.appendChild(function(n){const e=document.createElement("div");e.classList.add("list-box");const t=document.createElement("div");t.id="sp_g_"+n.id,t.classList.add("sp-group"),t.addEventListener("click",D);const a=new Image;a.src=s,a.classList.add("sp-g-icon"),t.appendChild(a);const r=document.createElement("h3");r.classList.add("sp-g-label"),r.textContent=n.name,t.appendChild(r),e.appendChild(t);const i=document.createElement("button");i.classList.add("btn-edit-list");const o=new Image;o.src=A,o.classList.add("list-controls"),o.setAttribute("editID",n.id),o.addEventListener("click",O),i.appendChild(o),e.appendChild(i);const d=document.createElement("button");d.classList.add("btn-delete-list");const l=new Image;return l.src=c,l.classList.add("list-controls"),l.id=n.id,l.addEventListener("click",U),d.appendChild(l),e.appendChild(d),e}(e))})),document.getElementById("sidePanel").appendChild(n);try{document.getElementById("new_task_popup").remove(),document.body.appendChild(W()),document.getElementById("cancel_btn_task_form").addEventListener("click",j),document.getElementById("add_task_btn_form").addEventListener("click",Q)}catch(n){console.log("element ID: new_task_popup DOES NOT EXIST")}}function U(){for(let n=0;n<f.length;n++)if(f[n].id==this.id){f.splice(n,1),console.log("Deleted permanently: "+this.id);break}R()}function O(){let n=-1/0;w=this.getAttribute("editID");for(let e=0;e<f.length;e++)f[e].id===w&&(n=e);if(console.log(n),n>-1){const e=f[n],t=document.getElementById("new_list_input_field_text");document.getElementById("new_list_input_form").classList.remove("popup-unhidden"),S(),t.value=e.name,console.log("Popup refilled with: "+x)}}function W(){const n=document.createElement("div");n.id="new_task_popup",n.classList.add("popup-task");const e=document.createElement("form");e.classList.add("form-container"),e.action="javascript:void(0);";const t=document.createElement("h1");t.classList.add("popup-title"),t.textContent="Task properties",e.appendChild(t);const a=document.createElement("label");a.setAttribute("for","taskName"),a.textContent="Name",e.appendChild(a);const r=document.createElement("input");r.type="text",r.id="new_task_input_name",r.placeholder="New task name",r.name="taskName",r.required,e.appendChild(r);const i=document.createElement("label");i.setAttribute("for","taskDesc"),i.textContent="Description",e.appendChild(i);const o=document.createElement("input");o.type="text",o.id="new_task_input_desc",o.placeholder="Task description",o.name="taskDesc",e.appendChild(o);const s=document.createElement("label");s.setAttribute("for","taskDate"),s.textContent="Deadline",e.appendChild(s);const d=document.createElement("input");d.type="date",d.id="new_task_input_date",d.name="taskDate",e.appendChild(d);const A=document.createElement("label");A.setAttribute("for","new_task_input_priority"),A.textContent="Priority",e.appendChild(A);const c=document.createElement("select");c.id="new_task_input_priority",c.name="new_task_input_priority";const l=document.createElement("option");l.value=m.LOW,l.innerText="Low",c.appendChild(l);const p=document.createElement("option");p.value=m.MEDIUM,p.innerText="Medium",c.appendChild(p);const u=document.createElement("option");u.value=m.HIGH,u.innerText="High",c.appendChild(u),e.appendChild(c);const C=document.createElement("label");C.setAttribute("for","new_task_input_parent_list"),C.textContent="Project",e.appendChild(C);const g=document.createElement("select");g.id="new_task_input_parent_list",g.name="new_task_input_parent_list",f.forEach((n=>{g.appendChild(function(n){const e=document.createElement("option");return e.value=n.name,e.innerText=n.name,e}(n))})),e.appendChild(g);const h=document.createElement("input");h.type="submit",h.id="add_task_btn_form",h.classList.add("btn-form"),h.value="Accept",e.appendChild(h);const B=document.createElement("button");return B.type="button",B.id="cancel_btn_task_form",B.classList.add("btn-form","cancel"),B.textContent="Cancel",e.appendChild(B),n.appendChild(e),n}function q(n,e){const t=document.createElement("div");t.id="sp_g_"+n,t.classList.add("sp-group");const a=new Image;a.src=e,a.classList.add("sp-g-icon"),t.appendChild(a);const r=document.createElement("h3");return r.classList.add("sp-g-label"),r.textContent=n,t.appendChild(r),t}function F(n,e){const t=document.createElement("button");t.classList.add("btn-icon-label"),t.id="btn-"+n.toLowerCase().replace(" ","_"),t.textContent=n;const a=new Image;return a.src=e,t.appendChild(a),t}var X=t(379),H=t.n(X),G=t(795),Y=t.n(G),J=t(569),V=t.n(J),Z=t(565),$=t.n(Z),K=t(216),nn=t.n(K),en=t(589),tn=t.n(en),an=t(426),rn={};rn.styleTagTransform=tn(),rn.setAttributes=$(),rn.insert=V().bind(null,"head"),rn.domAPI=Y(),rn.insertStyleElement=nn(),H()(an.Z,rn),an.Z&&an.Z.locals&&an.Z.locals,function(){const t=document.body;t.appendChild(function(){const t=document.createElement("nav"),a=document.createElement("div");a.classList.add("title-container");const r=new Image;r.src=n,r.id="menuIcon",r.classList.add("logo"),a.appendChild(r);const i=document.createElement("h1");i.classList.add("app-name"),i.textContent="TO-DO x Hacer!",a.appendChild(i);const o=F("New task",e);return t.appendChild(a),t.appendChild(o),t}()),t.appendChild(function(){const n=document.createElement("aside");return n.classList.add("side-panel"),n.id="sidePanel",n.appendChild(F("new list",d)),n.appendChild(function(){const n=document.createElement("div");n.id="new_list_input_form",n.classList.add("popup");const e=document.createElement("form");e.classList.add("form-container");const t=document.createElement("h1");t.classList.add("popup-title"),t.textContent="List properties",e.appendChild(t);const a=document.createElement("input");a.type="text",a.id="new_list_input_field_text",a.placeholder="List name",a.name="listName",e.appendChild(a);const r=document.createElement("button");r.type="button",r.id="add_list_btn_form",r.classList.add("btn-form"),r.textContent="Accept",e.appendChild(r);const i=document.createElement("button");return i.type="button",i.id="cancel_btn_form",i.classList.add("btn-form"),i.classList.add("cancel"),i.textContent="Cancel",e.appendChild(i),n.appendChild(e),n}()),n.appendChild(q("home",r)),n.appendChild(q("today",i)),n.appendChild(q("upcoming",o)),n.appendChild(q("anytime",s)),n}()),R(),t.appendChild(function(){const n=document.createElement("main");n.classList.add("main-content"),n.id="main_content";const e=document.createElement("div");e.classList.add("main-title-container");const t=document.createElement("h1");t.textContent="Home",t.id="filter_date_title_main_panel",e.appendChild(t);const a=document.createElement("h3");a.textContent="All projects",a.id="parent_list_name_main_panel",e.appendChild(a),n.appendChild(e);const r=document.createElement("div");return r.id="task_panel",r.classList.add("tasks-section"),n.appendChild(r),n}()),t.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("a");e.classList.add("github-contact-info"),e.href="https://github.com/nico9506/TOP-todo";const t=new Image;t.src=a,t.classList.add("footer-logo"),e.appendChild(t);const r=document.createElement("h1");return r.classList.add("github-user"),r.id="githubUser",r.textContent="nico9506",e.appendChild(r),n.appendChild(e),n}()),t.appendChild(W()),N()}(),document.getElementById("menuIcon").addEventListener("click",(function(){document.body.classList.toggle("hidden"),document.getElementById("sidePanel").classList.toggle("side-panel-hidden")})),document.getElementById("btn-new_list").addEventListener("click",S),document.getElementById("cancel_btn_form").addEventListener("click",S),document.getElementById("btn-new_task").addEventListener("click",j),document.getElementById("cancel_btn_task_form").addEventListener("click",j),document.getElementById("add_task_btn_form").addEventListener("click",Q),document.getElementById("add_list_btn_form").addEventListener("click",(function(){const n=document.getElementById("new_list_input_field_text").value;let e=-1/0;for(let t=0;t<f.length;t++){if(f[t].name===n)return console.log("Error: TaskList (name) already created."),void alert("Name list currently in use!");f[t].id==w&&(e=t)}e>-1?f[e].name=n:f.push(new p(n)),w="",S(),R(),N()})),document.getElementById("sp_g_home").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Home",u="anytime",C="",L(),document.getElementById("sp_g_home").classList.add("sp-group-selected"),N(),R()})),document.getElementById("sp_g_today").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Today",u="today",L(),document.getElementById("sp_g_today").classList.add("sp-group-selected"),N()})),document.getElementById("sp_g_upcoming").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Upcoming",u="upcoming",L(),document.getElementById("sp_g_upcoming").classList.add("sp-group-selected"),N()})),document.getElementById("sp_g_anytime").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Anytime",u="anytime",L(),document.getElementById("sp_g_anytime").classList.add("sp-group-selected"),N()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bEIrRCxJQUVBbEosU0FBU3lJLGVBQWUsaUJBQWlCTSxVQUFVQyxJQUFJLHFCQUV2REMsR0FDSixJQTNGb0JqSixTQUFTeUksZUFBZSxnQkFDaEMyQyxpQkFBaUIsU0E0RjdCLFdBQ0lwTCxTQUFTeUksZUFBZSxnQ0FBZ0NDLFlBQ3BELFVBRUp2RCxFQUFrQixVQUlsQitELElBRUFsSixTQUFTeUksZUFBZSxnQkFBZ0JNLFVBQVVDLElBQUkscUJBRXREQyxHQUNKLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtdG9kby8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b3AtdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b3AtdG9kby93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b3AtdG9kby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvcC10b2RvL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3RvcC10b2RvL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b3AtdG9kby8uL3NyYy9tb2RlbC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy90b0RhdGUubWpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3N0YXJ0T2ZEYXkubWpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2lzVG9kYXkubWpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2lzU2FtZURheS5tanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29uc3RhbnRzLm1qcyIsIndlYnBhY2s6Ly90b3AtdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2dldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMubWpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkRheXMubWpzIiwid2VicGFjazovL3RvcC10b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cy5tanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvc3RhcnRPZlRvZGF5Lm1qcyIsIndlYnBhY2s6Ly90b3AtdG9kby8uL3NyYy9mdW5jdGlvbmFsaXRpZXMuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8vLi9zcmMvaG9tZS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b3AtdG9kby8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgOnJvb3Qge1xuICAgIC8qIENvbG9yIHRoZW1lICovXG4gICAgLS1jdC1kYXJrZXI6ICMyZDJkMmQ7XG4gICAgLS1jdC1kYXJrOiAjM2QzZDNkO1xuICAgIC0tY3QtZ3JleTogIzUzNTM1MztcbiAgICAtLWN0LW51bWl4OiAjZDY0OTM3O1xuICAgIC0tY3QtYmx1ZTogIzM3OWNkNjtcbiAgICAtLWN0LWdyZWVuOiAjNWNkNjM3O1xuICAgIC0tY3QtbGlnaHQ6ICNkY2RjZGM7XG4gICAgLS1jdC13aGl0ZTogI2ZmZmZmZjtcbiAgICAvKiBDb2xvciB0aGVtZSAoZmlsdGVyKSBmb3IgU1ZHIGltYWdlcyAqL1xuICAgIC0tZmlsdGVyLWRhcmtlcjogaW52ZXJ0KDExJSkgc2VwaWEoMCUpIHNhdHVyYXRlKDAlKSBodWUtcm90YXRlKDIxN2RlZylcbiAgICAgICAgYnJpZ2h0bmVzcygxMDIlKSBjb250cmFzdCg4NCUpO1xuICAgIC0tZmlsdGVyLWRhcms6IGludmVydCgxNSUpIHNlcGlhKDAlKSBzYXR1cmF0ZSgxMzI3JSkgaHVlLXJvdGF0ZSgyNzFkZWcpXG4gICAgICAgIGJyaWdodG5lc3MoMTAxJSkgY29udHJhc3QoNzQlKTtcbiAgICAtLWZpbHRlci1ncmV5OiBpbnZlcnQoMzIlKSBzZXBpYSgwJSkgc2F0dXJhdGUoMCUpIGh1ZS1yb3RhdGUoMzIwZGVnKVxuICAgICAgICBicmlnaHRuZXNzKDk1JSkgY29udHJhc3QoODklKTtcbiAgICAtLWZpbHRlci1udW1peDogaW52ZXJ0KDM0JSkgc2VwaWEoMjIlKSBzYXR1cmF0ZSg2NzczJSkgaHVlLXJvdGF0ZSgzNDVkZWcpXG4gICAgICAgIGJyaWdodG5lc3MoOTIlKSBjb250cmFzdCg4MCUpO1xuICAgIC0tZmlsdGVyLWxpZ2h0OiBpbnZlcnQoOTklKSBzZXBpYSgwJSkgc2F0dXJhdGUoNDAyOCUpIGh1ZS1yb3RhdGUoMTkzZGVnKVxuICAgICAgICBicmlnaHRuZXNzKDEyMyUpIGNvbnRyYXN0KDczJSk7XG4gICAgLS1maWx0ZXItd2hpdGU6IGludmVydCg5MyUpIHNlcGlhKDEwMCUpIHNhdHVyYXRlKDAlKSBodWUtcm90YXRlKDM3ZGVnKVxuICAgICAgICBicmlnaHRuZXNzKDEwNSUpIGNvbnRyYXN0KDEwMiUpO1xuXG4gICAgLyogRWxlbWVudHMgaGVpZ2h0ICovXG4gICAgLS1uYXZiYXItaDogMy44cmVtO1xuICAgIC0tc2lkZS1wYW5lbC1sZW5ndGg6IDE1cmVtO1xuICAgIC0tY29udGVudC1oOiBjYWxjKFxuICAgICAgICAxMDB2aCAtIHZhcigtLW5hdmJhci1oKSAtIHZhcigtLWZvb3Rlci1oKSAtIHZhcigtLXNpZGUtcGFuZWwtbGVuZ3RoKVxuICAgICk7XG4gICAgLS1mb290ZXItaDogM3JlbTtcblxuICAgIC8qIEZvbnQgc2l6ZSAqL1xuICAgIC0tbG9nby1mczogMS4zcmVtO1xuICAgIC0tbmF2YmFyLWZzOiAxcmVtO1xuICAgIC0taGVhZGVyLWZzOiAxLjhyZW07XG4gICAgLS1zdWJoZWFkZXItZnM6IDEuNHJlbTtcbiAgICAtLXN1YmhlYWRlci1zbS1mczogMS4zcmVtO1xuICAgIC0tY29udGVudC1mczogMC45cmVtO1xuXG4gICAgLS10YXNrUm93LWg6IDRyZW07XG59XG5cbioge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZm9udC1mYW1pbHk6IFwiTHVjaWRhIFNhbnNcIiwgXCJMdWNpZGEgU2FucyBSZWd1bGFyXCIsIFwiTHVjaWRhIEdyYW5kZVwiLFxuICAgICAgICBcIkx1Y2lkYSBTYW5zIFVuaWNvZGVcIiwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiB2YXIoLS1jdC1kYXJrZXIpO1xufVxuXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1ncmV5KTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6XG4gICAgICAgIHZhcigtLW5hdmJhci1oKSB2YXIoLS1zaWRlLXBhbmVsLWxlbmd0aCkgdmFyKC0tY29udGVudC1oKSB2YXIoXG4gICAgICAgICAgICAtLWZvb3Rlci1oXG4gICAgICAgIClcbiAgICAgICAgLyAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAgICAgXCJuYXZiYXJcIlxuICAgICAgICBcInNpZGUtcGFuZWxcIlxuICAgICAgICBcIm1haW4tY29udGVudFwiXG4gICAgICAgIFwiZm9vdGVyXCI7XG59XG5cbi5oaWRkZW4ge1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgIFwibmF2YmFyXCJcbiAgICAgICAgXCJtYWluLWNvbnRlbnRcIlxuICAgICAgICBcIm1haW4tY29udGVudFwiXG4gICAgICAgIFwiZm9vdGVyXCI7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBOYXYgYmFyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5uYXYge1xuICAgIGdyaWQtYXJlYTogbmF2YmFyO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XG4gICAgZm9udC1zaXplOiB2YXIoLS1uYXZiYXItZnMpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMCAxcmVtO1xufVxuXG4udGl0bGUtY29udGFpbmVyIHtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgaGVpZ2h0OiA5MCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubG9nbyB7XG4gICAgd2lkdGg6IHZhcigtLWxvZ28tZnMpO1xuICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICBmaWx0ZXI6IHZhcigtLWZpbHRlci1saWdodCk7XG59XG5cbi5sb2dvOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZmlsdGVyOiB2YXIoLS1maWx0ZXItbnVtaXgpO1xufVxuXG4uYXBwLW5hbWUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY29sb3I6IHZhcigtLWN0LWxpZ2h0KTtcbiAgICBmb250LWZhbWlseTogY3Vyc2l2ZSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC1zaXplOiB2YXIoLS1oZWFkZXItZnMpO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4uYnRuLWljb24tbGFiZWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAwcmVtO1xuICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICBmb250LXNpemU6IDA7IC8qMHB4IHRvIGhpZGUgdGhlIGxhYmVsKi9cbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgIGJvcmRlcjogMCBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWxpZ2h0KTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLmJ0bi1pY29uLWxhYmVsID4gaW1nIHtcbiAgICB3aWR0aDogdmFyKC0taGVhZGVyLWZzKTtcbiAgICBmaWx0ZXI6IHZhcigtLWZpbHRlci1kYXJrZXIpO1xufVxuXG4uYnRuLWljb24tbGFiZWw6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1udW1peCk7XG59XG5cbiNzcF9nX2hvbWUge1xuICAgIG1hcmdpbi10b3A6IDJyZW07XG59XG5cbiNzcF9nX2FueXRpbWUge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBTaWRlIHBhbmVsIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uc2lkZS1wYW5lbCB7XG4gICAgZ3JpZC1hcmVhOiBzaWRlLXBhbmVsO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWdyZXkpO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgYW5pbWF0aW9uOiBzbGlkZURvd24gMC41cztcbn1cblxuLnNpZGUtcGFuZWwtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4uc2lkZS1wYW5lbCA+IGgxIHtcbiAgICBjb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xufVxuXG4uc3AtZ3JvdXAge1xuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWZzKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMC41cmVtO1xuICAgIHBhZGRpbmctbGVmdDogMC41cmVtO1xufVxuXG4uc3AtZ3JvdXA6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1kYXJrKTtcbiAgICBib3JkZXI6IDBweCBzb2xpZCB2YXIoLS1jdC1kYXJrKTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uc3AtZ3JvdXAtc2VsZWN0ZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XG4gICAgYm9yZGVyOiAwcHggc29saWQgdmFyKC0tY3QtZGFya2VyKTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uc3AtZ3JvdXAgPiAuc3AtZy1pY29uIHtcbiAgICB3aWR0aDogdmFyKC0tc3ViaGVhZGVyLWZzKTtcbiAgICBmaWx0ZXI6IHZhcigtLWZpbHRlci1saWdodCk7XG59XG5cbi5zcC1ncm91cCA+IC5zcC1nLWxhYmVsIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICBjb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xufVxuXG4ucG9wdXAge1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB3aWR0aDogbWluKDEwMCUsIDE4cmVtKTtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4ucG9wdXAtdW5oaWRkZW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgYW5pbWF0aW9uOiBzY2FsZVggMC41cztcbn1cblxuLnBvcHVwLXRpdGxlIHtcbiAgICBjb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tbmF2YmFyLWZzKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDAuNXJlbTtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gaW5wdXQsIC5mb3JtLWNvbnRhaW5lciA+IHNlbGVjdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiB2YXIoLS1jb250ZW50LWZzKTtcbn1cblxuLmZvcm0tY29udGFpbmVyID4gLmJ0bi1mb3JtIHtcbiAgICB3aWR0aDogNDclO1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tY29udGVudC1mcyk7XG59XG5cbi5mb3JtLWNvbnRhaW5lciA+IC5idG4tZm9ybTpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWdyZWVuKTtcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jdC1ncmVlbik7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuLmZvcm0tY29udGFpbmVyID4gLmNhbmNlbDpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtbnVtaXgpO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWN0LW51bWl4KTtcbn1cblxuLmxpc3QtYm94IHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IDFmciAvIDFmciB2YXIoLS1zdWJoZWFkZXItc20tZnMpIHZhcigtLXN1YmhlYWRlci1zbS1mcyk7XG59XG5cbi5idG4tZWRpdC1saXN0LCAuYnRuLWRlbGV0ZS1saXN0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1saWdodCk7XG4gICAgZmlsdGVyOiB2YXIoLS1maWx0ZXItbGlnaHQpO1xuICAgIGJvcmRlcjogMCBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB3aWR0aDogdmFyKC0tc3ViaGVhZGVyLXNtLWZzKTtcbiAgICBoZWlnaHQ6IHZhcigtLXN1YmhlYWRlci1zbS1mcyk7XG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuXG4uYnRuLWVkaXQtbGlzdCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAzcHg7XG59XG5cbi5idG4tZWRpdC1saXN0OmhvdmVyLCAuYnRuLWRlbGV0ZS1saXN0OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbn1cblxuLmJ0bi1lZGl0LWxpc3Q6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWJsdWUpO1xuICAgIGZpbHRlcjogdW5zZXQ7XG59XG5cbi5idG4tZGVsZXRlLWxpc3Q6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LW51bWl4KTtcbiAgICBmaWx0ZXI6IHVuc2V0O1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0gbWFpbiBwYW5lbCAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLm1haW4tY29udGVudCB7XG4gICAgZ3JpZC1hcmVhOiBtYWluLWNvbnRlbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlOiA0cmVtIDFmciAvIDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxuICAgICAgICBcInBhcmVudC1saXN0LW5hbWVcIlxuICAgICAgICBcInRhc2tzLWdyaWRcIjtcbn1cblxuLm1haW4tdGl0bGUtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6IDAgMXJlbTtcbn1cblxuLnBvcHVwLXRhc2sge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB3aWR0aDogbWluKDEwMCUsIDE4cmVtKTtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4ucG9wdXAtdGl0bGUge1xuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XG4gICAgZ3JpZC1hcmVhOiBwYXJlbnQtbGlzdC1uYW1lO1xufVxuXG4ucG9wdXAtdGFzayA+IC5mb3JtLWNvbnRhaW5lciA+IGxhYmVsIHtcbiAgICBjb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWFyZ2luLXRvcDogMC41cmVtO1xufVxuXG4ucG9wdXAtdGFzayA+IC5mb3JtLWNvbnRhaW5lciA+IGlucHV0Om50aC1sYXN0LWNoaWxkKDMpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4udGFza3Mtc2VjdGlvbiB7XG4gICAgZ3JpZC1hcmVhOiB0YXNrcy1ncmlkO1xuICAgIC8qIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGdhcDogMXJlbTsgKi9cbiAgICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4udGFzay1jb250YWluZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY3QtZ3JleSk7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IHZhcigtLXRhc2tSb3ctaCkgdmFyKC0tdGFza1Jvdy1oKSBjYWxjKHZhcigtLXRhc2tSb3ctaCkgKiAyKSAvIDRmciAxZnIgMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgIFwidGFza05hbWUgdGFza0VkaXQgdGFza0RlbGV0ZVwiXG4gICAgICAgIFwidGFza0RhdGVBbmRQYXJlbnQgdGFza0RhdGVBbmRQYXJlbnQgdGFza0RhdGVBbmRQYXJlbnRcIlxuICAgICAgICBcInRhc2tEZXNjIHRhc2tEZXNjIHRhc2tEZXNjXCI7XG59XG5cbi50YXNrLW5hbWUge1xuICAgIGdyaWQtYXJlYTogdGFza05hbWU7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgZm9udC1zaXplOiB2YXIoLS1zdWJoZWFkZXItZnMpO1xufVxuXG4udGFzay1kZXNjIHtcbiAgICBncmlkLWFyZWE6IHRhc2tEZXNjO1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4udGFzay1kYXRlLWxpc3QtaW5mbyB7XG4gICAgZ3JpZC1hcmVhOiB0YXNrRGF0ZUFuZFBhcmVudDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMXJlbTtcbn1cblxuLmJ0bi1lZGl0LXRhc2ssIC5idG4tZGVsZXRlLXRhc2sge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWxpZ2h0KTtcbiAgICAvKiBmaWx0ZXI6IHZhcigtLWZpbHRlci1kYXJrZXIpOyAqL1xuICAgIGJvcmRlcjogMCBub25lO1xuICAgIHdpZHRoOiB2YXIoLS1oZWFkZXItZnMpO1xuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWZzKTtcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi5idG4tZWRpdC10YXNrOmhvdmVyLCAuYnRuLWRlbGV0ZS10YXNrOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbn1cblxuLmJ0bi1lZGl0LXRhc2s6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWJsdWUpO1xufVxuXG4uYnRuLWRlbGV0ZS10YXNrOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1udW1peCk7XG59XG5cbi5idG4tZWRpdC10YXNrIHtcbiAgICBncmlkLWFyZWE6IHRhc2tFZGl0O1xufVxuXG4uYnRuLWRlbGV0ZS10YXNrIHtcbiAgICBncmlkLWFyZWE6IHRhc2tEZWxldGU7XG59XG5cbi50YXNrLWNvbnRyb2xzIHtcbiAgICB3aWR0aDogdmFyKC0tc3ViaGVhZGVyLWZzKVxufVxuXG4udGFzay1wcmlvcml0eS1sb3cge1xuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY3Qtd2hpdGUpO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAxMHB4IDAgdmFyKC0tY3Qtd2hpdGUpO1xufVxuXG4udGFzay1wcmlvcml0eS1tZWRpdW0ge1xuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY3QtYmx1ZSk7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwcHggMCB2YXIoLS1jdC1ibHVlKTtcbn1cblxuLnRhc2stcHJpb3JpdHktaGlnaCB7XG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jdC1udW1peCk7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwcHggMCB2YXIoLS1jdC1udW1peCk7XG59XG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0gRm9vdGVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5mb290ZXIge1xuICAgIGdyaWQtYXJlYTogZm9vdGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1kYXJrZXIpO1xufVxuXG5mb290ZXIgPiAuZ2l0aHViLWNvbnRhY3QtaW5mbyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICAgIGdhcDogMC41cmVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuZm9vdGVyID4gLmdpdGh1Yi1jb250YWN0LWluZm8gPiAuZm9vdGVyLWxvZ28ge1xuICAgIHdpZHRoOiB2YXIoLS1sb2dvLWZzKTtcbiAgICBmaWx0ZXI6IHZhcigtLWZpbHRlci1udW1peCk7XG59XG5cbmZvb3RlciA+IC5naXRodWItY29udGFjdC1pbmZvID4gLmdpdGh1Yi11c2VyIHtcbiAgICBmb250LXNpemU6IHZhcigtLWxvZ28tZnMpO1xuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XG59XG5cbmZvb3RlciA+IC5naXRodWItY29udGFjdC1pbmZvID4gLmdpdGh1Yi11c2VyOmhvdmVyIHtcbiAgICBjb2xvcjogdmFyKC0tY3QtbnVtaXgpO1xufVxuXG4vKiAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy8gKi9cbi8qIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vLyAqL1xuLyogLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vICovXG5cbi8qIEV4dHJhIHNtYWxsIGRldmljZXMgKHBob25lcywgNjAwcHggYW5kIGRvd24pICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG59XG4vKiBTbWFsbCBkZXZpY2VzIChwb3J0cmFpdCB0YWJsZXRzIGFuZCBsYXJnZSBwaG9uZXMsIDYwMHB4IGFuZCB1cCkgKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgICA6cm9vdCB7XG4gICAgICAgIC0tbG9nby1mczogMS40cmVtO1xuICAgICAgICAtLW5hdmJhci1mczogMXJlbTtcbiAgICAgICAgLS1oZWFkZXItZnM6IDEuOXJlbTtcbiAgICAgICAgLS1zdWJoZWFkZXItZnM6IDEuNXJlbTtcbiAgICAgICAgLS1zdWJoZWFkZXItc20tZnM6IDEuNHJlbTtcbiAgICAgICAgLS1jb250ZW50LWZzOiAxcmVtO1xuICAgIH1cblxuICAgIC5hcHAtbmFtZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC5idG4taWNvbi1sYWJlbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tbmF2YmFyLWZzKTtcbiAgICAgICAgZ2FwOiAwLjVyZW07XG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtIDAuNXJlbSAwLjVyZW07XG4gICAgfVxufVxuLyogTWVkaXVtIGRldmljZXMgKGxhbmRzY2FwZSB0YWJsZXRzLCA3NjhweCBhbmQgdXApICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgOnJvb3Qge1xuICAgICAgICAtLWxvZ28tZnM6IDEuNXJlbTtcbiAgICAgICAgLS1uYXZiYXItZnM6IDEuMXJlbTtcbiAgICAgICAgLS1oZWFkZXItZnM6IDJyZW07XG4gICAgICAgIC0tc3ViaGVhZGVyLWZzOiAxLjZyZW07XG4gICAgICAgIC0tc3ViaGVhZGVyLXNtLWZzOiAxLjVyZW07XG4gICAgICAgIC0tY29udGVudC1mczogMXJlbTtcblxuICAgICAgICAvKiBFbGVtZW50cyBoZWlnaHQgKi9cbiAgICAgICAgLS1zaWRlLXBhbmVsLWxlbmd0aDogbWluKDE0cmVtLCA0MCUpO1xuICAgICAgICAtLWNvbnRlbnQtaDogY2FsYygxMDB2aCAtIHZhcigtLW5hdmJhci1oKSAtIHZhcigtLWZvb3Rlci1oKSk7XG4gICAgfVxuXG4gICAgYm9keSB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGU6XG4gICAgICAgICAgICB2YXIoLS1uYXZiYXItaCkgdmFyKC0tY29udGVudC1oKSB2YXIoLS1mb290ZXItaCkgLyB2YXIoXG4gICAgICAgICAgICAgICAgLS1zaWRlLXBhbmVsLWxlbmd0aFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgMWZyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxuICAgICAgICAgICAgXCJuYXZiYXIgbmF2YmFyXCJcbiAgICAgICAgICAgIFwic2lkZS1wYW5lbCBtYWluLWNvbnRlbnRcIlxuICAgICAgICAgICAgXCJmb290ZXIgZm9vdGVyXCI7XG4gICAgfVxuXG4gICAgLmhpZGRlbiB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcIm5hdmJhciBuYXZiYXJcIlxuICAgICAgICAgICAgXCJtYWluLWNvbnRlbnQgbWFpbi1jb250ZW50XCJcbiAgICAgICAgICAgIFwiZm9vdGVyIGZvb3RlclwiO1xuICAgIH1cblxuICAgIC5zaWRlLXBhbmVsIHtcbiAgICAgICAgYW5pbWF0aW9uOiBzbGlkZVJpZ2h0IDAuNXM7XG4gICAgfVxuXG4gICAgLnRhc2stY29udGFpbmVyIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZTogdmFyKC0tdGFza1Jvdy1oKSB2YXIoLS10YXNrUm93LWgpIC8gMmZyIDNmciAxZnI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcInRhc2tOYW1lIHRhc2tEZXNjIHRhc2tFZGl0XCJcbiAgICAgICAgICAgIFwidGFza0RhdGVBbmRQYXJlbnQgdGFza0Rlc2MgdGFza0RlbGV0ZVwiO1xuICAgIH1cblxuICAgIC50YXNrLWRlc2Mge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgfVxufVxuLyogTGFyZ2UgZGV2aWNlcyAobGFwdG9wcy9kZXNrdG9wcywgOTkycHggYW5kIHVwKSAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xufVxuLyogRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgbGFwdG9wcyBhbmQgZGVza3RvcHMsIDEyMDBweCBhbmQgdXApICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQW5pbWF0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgdG8ge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyBzbGlkZURvd24ge1xuICAgIDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTEwMCUpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlUmlnaHQge1xuICAgIDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNjYWxlWCB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEwMCUpO1xuICAgIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLHdDQUF3QztJQUN4QztzQ0FDa0M7SUFDbEM7c0NBQ2tDO0lBQ2xDO3FDQUNpQztJQUNqQztxQ0FDaUM7SUFDakM7c0NBQ2tDO0lBQ2xDO3VDQUNtQzs7SUFFbkMsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUI7O0tBRUM7SUFDRCxnQkFBZ0I7O0lBRWhCLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLG9CQUFvQjs7SUFFcEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxVQUFVO0lBQ1Y7MERBQ3NEO0lBQ3RELHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGdDQUFnQztJQUNoQyxhQUFhO0lBQ2I7Ozs7YUFJUztJQUNUOzs7O2dCQUlZO0FBQ2hCOztBQUVBO0lBQ0k7Ozs7Z0JBSVk7QUFDaEI7O0FBRUEsdURBQXVEO0FBQ3ZEO0lBQ0ksaUJBQWlCO0lBQ2pCLGtDQUFrQztJQUNsQywyQkFBMkI7SUFDM0IsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7SUFDbkIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksZUFBZTtJQUNmLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7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ZW50XCI6W1wiOnJvb3Qge1xcbiAgICAvKiBDb2xvciB0aGVtZSAqL1xcbiAgICAtLWN0LWRhcmtlcjogIzJkMmQyZDtcXG4gICAgLS1jdC1kYXJrOiAjM2QzZDNkO1xcbiAgICAtLWN0LWdyZXk6ICM1MzUzNTM7XFxuICAgIC0tY3QtbnVtaXg6ICNkNjQ5Mzc7XFxuICAgIC0tY3QtYmx1ZTogIzM3OWNkNjtcXG4gICAgLS1jdC1ncmVlbjogIzVjZDYzNztcXG4gICAgLS1jdC1saWdodDogI2RjZGNkYztcXG4gICAgLS1jdC13aGl0ZTogI2ZmZmZmZjtcXG4gICAgLyogQ29sb3IgdGhlbWUgKGZpbHRlcikgZm9yIFNWRyBpbWFnZXMgKi9cXG4gICAgLS1maWx0ZXItZGFya2VyOiBpbnZlcnQoMTElKSBzZXBpYSgwJSkgc2F0dXJhdGUoMCUpIGh1ZS1yb3RhdGUoMjE3ZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcygxMDIlKSBjb250cmFzdCg4NCUpO1xcbiAgICAtLWZpbHRlci1kYXJrOiBpbnZlcnQoMTUlKSBzZXBpYSgwJSkgc2F0dXJhdGUoMTMyNyUpIGh1ZS1yb3RhdGUoMjcxZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcygxMDElKSBjb250cmFzdCg3NCUpO1xcbiAgICAtLWZpbHRlci1ncmV5OiBpbnZlcnQoMzIlKSBzZXBpYSgwJSkgc2F0dXJhdGUoMCUpIGh1ZS1yb3RhdGUoMzIwZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcyg5NSUpIGNvbnRyYXN0KDg5JSk7XFxuICAgIC0tZmlsdGVyLW51bWl4OiBpbnZlcnQoMzQlKSBzZXBpYSgyMiUpIHNhdHVyYXRlKDY3NzMlKSBodWUtcm90YXRlKDM0NWRlZylcXG4gICAgICAgIGJyaWdodG5lc3MoOTIlKSBjb250cmFzdCg4MCUpO1xcbiAgICAtLWZpbHRlci1saWdodDogaW52ZXJ0KDk5JSkgc2VwaWEoMCUpIHNhdHVyYXRlKDQwMjglKSBodWUtcm90YXRlKDE5M2RlZylcXG4gICAgICAgIGJyaWdodG5lc3MoMTIzJSkgY29udHJhc3QoNzMlKTtcXG4gICAgLS1maWx0ZXItd2hpdGU6IGludmVydCg5MyUpIHNlcGlhKDEwMCUpIHNhdHVyYXRlKDAlKSBodWUtcm90YXRlKDM3ZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcygxMDUlKSBjb250cmFzdCgxMDIlKTtcXG5cXG4gICAgLyogRWxlbWVudHMgaGVpZ2h0ICovXFxuICAgIC0tbmF2YmFyLWg6IDMuOHJlbTtcXG4gICAgLS1zaWRlLXBhbmVsLWxlbmd0aDogMTVyZW07XFxuICAgIC0tY29udGVudC1oOiBjYWxjKFxcbiAgICAgICAgMTAwdmggLSB2YXIoLS1uYXZiYXItaCkgLSB2YXIoLS1mb290ZXItaCkgLSB2YXIoLS1zaWRlLXBhbmVsLWxlbmd0aClcXG4gICAgKTtcXG4gICAgLS1mb290ZXItaDogM3JlbTtcXG5cXG4gICAgLyogRm9udCBzaXplICovXFxuICAgIC0tbG9nby1mczogMS4zcmVtO1xcbiAgICAtLW5hdmJhci1mczogMXJlbTtcXG4gICAgLS1oZWFkZXItZnM6IDEuOHJlbTtcXG4gICAgLS1zdWJoZWFkZXItZnM6IDEuNHJlbTtcXG4gICAgLS1zdWJoZWFkZXItc20tZnM6IDEuM3JlbTtcXG4gICAgLS1jb250ZW50LWZzOiAwLjlyZW07XFxuXFxuICAgIC0tdGFza1Jvdy1oOiA0cmVtO1xcbn1cXG5cXG4qIHtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBmb250LWZhbWlseTogXFxcIkx1Y2lkYSBTYW5zXFxcIiwgXFxcIkx1Y2lkYSBTYW5zIFJlZ3VsYXJcXFwiLCBcXFwiTHVjaWRhIEdyYW5kZVxcXCIsXFxuICAgICAgICBcXFwiTHVjaWRhIFNhbnMgVW5pY29kZVxcXCIsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcXG4gICAgY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XFxufVxcblxcbmJvZHkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1ncmV5KTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZTpcXG4gICAgICAgIHZhcigtLW5hdmJhci1oKSB2YXIoLS1zaWRlLXBhbmVsLWxlbmd0aCkgdmFyKC0tY29udGVudC1oKSB2YXIoXFxuICAgICAgICAgICAgLS1mb290ZXItaFxcbiAgICAgICAgKVxcbiAgICAgICAgLyAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxuICAgICAgICBcXFwibmF2YmFyXFxcIlxcbiAgICAgICAgXFxcInNpZGUtcGFuZWxcXFwiXFxuICAgICAgICBcXFwibWFpbi1jb250ZW50XFxcIlxcbiAgICAgICAgXFxcImZvb3RlclxcXCI7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxcbiAgICAgICAgXFxcIm5hdmJhclxcXCJcXG4gICAgICAgIFxcXCJtYWluLWNvbnRlbnRcXFwiXFxuICAgICAgICBcXFwibWFpbi1jb250ZW50XFxcIlxcbiAgICAgICAgXFxcImZvb3RlclxcXCI7XFxufVxcblxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBOYXYgYmFyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxubmF2IHtcXG4gICAgZ3JpZC1hcmVhOiBuYXZiYXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XFxuICAgIGZvbnQtc2l6ZTogdmFyKC0tbmF2YmFyLWZzKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAwIDFyZW07XFxufVxcblxcbi50aXRsZS1jb250YWluZXIge1xcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxuICAgIGhlaWdodDogOTAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubG9nbyB7XFxuICAgIHdpZHRoOiB2YXIoLS1sb2dvLWZzKTtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xcbiAgICBmaWx0ZXI6IHZhcigtLWZpbHRlci1saWdodCk7XFxufVxcblxcbi5sb2dvOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBmaWx0ZXI6IHZhcigtLWZpbHRlci1udW1peCk7XFxufVxcblxcbi5hcHAtbmFtZSB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxuICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICAgIGZvbnQtc2l6ZTogdmFyKC0taGVhZGVyLWZzKTtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxufVxcblxcbi5idG4taWNvbi1sYWJlbCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAwcmVtO1xcbiAgICBwYWRkaW5nOiAwLjVyZW07XFxuICAgIGZvbnQtc2l6ZTogMDsgLyowcHggdG8gaGlkZSB0aGUgbGFiZWwqL1xcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xcbiAgICBib3JkZXI6IDAgbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcXG59XFxuXFxuLmJ0bi1pY29uLWxhYmVsID4gaW1nIHtcXG4gICAgd2lkdGg6IHZhcigtLWhlYWRlci1mcyk7XFxuICAgIGZpbHRlcjogdmFyKC0tZmlsdGVyLWRhcmtlcik7XFxufVxcblxcbi5idG4taWNvbi1sYWJlbDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtbnVtaXgpO1xcbn1cXG5cXG4jc3BfZ19ob21lIHtcXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcXG59XFxuXFxuI3NwX2dfYW55dGltZSB7XFxuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XFxufVxcblxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBTaWRlIHBhbmVsIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxuLnNpZGUtcGFuZWwge1xcbiAgICBncmlkLWFyZWE6IHNpZGUtcGFuZWw7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWdyZXkpO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgYW5pbWF0aW9uOiBzbGlkZURvd24gMC41cztcXG59XFxuXFxuLnNpZGUtcGFuZWwtaGlkZGVuIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnNpZGUtcGFuZWwgPiBoMSB7XFxuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxufVxcblxcbi5zcC1ncm91cCB7XFxuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWZzKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XFxufVxcblxcbi5zcC1ncm91cDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtZGFyayk7XFxuICAgIGJvcmRlcjogMHB4IHNvbGlkIHZhcigtLWN0LWRhcmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG5cXG4uc3AtZ3JvdXAtc2VsZWN0ZWQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1kYXJrZXIpO1xcbiAgICBib3JkZXI6IDBweCBzb2xpZCB2YXIoLS1jdC1kYXJrZXIpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG5cXG4uc3AtZ3JvdXAgPiAuc3AtZy1pY29uIHtcXG4gICAgd2lkdGg6IHZhcigtLXN1YmhlYWRlci1mcyk7XFxuICAgIGZpbHRlcjogdmFyKC0tZmlsdGVyLWxpZ2h0KTtcXG59XFxuXFxuLnNwLWdyb3VwID4gLnNwLWctbGFiZWwge1xcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcXG4gICAgY29sb3I6IHZhcigtLWN0LWxpZ2h0KTtcXG59XFxuXFxuLnBvcHVwIHtcXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcXG4gICAgcGFkZGluZzogMC41cmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1kYXJrZXIpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICB3aWR0aDogbWluKDEwMCUsIDE4cmVtKTtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnBvcHVwLXVuaGlkZGVuIHtcXG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcXG4gICAgYW5pbWF0aW9uOiBzY2FsZVggMC41cztcXG59XFxuXFxuLnBvcHVwLXRpdGxlIHtcXG4gICAgY29sb3I6IHZhcigtLWN0LWxpZ2h0KTtcXG4gICAgZm9udC1zaXplOiB2YXIoLS1uYXZiYXItZnMpO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4uZm9ybS1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IDAuNXJlbTtcXG59XFxuXFxuLmZvcm0tY29udGFpbmVyID4gaW5wdXQsIC5mb3JtLWNvbnRhaW5lciA+IHNlbGVjdCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBmb250LXNpemU6IHZhcigtLWNvbnRlbnQtZnMpO1xcbn1cXG5cXG4uZm9ybS1jb250YWluZXIgPiAuYnRuLWZvcm0ge1xcbiAgICB3aWR0aDogNDclO1xcbiAgICBmb250LXNpemU6IHZhcigtLWNvbnRlbnQtZnMpO1xcbn1cXG5cXG4uZm9ybS1jb250YWluZXIgPiAuYnRuLWZvcm06aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWdyZWVuKTtcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY3QtZ3JlZW4pO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcbi5mb3JtLWNvbnRhaW5lciA+IC5jYW5jZWw6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1udW1peCk7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWN0LW51bWl4KTtcXG59XFxuXFxuLmxpc3QtYm94IHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZTogMWZyIC8gMWZyIHZhcigtLXN1YmhlYWRlci1zbS1mcykgdmFyKC0tc3ViaGVhZGVyLXNtLWZzKTtcXG59XFxuXFxuLmJ0bi1lZGl0LWxpc3QsIC5idG4tZGVsZXRlLWxpc3Qge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxuICAgIGZpbHRlcjogdmFyKC0tZmlsdGVyLWxpZ2h0KTtcXG4gICAgYm9yZGVyOiAwIG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gICAgd2lkdGg6IHZhcigtLXN1YmhlYWRlci1zbS1mcyk7XFxuICAgIGhlaWdodDogdmFyKC0tc3ViaGVhZGVyLXNtLWZzKTtcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuLmJ0bi1lZGl0LWxpc3Qge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDNweDtcXG59XFxuXFxuLmJ0bi1lZGl0LWxpc3Q6aG92ZXIsIC5idG4tZGVsZXRlLWxpc3Q6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XFxufVxcblxcbi5idG4tZWRpdC1saXN0OmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtYmx1ZSk7XFxuICAgIGZpbHRlcjogdW5zZXQ7XFxufVxcblxcbi5idG4tZGVsZXRlLWxpc3Q6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1udW1peCk7XFxuICAgIGZpbHRlcjogdW5zZXQ7XFxufVxcblxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBtYWluIHBhbmVsIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxuLm1haW4tY29udGVudCB7XFxuICAgIGdyaWQtYXJlYTogbWFpbi1jb250ZW50O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGU6IDRyZW0gMWZyIC8gMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxcbiAgICAgICAgXFxcInBhcmVudC1saXN0LW5hbWVcXFwiXFxuICAgICAgICBcXFwidGFza3MtZ3JpZFxcXCI7XFxufVxcblxcbi5tYWluLXRpdGxlLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgcGFkZGluZzogMCAxcmVtO1xcbn1cXG5cXG4ucG9wdXAtdGFzayB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBtYXJnaW46IGF1dG87XFxuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtZGFya2VyKTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgd2lkdGg6IG1pbigxMDAlLCAxOHJlbSk7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5wb3B1cC10aXRsZSB7XFxuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxuICAgIGdyaWQtYXJlYTogcGFyZW50LWxpc3QtbmFtZTtcXG59XFxuXFxuLnBvcHVwLXRhc2sgPiAuZm9ybS1jb250YWluZXIgPiBsYWJlbCB7XFxuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XFxufVxcblxcbi5wb3B1cC10YXNrID4gLmZvcm0tY29udGFpbmVyID4gaW5wdXQ6bnRoLWxhc3QtY2hpbGQoMykge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xcbn1cXG5cXG4udGFza3Mtc2VjdGlvbiB7XFxuICAgIGdyaWQtYXJlYTogdGFza3MtZ3JpZDtcXG4gICAgLyogZGlzcGxheTogZmxleDtcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICAgIGdhcDogMXJlbTsgKi9cXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXG59XFxuXFxuLnRhc2stY29udGFpbmVyIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWN0LWdyZXkpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZTogdmFyKC0tdGFza1Jvdy1oKSB2YXIoLS10YXNrUm93LWgpIGNhbGModmFyKC0tdGFza1Jvdy1oKSAqIDIpIC8gNGZyIDFmciAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxuICAgICAgICBcXFwidGFza05hbWUgdGFza0VkaXQgdGFza0RlbGV0ZVxcXCJcXG4gICAgICAgIFxcXCJ0YXNrRGF0ZUFuZFBhcmVudCB0YXNrRGF0ZUFuZFBhcmVudCB0YXNrRGF0ZUFuZFBhcmVudFxcXCJcXG4gICAgICAgIFxcXCJ0YXNrRGVzYyB0YXNrRGVzYyB0YXNrRGVzY1xcXCI7XFxufVxcblxcbi50YXNrLW5hbWUge1xcbiAgICBncmlkLWFyZWE6IHRhc2tOYW1lO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgZm9udC1zaXplOiB2YXIoLS1zdWJoZWFkZXItZnMpO1xcbn1cXG5cXG4udGFzay1kZXNjIHtcXG4gICAgZ3JpZC1hcmVhOiB0YXNrRGVzYztcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi50YXNrLWRhdGUtbGlzdC1pbmZvIHtcXG4gICAgZ3JpZC1hcmVhOiB0YXNrRGF0ZUFuZFBhcmVudDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDFyZW07XFxufVxcblxcbi5idG4tZWRpdC10YXNrLCAuYnRuLWRlbGV0ZS10YXNrIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xcbiAgICAvKiBmaWx0ZXI6IHZhcigtLWZpbHRlci1kYXJrZXIpOyAqL1xcbiAgICBib3JkZXI6IDAgbm9uZTtcXG4gICAgd2lkdGg6IHZhcigtLWhlYWRlci1mcyk7XFxuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWZzKTtcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuLmJ0bi1lZGl0LXRhc2s6aG92ZXIsIC5idG4tZGVsZXRlLXRhc2s6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XFxufVxcblxcbi5idG4tZWRpdC10YXNrOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtYmx1ZSk7XFxufVxcblxcbi5idG4tZGVsZXRlLXRhc2s6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1udW1peCk7XFxufVxcblxcbi5idG4tZWRpdC10YXNrIHtcXG4gICAgZ3JpZC1hcmVhOiB0YXNrRWRpdDtcXG59XFxuXFxuLmJ0bi1kZWxldGUtdGFzayB7XFxuICAgIGdyaWQtYXJlYTogdGFza0RlbGV0ZTtcXG59XFxuXFxuLnRhc2stY29udHJvbHMge1xcbiAgICB3aWR0aDogdmFyKC0tc3ViaGVhZGVyLWZzKVxcbn1cXG5cXG4udGFzay1wcmlvcml0eS1sb3cge1xcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWN0LXdoaXRlKTtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwcHggMCB2YXIoLS1jdC13aGl0ZSk7XFxufVxcblxcbi50YXNrLXByaW9yaXR5LW1lZGl1bSB7XFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY3QtYmx1ZSk7XFxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAxMHB4IDAgdmFyKC0tY3QtYmx1ZSk7XFxufVxcblxcbi50YXNrLXByaW9yaXR5LWhpZ2gge1xcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWN0LW51bWl4KTtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwcHggMCB2YXIoLS1jdC1udW1peCk7XFxufVxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBGb290ZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cXG5mb290ZXIge1xcbiAgICBncmlkLWFyZWE6IGZvb3RlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XFxufVxcblxcbmZvb3RlciA+IC5naXRodWItY29udGFjdC1pbmZvIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtd3JhcDogbm93cmFwO1xcbiAgICBnYXA6IDAuNXJlbTtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG5cXG5mb290ZXIgPiAuZ2l0aHViLWNvbnRhY3QtaW5mbyA+IC5mb290ZXItbG9nbyB7XFxuICAgIHdpZHRoOiB2YXIoLS1sb2dvLWZzKTtcXG4gICAgZmlsdGVyOiB2YXIoLS1maWx0ZXItbnVtaXgpO1xcbn1cXG5cXG5mb290ZXIgPiAuZ2l0aHViLWNvbnRhY3QtaW5mbyA+IC5naXRodWItdXNlciB7XFxuICAgIGZvbnQtc2l6ZTogdmFyKC0tbG9nby1mcyk7XFxuICAgIGNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxufVxcblxcbmZvb3RlciA+IC5naXRodWItY29udGFjdC1pbmZvID4gLmdpdGh1Yi11c2VyOmhvdmVyIHtcXG4gICAgY29sb3I6IHZhcigtLWN0LW51bWl4KTtcXG59XFxuXFxuLyogLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vICovXFxuLyogLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vICovXFxuLyogLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vICovXFxuXFxuLyogRXh0cmEgc21hbGwgZGV2aWNlcyAocGhvbmVzLCA2MDBweCBhbmQgZG93bikgKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxufVxcbi8qIFNtYWxsIGRldmljZXMgKHBvcnRyYWl0IHRhYmxldHMgYW5kIGxhcmdlIHBob25lcywgNjAwcHggYW5kIHVwKSAqL1xcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHtcXG4gICAgOnJvb3Qge1xcbiAgICAgICAgLS1sb2dvLWZzOiAxLjRyZW07XFxuICAgICAgICAtLW5hdmJhci1mczogMXJlbTtcXG4gICAgICAgIC0taGVhZGVyLWZzOiAxLjlyZW07XFxuICAgICAgICAtLXN1YmhlYWRlci1mczogMS41cmVtO1xcbiAgICAgICAgLS1zdWJoZWFkZXItc20tZnM6IDEuNHJlbTtcXG4gICAgICAgIC0tY29udGVudC1mczogMXJlbTtcXG4gICAgfVxcblxcbiAgICAuYXBwLW5hbWUge1xcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgIH1cXG5cXG4gICAgLmJ0bi1pY29uLWxhYmVsIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0tbmF2YmFyLWZzKTtcXG4gICAgICAgIGdhcDogMC41cmVtO1xcbiAgICAgICAgcGFkZGluZzogMC41cmVtIDFyZW0gMC41cmVtIDAuNXJlbTtcXG4gICAgfVxcbn1cXG4vKiBNZWRpdW0gZGV2aWNlcyAobGFuZHNjYXBlIHRhYmxldHMsIDc2OHB4IGFuZCB1cCkgKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAgIDpyb290IHtcXG4gICAgICAgIC0tbG9nby1mczogMS41cmVtO1xcbiAgICAgICAgLS1uYXZiYXItZnM6IDEuMXJlbTtcXG4gICAgICAgIC0taGVhZGVyLWZzOiAycmVtO1xcbiAgICAgICAgLS1zdWJoZWFkZXItZnM6IDEuNnJlbTtcXG4gICAgICAgIC0tc3ViaGVhZGVyLXNtLWZzOiAxLjVyZW07XFxuICAgICAgICAtLWNvbnRlbnQtZnM6IDFyZW07XFxuXFxuICAgICAgICAvKiBFbGVtZW50cyBoZWlnaHQgKi9cXG4gICAgICAgIC0tc2lkZS1wYW5lbC1sZW5ndGg6IG1pbigxNHJlbSwgNDAlKTtcXG4gICAgICAgIC0tY29udGVudC1oOiBjYWxjKDEwMHZoIC0gdmFyKC0tbmF2YmFyLWgpIC0gdmFyKC0tZm9vdGVyLWgpKTtcXG4gICAgfVxcblxcbiAgICBib2R5IHtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGU6XFxuICAgICAgICAgICAgdmFyKC0tbmF2YmFyLWgpIHZhcigtLWNvbnRlbnQtaCkgdmFyKC0tZm9vdGVyLWgpIC8gdmFyKFxcbiAgICAgICAgICAgICAgICAtLXNpZGUtcGFuZWwtbGVuZ3RoXFxuICAgICAgICAgICAgKVxcbiAgICAgICAgICAgIDFmcjtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxuICAgICAgICAgICAgXFxcIm5hdmJhciBuYXZiYXJcXFwiXFxuICAgICAgICAgICAgXFxcInNpZGUtcGFuZWwgbWFpbi1jb250ZW50XFxcIlxcbiAgICAgICAgICAgIFxcXCJmb290ZXIgZm9vdGVyXFxcIjtcXG4gICAgfVxcblxcbiAgICAuaGlkZGVuIHtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxuICAgICAgICAgICAgXFxcIm5hdmJhciBuYXZiYXJcXFwiXFxuICAgICAgICAgICAgXFxcIm1haW4tY29udGVudCBtYWluLWNvbnRlbnRcXFwiXFxuICAgICAgICAgICAgXFxcImZvb3RlciBmb290ZXJcXFwiO1xcbiAgICB9XFxuXFxuICAgIC5zaWRlLXBhbmVsIHtcXG4gICAgICAgIGFuaW1hdGlvbjogc2xpZGVSaWdodCAwLjVzO1xcbiAgICB9XFxuXFxuICAgIC50YXNrLWNvbnRhaW5lciB7XFxuICAgICAgICBncmlkLXRlbXBsYXRlOiB2YXIoLS10YXNrUm93LWgpIHZhcigtLXRhc2tSb3ctaCkgLyAyZnIgM2ZyIDFmcjtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxuICAgICAgICAgICAgXFxcInRhc2tOYW1lIHRhc2tEZXNjIHRhc2tFZGl0XFxcIlxcbiAgICAgICAgICAgIFxcXCJ0YXNrRGF0ZUFuZFBhcmVudCB0YXNrRGVzYyB0YXNrRGVsZXRlXFxcIjtcXG4gICAgfVxcblxcbiAgICAudGFzay1kZXNjIHtcXG4gICAgICAgIHBhZGRpbmctbGVmdDogMXJlbTtcXG4gICAgfVxcbn1cXG4vKiBMYXJnZSBkZXZpY2VzIChsYXB0b3BzL2Rlc2t0b3BzLCA5OTJweCBhbmQgdXApICovXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xcbn1cXG4vKiBFeHRyYSBsYXJnZSBkZXZpY2VzIChsYXJnZSBsYXB0b3BzIGFuZCBkZXNrdG9wcywgMTIwMHB4IGFuZCB1cCkgKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xcbn1cXG5cXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQW5pbWF0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLSovXFxuQGtleWZyYW1lcyBmYWRlSW4ge1xcbiAgICBmcm9tIHtcXG4gICAgICAgIG9wYWNpdHk6IDA7XFxuICAgIH1cXG5cXG4gICAgdG8ge1xcbiAgICAgICAgb3BhY2l0eTogMTtcXG4gICAgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIHNsaWRlRG93biB7XFxuICAgIDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC0xMDAlKTtcXG4gICAgfVxcbiAgICAxMDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xcbiAgICB9XFxufVxcblxcbkBrZXlmcmFtZXMgc2xpZGVSaWdodCB7XFxuICAgIDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlKTtcXG4gICAgfVxcbiAgICAxMDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApO1xcbiAgICB9XFxufVxcblxcbkBrZXlmcmFtZXMgc2NhbGVYIHtcXG4gICAgMCUge1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XFxuICAgIH1cXG4gICAgMTAwJSB7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxMDAlKTtcXG4gICAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCIvKipcbiAqIFRhc2sgYW5kIGxpc3QgY2xhc3Nlcy5cbiAqIEluY2x1ZGVkIERCIChhcnJheXMgb2YgdGFza3MgYW5kIGxpc3RzKVxuICovXG5pbXBvcnQgeyBOT19EQVRFIH0gZnJvbSBcIi4vZnVuY3Rpb25hbGl0aWVzXCI7XG5pbXBvcnQgeyB1bmlxdWVJRCB9IGZyb20gXCIuL2Z1bmN0aW9uYWxpdGllc1wiO1xuXG5leHBvcnQgY2xhc3MgVGFzayB7XG4gICAgLyoqXG4gICAgICogVGFzayBjbGFzcyB0byBtb2RlbCB0aGVtIGluIHRoZSB1c2VyIGludGVyZmFjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0YXNrTmFtZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0YXNrRGVzY3JpcHRpb25cbiAgICAgKiBAcGFyYW0ge0RhdGV9IGR1ZURhdGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyZW50TGlzdElEXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHByaW9yaXR5XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRhc2tJZFxuICAgICAqL1xuXG4gICAgI190YXNrTmFtZTtcbiAgICAjX3Rhc2tEZXNjcmlwdGlvbjtcbiAgICAjX2R1ZURhdGU7XG4gICAgI19wYXJlbnRMaXN0O1xuICAgICNfcHJpb3JpdHk7XG4gICAgI190YXNrSWQ7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgdGFza05hbWUsXG4gICAgICAgIHRhc2tEZXNjcmlwdGlvbiA9IFwiXCIsXG4gICAgICAgIGR1ZURhdGUgPSBOT19EQVRFLFxuICAgICAgICBwYXJlbnRMaXN0ID0gXCJHZW5lcmFsXCIsXG4gICAgICAgIHByaW9yaXR5ID0gcHJpb3JpdHlWYWx1ZXMuTUVESVVNXG4gICAgKSB7XG4gICAgICAgIHRoaXMuI190YXNrTmFtZSA9IHRhc2tOYW1lO1xuICAgICAgICB0aGlzLiNfdGFza0Rlc2NyaXB0aW9uID0gdGFza0Rlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLiNfZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgICAgIHRoaXMuI19wYXJlbnRMaXN0ID0gcGFyZW50TGlzdDtcbiAgICAgICAgdGhpcy4jX3ByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgICAgIHRoaXMuI190YXNrSWQgPSBcInRhc2tfXCIgKyB1bmlxdWVJRCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHRlcnMgYW5zIFNldHRlcnNcbiAgICAgKi9cblxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jX3Rhc2tOYW1lO1xuICAgIH1cblxuICAgIHNldCBuYW1lKG5ld05hbWUpIHtcbiAgICAgICAgdGhpcy4jX3Rhc2tOYW1lID0gbmV3TmFtZTtcbiAgICB9XG5cbiAgICBnZXQgZGVzYygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI190YXNrRGVzY3JpcHRpb247XG4gICAgfVxuXG4gICAgc2V0IGRlc2MobmV3RGVzYykge1xuICAgICAgICB0aGlzLiNfdGFza0Rlc2NyaXB0aW9uID0gbmV3RGVzYztcbiAgICB9XG5cbiAgICBnZXQgZHVlRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI19kdWVEYXRlO1xuICAgIH1cblxuICAgIHNldCBkdWVEYXRlKG5ld0RhdGUpIHtcbiAgICAgICAgdGhpcy4jX2R1ZURhdGUgPSBuZXdEYXRlO1xuICAgIH1cblxuICAgIGdldCBwYXJlbnRMaXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jX3BhcmVudExpc3Q7XG4gICAgfVxuXG4gICAgc2V0IHBhcmVudExpc3QobGlzdCkge1xuICAgICAgICB0aGlzLiNfcGFyZW50TGlzdCA9IGxpc3Q7XG4gICAgfVxuXG4gICAgZ2V0IHByaW9yaXR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jX3ByaW9yaXR5O1xuICAgIH1cblxuICAgIHNldCBwcmlvcml0eShuZXdQcmlvcml0eSkge1xuICAgICAgICB0aGlzLiNfcHJpb3JpdHkgPSBuZXdQcmlvcml0eTtcbiAgICB9XG5cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNfdGFza0lkO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhc2tMaXN0IHtcbiAgICAvKipcbiAgICAgKiBNb2RlbCB0byBjcmVhdGUgdGhlIHBhcmVudCBsaXN0cyBpbiB0aGUgc2lkZS1wYW5lbFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsaXN0TmFtZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsaXN0SWRcbiAgICAgKi9cblxuICAgICNfbGlzdE5hbWU7XG4gICAgI19saXN0SWQ7XG5cbiAgICBjb25zdHJ1Y3RvcihsaXN0TmFtZSkge1xuICAgICAgICB0aGlzLiNfbGlzdE5hbWUgPSBsaXN0TmFtZTtcbiAgICAgICAgdGhpcy4jX2xpc3RJZCA9IFwibGlzdF9cIiArIHVuaXF1ZUlEKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0dGVycyBhbnMgU2V0dGVyc1xuICAgICAqL1xuXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNfbGlzdE5hbWU7XG4gICAgfVxuXG4gICAgc2V0IG5hbWUobmV3TmFtZSkge1xuICAgICAgICB0aGlzLiNfbGlzdE5hbWUgPSBuZXdOYW1lO1xuICAgIH1cblxuICAgIGdldCBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI19saXN0SWQ7XG4gICAgfVxufVxuXG4vLyBUYXNrIHByaW9yaXR5IHZhbHVlc1xuZXhwb3J0IGNvbnN0IHByaW9yaXR5VmFsdWVzID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgTE9XOiAtMSxcbiAgICBNRURJVU06IDAsXG4gICAgSElHSDogMSxcbn0pO1xuXG4vLyBVc2VkIGFzIGdsb2JhbCB2YXJpYWJsZSB0byBmaWx0ZXIgdGhlIHNob3duIHRhc2tzIGJ5IGR1ZURhdGUuIFxuLy8gXCJ0b2RheVwiLCBcInVwY29taW5nXCIgKHVwIHRvIDcgZGF5cyksIFwiYW55dGltZVwiXG5leHBvcnQgbGV0IHRhc2tzRGF0ZUZpbHRlciA9IFwiYW55dGltZVwiO1xuXG4vLyBVc2VkIGFzIGdsb2JhbCB2YXJpYWJsZSB0byBmaWx0ZXIgdGhlIHNob3duIHRhc2tzIGJ5IFBhcmVudExpc3QuIFxuLy8gXCJcIiBkZWZhdWx0IHZhbHVlLiBUaGlzIHZhbHVlIGlzIHJlcGxhY2VkIGJ5IHRoZSBwYXJlbnRMaXN0IElEIHRvIGZpbHRlciB0aGUgdGFza3NcbmV4cG9ydCBsZXQgdGFza3NQcm9qZWN0RmlsdGVyID0gXCJcIjtcblxuLy8gQXJyYXkgdG8gY29udGFpbiBhbGwgY3JlYXRlZCB0YXNrc1xuZXhwb3J0IGNvbnN0IHRhc2tzQXJyYXkgPSBbXTtcblxuLy8gQXJyYXkgdG8gY29udGFpbiBhbGwgY3JlYXRlZCB0YXNrTGlzdHMuXG4vLyBDb250YWlucyB0aGUgbGlzdCAnR2VuZXJhbCcgYnkgZGVmYXVsdC4gVGhpcyBsaXN0IHdpbGwgYmUgbGlua2VkIHRvIHRoZSBIb21lIChzaWRlLXBhbmVsIG1lbnUpXG5leHBvcnQgY29uc3QgbGlzdEFycmF5ID0gW107XG4iLCIvKipcbiAqIEBuYW1lIHRvRGF0ZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb252ZXJ0IHRoZSBnaXZlbiBhcmd1bWVudCB0byBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYW4gaW5zdGFuY2Ugb2YgRGF0ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgaXRzIGNsb25lLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBhIG51bWJlciwgaXQgaXMgdHJlYXRlZCBhcyBhIHRpbWVzdGFtcC5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgbm9uZSBvZiB0aGUgYWJvdmUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIEludmFsaWQgRGF0ZS5cbiAqXG4gKiAqKk5vdGUqKjogKmFsbCogRGF0ZSBhcmd1bWVudHMgcGFzc2VkIHRvIGFueSAqZGF0ZS1mbnMqIGZ1bmN0aW9uIGlzIHByb2Nlc3NlZCBieSBgdG9EYXRlYC5cbiAqXG4gKiBAdHlwZVBhcmFtIERhdGVUeXBlIC0gVGhlIGBEYXRlYCB0eXBlLCB0aGUgZnVuY3Rpb24gb3BlcmF0ZXMgb24uIEdldHMgaW5mZXJyZWQgZnJvbSBwYXNzZWQgYXJndW1lbnRzLiBBbGxvd3MgdG8gdXNlIGV4dGVuc2lvbnMgbGlrZSBbYFVUQ0RhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdXRjKS5cbiAqXG4gKiBAcGFyYW0gYXJndW1lbnQgLSBUaGUgdmFsdWUgdG8gY29udmVydFxuICpcbiAqIEByZXR1cm5zIFRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENsb25lIHRoZSBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gdG9EYXRlKG5ldyBEYXRlKDIwMTQsIDEsIDExLCAxMSwgMzAsIDMwKSlcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbnZlcnQgdGhlIHRpbWVzdGFtcCB0byBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gdG9EYXRlKDEzOTIwOTg0MzAwMDApXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XG4gIGNvbnN0IGFyZ1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudCk7XG5cbiAgLy8gQ2xvbmUgdGhlIGRhdGVcbiAgaWYgKFxuICAgIGFyZ3VtZW50IGluc3RhbmNlb2YgRGF0ZSB8fFxuICAgICh0eXBlb2YgYXJndW1lbnQgPT09IFwib2JqZWN0XCIgJiYgYXJnU3RyID09PSBcIltvYmplY3QgRGF0ZV1cIilcbiAgKSB7XG4gICAgLy8gUHJldmVudCB0aGUgZGF0ZSB0byBsb3NlIHRoZSBtaWxsaXNlY29uZHMgd2hlbiBwYXNzZWQgdG8gbmV3IERhdGUoKSBpbiBJRTEwXG4gICAgcmV0dXJuIG5ldyBhcmd1bWVudC5jb25zdHJ1Y3RvcigrYXJndW1lbnQpO1xuICB9IGVsc2UgaWYgKFxuICAgIHR5cGVvZiBhcmd1bWVudCA9PT0gXCJudW1iZXJcIiB8fFxuICAgIGFyZ1N0ciA9PT0gXCJbb2JqZWN0IE51bWJlcl1cIiB8fFxuICAgIHR5cGVvZiBhcmd1bWVudCA9PT0gXCJzdHJpbmdcIiB8fFxuICAgIGFyZ1N0ciA9PT0gXCJbb2JqZWN0IFN0cmluZ11cIlxuICApIHtcbiAgICAvLyBUT0RPOiBDYW4gd2UgZ2V0IHJpZCBvZiBhcz9cbiAgICByZXR1cm4gbmV3IERhdGUoYXJndW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIC8vIFRPRE86IENhbiB3ZSBnZXQgcmlkIG9mIGFzP1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgdG9EYXRlO1xuIiwiaW1wb3J0IHsgdG9EYXRlIH0gZnJvbSBcIi4vdG9EYXRlLm1qc1wiO1xuXG4vKipcbiAqIEBuYW1lIHN0YXJ0T2ZEYXlcbiAqIEBjYXRlZ29yeSBEYXkgSGVscGVyc1xuICogQHN1bW1hcnkgUmV0dXJuIHRoZSBzdGFydCBvZiBhIGRheSBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgZGF5IGZvciB0aGUgZ2l2ZW4gZGF0ZS5cbiAqIFRoZSByZXN1bHQgd2lsbCBiZSBpbiB0aGUgbG9jYWwgdGltZXpvbmUuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgb3JpZ2luYWwgZGF0ZVxuICpcbiAqIEByZXR1cm5zIFRoZSBzdGFydCBvZiBhIGRheVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBUaGUgc3RhcnQgb2YgYSBkYXkgZm9yIDIgU2VwdGVtYmVyIDIwMTQgMTE6NTU6MDA6XG4gKiBjb25zdCByZXN1bHQgPSBzdGFydE9mRGF5KG5ldyBEYXRlKDIwMTQsIDgsIDIsIDExLCA1NSwgMCkpXG4gKiAvLz0+IFR1ZSBTZXAgMDIgMjAxNCAwMDowMDowMFxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RhcnRPZkRheShkYXRlKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUpO1xuICBfZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgcmV0dXJuIF9kYXRlO1xufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IHN0YXJ0T2ZEYXk7XG4iLCJpbXBvcnQgeyBpc1NhbWVEYXkgfSBmcm9tIFwiLi9pc1NhbWVEYXkubWpzXCI7XG5cbi8qKlxuICogQG5hbWUgaXNUb2RheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBJcyB0aGUgZ2l2ZW4gZGF0ZSB0b2RheT9cbiAqIEBwdXJlIGZhbHNlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBJcyB0aGUgZ2l2ZW4gZGF0ZSB0b2RheT9cbiAqXG4gKiBAdHlwZVBhcmFtIERhdGVUeXBlIC0gVGhlIGBEYXRlYCB0eXBlLCB0aGUgZnVuY3Rpb24gb3BlcmF0ZXMgb24uIEdldHMgaW5mZXJyZWQgZnJvbSBwYXNzZWQgYXJndW1lbnRzLiBBbGxvd3MgdG8gdXNlIGV4dGVuc2lvbnMgbGlrZSBbYFVUQ0RhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdXRjKS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlIHRvIGNoZWNrXG4gKlxuICogQHJldHVybnMgVGhlIGRhdGUgaXMgdG9kYXlcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdG9kYXkgaXMgNiBPY3RvYmVyIDIwMTQsIGlzIDYgT2N0b2JlciAxNDowMDowMCB0b2RheT9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzVG9kYXkobmV3IERhdGUoMjAxNCwgOSwgNiwgMTQsIDApKVxuICogLy89PiB0cnVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1RvZGF5KGRhdGUpIHtcbiAgcmV0dXJuIGlzU2FtZURheShkYXRlLCBEYXRlLm5vdygpKTtcbn1cblxuLy8gRmFsbGJhY2sgZm9yIG1vZHVsYXJpemVkIGltcG9ydHM6XG5leHBvcnQgZGVmYXVsdCBpc1RvZGF5O1xuIiwiaW1wb3J0IHsgc3RhcnRPZkRheSB9IGZyb20gXCIuL3N0YXJ0T2ZEYXkubWpzXCI7XG5cbi8qKlxuICogQG5hbWUgaXNTYW1lRGF5XG4gKiBAY2F0ZWdvcnkgRGF5IEhlbHBlcnNcbiAqIEBzdW1tYXJ5IEFyZSB0aGUgZ2l2ZW4gZGF0ZXMgaW4gdGhlIHNhbWUgZGF5IChhbmQgeWVhciBhbmQgbW9udGgpP1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQXJlIHRoZSBnaXZlbiBkYXRlcyBpbiB0aGUgc2FtZSBkYXkgKGFuZCB5ZWFyIGFuZCBtb250aCk/XG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGRhdGVMZWZ0IC0gVGhlIGZpcnN0IGRhdGUgdG8gY2hlY2tcbiAqIEBwYXJhbSBkYXRlUmlnaHQgLSBUaGUgc2Vjb25kIGRhdGUgdG8gY2hlY2tcblxuICogQHJldHVybnMgVGhlIGRhdGVzIGFyZSBpbiB0aGUgc2FtZSBkYXkgKGFuZCB5ZWFyIGFuZCBtb250aClcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQXJlIDQgU2VwdGVtYmVyIDA2OjAwOjAwIGFuZCA0IFNlcHRlbWJlciAxODowMDowMCBpbiB0aGUgc2FtZSBkYXk/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVEYXkobmV3IERhdGUoMjAxNCwgOCwgNCwgNiwgMCksIG5ldyBEYXRlKDIwMTQsIDgsIDQsIDE4LCAwKSlcbiAqIC8vPT4gdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBcmUgNCBTZXB0ZW1iZXIgYW5kIDQgT2N0b2JlciBpbiB0aGUgc2FtZSBkYXk/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVEYXkobmV3IERhdGUoMjAxNCwgOCwgNCksIG5ldyBEYXRlKDIwMTQsIDksIDQpKVxuICogLy89PiBmYWxzZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBcmUgNCBTZXB0ZW1iZXIsIDIwMTQgYW5kIDQgU2VwdGVtYmVyLCAyMDE1IGluIHRoZSBzYW1lIGRheT9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzU2FtZURheShuZXcgRGF0ZSgyMDE0LCA4LCA0KSwgbmV3IERhdGUoMjAxNSwgOCwgNCkpXG4gKiAvLz0+IGZhbHNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NhbWVEYXkoZGF0ZUxlZnQsIGRhdGVSaWdodCkge1xuICBjb25zdCBkYXRlTGVmdFN0YXJ0T2ZEYXkgPSBzdGFydE9mRGF5KGRhdGVMZWZ0KTtcbiAgY29uc3QgZGF0ZVJpZ2h0U3RhcnRPZkRheSA9IHN0YXJ0T2ZEYXkoZGF0ZVJpZ2h0KTtcblxuICByZXR1cm4gK2RhdGVMZWZ0U3RhcnRPZkRheSA9PT0gK2RhdGVSaWdodFN0YXJ0T2ZEYXk7XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgaXNTYW1lRGF5O1xuIiwiLyoqXG4gKiBAbW9kdWxlIGNvbnN0YW50c1xuICogQHN1bW1hcnkgVXNlZnVsIGNvbnN0YW50c1xuICogQGRlc2NyaXB0aW9uXG4gKiBDb2xsZWN0aW9uIG9mIHVzZWZ1bCBkYXRlIGNvbnN0YW50cy5cbiAqXG4gKiBUaGUgY29uc3RhbnRzIGNvdWxkIGJlIGltcG9ydGVkIGZyb20gYGRhdGUtZm5zL2NvbnN0YW50c2A6XG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IG1heFRpbWUsIG1pblRpbWUgfSBmcm9tIFwiLi9jb25zdGFudHMvZGF0ZS1mbnMvY29uc3RhbnRzXCI7XG4gKlxuICogZnVuY3Rpb24gaXNBbGxvd2VkVGltZSh0aW1lKSB7XG4gKiAgIHJldHVybiB0aW1lIDw9IG1heFRpbWUgJiYgdGltZSA+PSBtaW5UaW1lO1xuICogfVxuICogYGBgXG4gKi9cblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIGRheXNJbldlZWtcbiAqIEBzdW1tYXJ5IERheXMgaW4gMSB3ZWVrLlxuICovXG5leHBvcnQgY29uc3QgZGF5c0luV2VlayA9IDc7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBkYXlzSW5ZZWFyXG4gKiBAc3VtbWFyeSBEYXlzIGluIDEgeWVhci5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEhvdyBtYW55IGRheXMgaW4gYSB5ZWFyLlxuICpcbiAqIE9uZSB5ZWFycyBlcXVhbHMgMzY1LjI0MjUgZGF5cyBhY2NvcmRpbmcgdG8gdGhlIGZvcm11bGE6XG4gKlxuICogPiBMZWFwIHllYXIgb2NjdXJlcyBldmVyeSA0IHllYXJzLCBleGNlcHQgZm9yIHllYXJzIHRoYXQgYXJlIGRpdmlzYWJsZSBieSAxMDAgYW5kIG5vdCBkaXZpc2FibGUgYnkgNDAwLlxuICogPiAxIG1lYW4geWVhciA9ICgzNjUrMS80LTEvMTAwKzEvNDAwKSBkYXlzID0gMzY1LjI0MjUgZGF5c1xuICovXG5leHBvcnQgY29uc3QgZGF5c0luWWVhciA9IDM2NS4yNDI1O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWF4VGltZVxuICogQHN1bW1hcnkgTWF4aW11bSBhbGxvd2VkIHRpbWUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IG1heFRpbWUgfSBmcm9tIFwiLi9jb25zdGFudHMvZGF0ZS1mbnMvY29uc3RhbnRzXCI7XG4gKlxuICogY29uc3QgaXNWYWxpZCA9IDg2NDAwMDAwMDAwMDAwMDEgPD0gbWF4VGltZTtcbiAqIC8vPT4gZmFsc2VcbiAqXG4gKiBuZXcgRGF0ZSg4NjQwMDAwMDAwMDAwMDAxKTtcbiAqIC8vPT4gSW52YWxpZCBEYXRlXG4gKi9cbmV4cG9ydCBjb25zdCBtYXhUaW1lID0gTWF0aC5wb3coMTAsIDgpICogMjQgKiA2MCAqIDYwICogMTAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pblRpbWVcbiAqIEBzdW1tYXJ5IE1pbmltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBtaW5UaW1lIH0gZnJvbSBcIi4vY29uc3RhbnRzL2RhdGUtZm5zL2NvbnN0YW50c1wiO1xuICpcbiAqIGNvbnN0IGlzVmFsaWQgPSAtODY0MDAwMDAwMDAwMDAwMSA+PSBtaW5UaW1lO1xuICogLy89PiBmYWxzZVxuICpcbiAqIG5ldyBEYXRlKC04NjQwMDAwMDAwMDAwMDAxKVxuICogLy89PiBJbnZhbGlkIERhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IG1pblRpbWUgPSAtbWF4VGltZTtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luV2Vla1xuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgd2Vlay5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luV2VlayA9IDYwNDgwMDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luRGF5XG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBkYXkuXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbkRheSA9IDg2NDAwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5NaW51dGVcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIG1pbnV0ZVxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5NaW51dGUgPSA2MDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luSG91clxuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgaG91clxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5Ib3VyID0gMzYwMDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luU2Vjb25kXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBzZWNvbmRcbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luU2Vjb25kID0gMTAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJblllYXJcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSB5ZWFyLlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luWWVhciA9IDUyNTYwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJbk1vbnRoXG4gKiBAc3VtbWFyeSBNaW51dGVzIGluIDEgbW9udGguXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5Nb250aCA9IDQzMjAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luRGF5XG4gKiBAc3VtbWFyeSBNaW51dGVzIGluIDEgZGF5LlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luRGF5ID0gMTQ0MDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJbkhvdXJcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSBob3VyLlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luSG91ciA9IDYwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbW9udGhzSW5RdWFydGVyXG4gKiBAc3VtbWFyeSBNb250aHMgaW4gMSBxdWFydGVyLlxuICovXG5leHBvcnQgY29uc3QgbW9udGhzSW5RdWFydGVyID0gMztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1vbnRoc0luWWVhclxuICogQHN1bW1hcnkgTW9udGhzIGluIDEgeWVhci5cbiAqL1xuZXhwb3J0IGNvbnN0IG1vbnRoc0luWWVhciA9IDEyO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgcXVhcnRlcnNJblllYXJcbiAqIEBzdW1tYXJ5IFF1YXJ0ZXJzIGluIDEgeWVhclxuICovXG5leHBvcnQgY29uc3QgcXVhcnRlcnNJblllYXIgPSA0O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luSG91clxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIGhvdXIuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5Ib3VyID0gMzYwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbk1pbnV0ZVxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIG1pbnV0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbk1pbnV0ZSA9IDYwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luRGF5XG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgZGF5LlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luRGF5ID0gc2Vjb25kc0luSG91ciAqIDI0O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luV2Vla1xuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIHdlZWsuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5XZWVrID0gc2Vjb25kc0luRGF5ICogNztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJblllYXJcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSB5ZWFyLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luWWVhciA9IHNlY29uZHNJbkRheSAqIGRheXNJblllYXI7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5Nb250aFxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIG1vbnRoXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5Nb250aCA9IHNlY29uZHNJblllYXIgLyAxMjtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJblF1YXJ0ZXJcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBxdWFydGVyLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luUXVhcnRlciA9IHNlY29uZHNJbk1vbnRoICogMztcbiIsImltcG9ydCB7IHRvRGF0ZSB9IGZyb20gXCIuLi90b0RhdGUubWpzXCI7XG5cbi8qKlxuICogR29vZ2xlIENocm9tZSBhcyBvZiA2Ny4wLjMzOTYuODcgaW50cm9kdWNlZCB0aW1lem9uZXMgd2l0aCBvZmZzZXQgdGhhdCBpbmNsdWRlcyBzZWNvbmRzLlxuICogVGhleSB1c3VhbGx5IGFwcGVhciBmb3IgZGF0ZXMgdGhhdCBkZW5vdGUgdGltZSBiZWZvcmUgdGhlIHRpbWV6b25lcyB3ZXJlIGludHJvZHVjZWRcbiAqIChlLmcuIGZvciAnRXVyb3BlL1ByYWd1ZScgdGltZXpvbmUgdGhlIG9mZnNldCBpcyBHTVQrMDA6NTc6NDQgYmVmb3JlIDEgT2N0b2JlciAxODkxXG4gKiBhbmQgR01UKzAxOjAwOjAwIGFmdGVyIHRoYXQgZGF0ZSlcbiAqXG4gKiBEYXRlI2dldFRpbWV6b25lT2Zmc2V0IHJldHVybnMgdGhlIG9mZnNldCBpbiBtaW51dGVzIGFuZCB3b3VsZCByZXR1cm4gNTcgZm9yIHRoZSBleGFtcGxlIGFib3ZlLFxuICogd2hpY2ggd291bGQgbGVhZCB0byBpbmNvcnJlY3QgY2FsY3VsYXRpb25zLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgdGltZXpvbmUgb2Zmc2V0IGluIG1pbGxpc2Vjb25kcyB0aGF0IHRha2VzIHNlY29uZHMgaW4gYWNjb3VudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMoZGF0ZSkge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlKTtcbiAgY29uc3QgdXRjRGF0ZSA9IG5ldyBEYXRlKFxuICAgIERhdGUuVVRDKFxuICAgICAgX2RhdGUuZ2V0RnVsbFllYXIoKSxcbiAgICAgIF9kYXRlLmdldE1vbnRoKCksXG4gICAgICBfZGF0ZS5nZXREYXRlKCksXG4gICAgICBfZGF0ZS5nZXRIb3VycygpLFxuICAgICAgX2RhdGUuZ2V0TWludXRlcygpLFxuICAgICAgX2RhdGUuZ2V0U2Vjb25kcygpLFxuICAgICAgX2RhdGUuZ2V0TWlsbGlzZWNvbmRzKCksXG4gICAgKSxcbiAgKTtcbiAgdXRjRGF0ZS5zZXRVVENGdWxsWWVhcihfZGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgcmV0dXJuICtkYXRlIC0gK3V0Y0RhdGU7XG59XG4iLCJpbXBvcnQgeyBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMgfSBmcm9tIFwiLi9kaWZmZXJlbmNlSW5DYWxlbmRhckRheXMubWpzXCI7XG5pbXBvcnQgeyB0b0RhdGUgfSBmcm9tIFwiLi90b0RhdGUubWpzXCI7XG5cbi8qKlxuICogQG5hbWUgZGlmZmVyZW5jZUluRGF5c1xuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBHZXQgdGhlIG51bWJlciBvZiBmdWxsIGRheXMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBHZXQgdGhlIG51bWJlciBvZiBmdWxsIGRheSBwZXJpb2RzIGJldHdlZW4gdHdvIGRhdGVzLiBGcmFjdGlvbmFsIGRheXMgYXJlXG4gKiB0cnVuY2F0ZWQgdG93YXJkcyB6ZXJvLlxuICpcbiAqIE9uZSBcImZ1bGwgZGF5XCIgaXMgdGhlIGRpc3RhbmNlIGJldHdlZW4gYSBsb2NhbCB0aW1lIGluIG9uZSBkYXkgdG8gdGhlIHNhbWVcbiAqIGxvY2FsIHRpbWUgb24gdGhlIG5leHQgb3IgcHJldmlvdXMgZGF5LiBBIGZ1bGwgZGF5IGNhbiBzb21ldGltZXMgYmUgbGVzcyB0aGFuXG4gKiBvciBtb3JlIHRoYW4gMjQgaG91cnMgaWYgYSBkYXlsaWdodCBzYXZpbmdzIGNoYW5nZSBoYXBwZW5zIGJldHdlZW4gdHdvIGRhdGVzLlxuICpcbiAqIFRvIGlnbm9yZSBEU1QgYW5kIG9ubHkgbWVhc3VyZSBleGFjdCAyNC1ob3VyIHBlcmlvZHMsIHVzZSB0aGlzIGluc3RlYWQ6XG4gKiBgTWF0aC50cnVuYyhkaWZmZXJlbmNlSW5Ib3VycyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KS8yNCl8MGAuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGRhdGVMZWZ0IC0gVGhlIGxhdGVyIGRhdGVcbiAqIEBwYXJhbSBkYXRlUmlnaHQgLSBUaGUgZWFybGllciBkYXRlXG4gKlxuICogQHJldHVybnMgVGhlIG51bWJlciBvZiBmdWxsIGRheXMgYWNjb3JkaW5nIHRvIHRoZSBsb2NhbCB0aW1lem9uZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBmdWxsIGRheXMgYXJlIGJldHdlZW5cbiAqIC8vIDIgSnVseSAyMDExIDIzOjAwOjAwIGFuZCAyIEp1bHkgMjAxMiAwMDowMDowMD9cbiAqIGNvbnN0IHJlc3VsdCA9IGRpZmZlcmVuY2VJbkRheXMoXG4gKiAgIG5ldyBEYXRlKDIwMTIsIDYsIDIsIDAsIDApLFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAyLCAyMywgMClcbiAqIClcbiAqIC8vPT4gMzY1XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEhvdyBtYW55IGZ1bGwgZGF5cyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTEgMjM6NTk6MDAgYW5kIDMgSnVseSAyMDExIDAwOjAxOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluRGF5cyhcbiAqICAgbmV3IERhdGUoMjAxMSwgNiwgMywgMCwgMSksXG4gKiAgIG5ldyBEYXRlKDIwMTEsIDYsIDIsIDIzLCA1OSlcbiAqIClcbiAqIC8vPT4gMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBmdWxsIGRheXMgYXJlIGJldHdlZW5cbiAqIC8vIDEgTWFyY2ggMjAyMCAwOjAwIGFuZCAxIEp1bmUgMjAyMCAwOjAwID9cbiAqIC8vIE5vdGU6IGJlY2F1c2UgbG9jYWwgdGltZSBpcyB1c2VkLCB0aGVcbiAqIC8vIHJlc3VsdCB3aWxsIGFsd2F5cyBiZSA5MiBkYXlzLCBldmVuIGluXG4gKiAvLyB0aW1lIHpvbmVzIHdoZXJlIERTVCBzdGFydHMgYW5kIHRoZVxuICogLy8gcGVyaW9kIGhhcyBvbmx5IDkyKjI0LTEgaG91cnMuXG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5EYXlzKFxuICogICBuZXcgRGF0ZSgyMDIwLCA1LCAxKSxcbiAqICAgbmV3IERhdGUoMjAyMCwgMiwgMSlcbiAqIClcbiAqIC8vPT4gOTJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkRheXMoZGF0ZUxlZnQsIGRhdGVSaWdodCkge1xuICBjb25zdCBfZGF0ZUxlZnQgPSB0b0RhdGUoZGF0ZUxlZnQpO1xuICBjb25zdCBfZGF0ZVJpZ2h0ID0gdG9EYXRlKGRhdGVSaWdodCk7XG5cbiAgY29uc3Qgc2lnbiA9IGNvbXBhcmVMb2NhbEFzYyhfZGF0ZUxlZnQsIF9kYXRlUmlnaHQpO1xuICBjb25zdCBkaWZmZXJlbmNlID0gTWF0aC5hYnMoZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKF9kYXRlTGVmdCwgX2RhdGVSaWdodCkpO1xuXG4gIF9kYXRlTGVmdC5zZXREYXRlKF9kYXRlTGVmdC5nZXREYXRlKCkgLSBzaWduICogZGlmZmVyZW5jZSk7XG5cbiAgLy8gTWF0aC5hYnMoZGlmZiBpbiBmdWxsIGRheXMgLSBkaWZmIGluIGNhbGVuZGFyIGRheXMpID09PSAxIGlmIGxhc3QgY2FsZW5kYXIgZGF5IGlzIG5vdCBmdWxsXG4gIC8vIElmIHNvLCByZXN1bHQgbXVzdCBiZSBkZWNyZWFzZWQgYnkgMSBpbiBhYnNvbHV0ZSB2YWx1ZVxuICBjb25zdCBpc0xhc3REYXlOb3RGdWxsID0gTnVtYmVyKFxuICAgIGNvbXBhcmVMb2NhbEFzYyhfZGF0ZUxlZnQsIF9kYXRlUmlnaHQpID09PSAtc2lnbixcbiAgKTtcbiAgY29uc3QgcmVzdWx0ID0gc2lnbiAqIChkaWZmZXJlbmNlIC0gaXNMYXN0RGF5Tm90RnVsbCk7XG4gIC8vIFByZXZlbnQgbmVnYXRpdmUgemVyb1xuICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbn1cblxuLy8gTGlrZSBgY29tcGFyZUFzY2AgYnV0IHVzZXMgbG9jYWwgdGltZSBub3QgVVRDLCB3aGljaCBpcyBuZWVkZWRcbi8vIGZvciBhY2N1cmF0ZSBlcXVhbGl0eSBjb21wYXJpc29ucyBvZiBVVEMgdGltZXN0YW1wcyB0aGF0IGVuZCB1cFxuLy8gaGF2aW5nIHRoZSBzYW1lIHJlcHJlc2VudGF0aW9uIGluIGxvY2FsIHRpbWUsIGUuZy4gb25lIGhvdXIgYmVmb3JlXG4vLyBEU1QgZW5kcyB2cy4gdGhlIGluc3RhbnQgdGhhdCBEU1QgZW5kcy5cbmZ1bmN0aW9uIGNvbXBhcmVMb2NhbEFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIGNvbnN0IGRpZmYgPVxuICAgIGRhdGVMZWZ0LmdldEZ1bGxZZWFyKCkgLSBkYXRlUmlnaHQuZ2V0RnVsbFllYXIoKSB8fFxuICAgIGRhdGVMZWZ0LmdldE1vbnRoKCkgLSBkYXRlUmlnaHQuZ2V0TW9udGgoKSB8fFxuICAgIGRhdGVMZWZ0LmdldERhdGUoKSAtIGRhdGVSaWdodC5nZXREYXRlKCkgfHxcbiAgICBkYXRlTGVmdC5nZXRIb3VycygpIC0gZGF0ZVJpZ2h0LmdldEhvdXJzKCkgfHxcbiAgICBkYXRlTGVmdC5nZXRNaW51dGVzKCkgLSBkYXRlUmlnaHQuZ2V0TWludXRlcygpIHx8XG4gICAgZGF0ZUxlZnQuZ2V0U2Vjb25kcygpIC0gZGF0ZVJpZ2h0LmdldFNlY29uZHMoKSB8fFxuICAgIGRhdGVMZWZ0LmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZVJpZ2h0LmdldE1pbGxpc2Vjb25kcygpO1xuXG4gIGlmIChkaWZmIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChkaWZmID4gMCkge1xuICAgIHJldHVybiAxO1xuICAgIC8vIFJldHVybiAwIGlmIGRpZmYgaXMgMDsgcmV0dXJuIE5hTiBpZiBkaWZmIGlzIE5hTlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBkaWZmO1xuICB9XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgZGlmZmVyZW5jZUluRGF5cztcbiIsImltcG9ydCB7IG1pbGxpc2Vjb25kc0luRGF5IH0gZnJvbSBcIi4vY29uc3RhbnRzLm1qc1wiO1xuaW1wb3J0IHsgc3RhcnRPZkRheSB9IGZyb20gXCIuL3N0YXJ0T2ZEYXkubWpzXCI7XG5pbXBvcnQgeyBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIH0gZnJvbSBcIi4vX2xpYi9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzLm1qc1wiO1xuXG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5c1xuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBHZXQgdGhlIG51bWJlciBvZiBjYWxlbmRhciBkYXlzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FsZW5kYXIgZGF5cyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy4gVGhpcyBtZWFucyB0aGF0IHRoZSB0aW1lcyBhcmUgcmVtb3ZlZFxuICogZnJvbSB0aGUgZGF0ZXMgYW5kIHRoZW4gdGhlIGRpZmZlcmVuY2UgaW4gZGF5cyBpcyBjYWxjdWxhdGVkLlxuICpcbiAqIEB0eXBlUGFyYW0gRGF0ZVR5cGUgLSBUaGUgYERhdGVgIHR5cGUsIHRoZSBmdW5jdGlvbiBvcGVyYXRlcyBvbi4gR2V0cyBpbmZlcnJlZCBmcm9tIHBhc3NlZCBhcmd1bWVudHMuIEFsbG93cyB0byB1c2UgZXh0ZW5zaW9ucyBsaWtlIFtgVVRDRGF0ZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy91dGMpLlxuICpcbiAqIEBwYXJhbSBkYXRlTGVmdCAtIFRoZSBsYXRlciBkYXRlXG4gKiBAcGFyYW0gZGF0ZVJpZ2h0IC0gVGhlIGVhcmxpZXIgZGF0ZVxuICpcbiAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgY2FsZW5kYXIgZGF5c1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBjYWxlbmRhciBkYXlzIGFyZSBiZXR3ZWVuXG4gKiAvLyAyIEp1bHkgMjAxMSAyMzowMDowMCBhbmQgMiBKdWx5IDIwMTIgMDA6MDA6MDA/XG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoXG4gKiAgIG5ldyBEYXRlKDIwMTIsIDYsIDIsIDAsIDApLFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAyLCAyMywgMClcbiAqIClcbiAqIC8vPT4gMzY2XG4gKiAvLyBIb3cgbWFueSBjYWxlbmRhciBkYXlzIGFyZSBiZXR3ZWVuXG4gKiAvLyAyIEp1bHkgMjAxMSAyMzo1OTowMCBhbmQgMyBKdWx5IDIwMTEgMDA6MDE6MDA/XG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoXG4gKiAgIG5ldyBEYXRlKDIwMTEsIDYsIDMsIDAsIDEpLFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAyLCAyMywgNTkpXG4gKiApXG4gKiAvLz0+IDFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIGNvbnN0IHN0YXJ0T2ZEYXlMZWZ0ID0gc3RhcnRPZkRheShkYXRlTGVmdCk7XG4gIGNvbnN0IHN0YXJ0T2ZEYXlSaWdodCA9IHN0YXJ0T2ZEYXkoZGF0ZVJpZ2h0KTtcblxuICBjb25zdCB0aW1lc3RhbXBMZWZ0ID1cbiAgICArc3RhcnRPZkRheUxlZnQgLSBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKHN0YXJ0T2ZEYXlMZWZ0KTtcbiAgY29uc3QgdGltZXN0YW1wUmlnaHQgPVxuICAgICtzdGFydE9mRGF5UmlnaHQgLSBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKHN0YXJ0T2ZEYXlSaWdodCk7XG5cbiAgLy8gUm91bmQgdGhlIG51bWJlciBvZiBkYXlzIHRvIHRoZSBuZWFyZXN0IGludGVnZXIgYmVjYXVzZSB0aGUgbnVtYmVyIG9mXG4gIC8vIG1pbGxpc2Vjb25kcyBpbiBhIGRheSBpcyBub3QgY29uc3RhbnQgKGUuZy4gaXQncyBkaWZmZXJlbnQgaW4gdGhlIHdlZWsgb2ZcbiAgLy8gdGhlIGRheWxpZ2h0IHNhdmluZyB0aW1lIGNsb2NrIHNoaWZ0KS5cbiAgcmV0dXJuIE1hdGgucm91bmQoKHRpbWVzdGFtcExlZnQgLSB0aW1lc3RhbXBSaWdodCkgLyBtaWxsaXNlY29uZHNJbkRheSk7XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzO1xuIiwiaW1wb3J0IHsgc3RhcnRPZkRheSB9IGZyb20gXCIuL3N0YXJ0T2ZEYXkubWpzXCI7XG5cbi8qKlxuICogQG5hbWUgc3RhcnRPZlRvZGF5XG4gKiBAY2F0ZWdvcnkgRGF5IEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFJldHVybiB0aGUgc3RhcnQgb2YgdG9kYXkuXG4gKiBAcHVyZSBmYWxzZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJuIHRoZSBzdGFydCBvZiB0b2RheS5cbiAqXG4gKiBAcmV0dXJucyBUaGUgc3RhcnQgb2YgdG9kYXlcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdG9kYXkgaXMgNiBPY3RvYmVyIDIwMTQ6XG4gKiBjb25zdCByZXN1bHQgPSBzdGFydE9mVG9kYXkoKVxuICogLy89PiBNb24gT2N0IDYgMjAxNCAwMDowMDowMFxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RhcnRPZlRvZGF5KCkge1xuICByZXR1cm4gc3RhcnRPZkRheShEYXRlLm5vdygpKTtcbn1cblxuLy8gRmFsbGJhY2sgZm9yIG1vZHVsYXJpemVkIGltcG9ydHM6XG5leHBvcnQgZGVmYXVsdCBzdGFydE9mVG9kYXk7XG4iLCIvKipcbiAqIENvbGxlY3Rpb24gb2YgdXRpbGl0aWVzIGFzIENvbnN0YW50cywgdmFsaWRhdGlvbnMsIGZ1bmN0aW9ucyBhbmQgZXZlbnRzXG4gKi9cbmltcG9ydCB7XG4gICAgcHJpb3JpdHlWYWx1ZXMsXG4gICAgbGlzdEFycmF5LFxuICAgIHRhc2tzQXJyYXksXG4gICAgVGFzayxcbiAgICBUYXNrTGlzdCxcbiAgICB0YXNrc0RhdGVGaWx0ZXIsXG4gICAgdGFza3NQcm9qZWN0RmlsdGVyLFxufSBmcm9tIFwiLi9tb2RlbFwiO1xuaW1wb3J0IHBlbmNpbEljb24gZnJvbSBcIi4vYXNzZXRzL2VkaXQuc3ZnXCI7XG5pbXBvcnQgdHJhc2hJY29uIGZyb20gXCIuL2Fzc2V0cy90cmFzaC5zdmdcIjtcbmltcG9ydCB7IGNyZWF0ZVNpZGVQYW5lbExpc3QsIGdlbmVyYXRlTmV3VGFza1BvcHVwIH0gZnJvbSBcIi4vaG9tZVwiO1xuaW1wb3J0IHsgdG9EYXRlLCBpc1RvZGF5LCBkaWZmZXJlbmNlSW5EYXlzLCBzdGFydE9mVG9kYXkgfSBmcm9tIFwiZGF0ZS1mbnNcIjtcblxuZXhwb3J0IGNvbnN0IE5PX0RBVEUgPSBuZXcgRGF0ZSg4NjQwMDAwMDAwMDAwMDApO1xuXG5sZXQgbGFzdElEID0gXCJcIjsgLy8gSUQgb2YgdGhlIGxhc3QgZWxlbWVudCBlZGl0ZWRcbmxldCBsYXN0TGlzdElEID0gXCJcIjsgLy8gSUQgb2YgdGhlIGxhc3QgbGlzdCBlbGVtZW50IGVkaXRlZFxuXG5leHBvcnQgZnVuY3Rpb24gYWRkRXZMaXN0ZW5lcnMoKSB7XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBldmVudExpc3RlbmVyIHRvIHRoZSBtZW51IGFuZCBidXR0b25zXG4gICAgICovXG5cbiAgICAvLyBCdXJnZXIgbWVudSB3aGljaCBjb250YWlucyBmaWx0ZXJzIGFuZCBsaXN0c1xuICAgIGNvbnN0IG1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnVJY29uXCIpO1xuICAgIG1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZ2dsZVNpZGVQYW5lbCk7XG5cbiAgICAvLyBCdXR0b24gaW4gc2lkZS1wYW5lbCB0byBvcGVuIGFuZCBjbG9zZSB0aGUgTmV3LUxpc3QgZm9ybVxuICAgIGNvbnN0IG5ld0xpc3RCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bi1uZXdfbGlzdFwiKTtcbiAgICBuZXdMaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVOZXdMaXN0Rm9ybSk7XG5cbiAgICAvLyBCdXR0b24gaW4gaW5wdXQtZm9ybSAobmV3IGxpc3QpIHRvIGNhbmNlbCAoY2xvc2UpIHRoZSBOZXctTGlzdCBmb3JtXG4gICAgY29uc3QgY2FuY2VsTmV3TGlzdEZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbmNlbF9idG5fZm9ybVwiKTtcbiAgICBjYW5jZWxOZXdMaXN0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlTmV3TGlzdEZvcm0pO1xuXG4gICAgLy8gQnV0dG9uIE5ldyBUYXNrIGluIG5hdmJhciB0byBzaG93IHRoZSBwb3B1cCBmb3JtXG4gICAgY29uc3QgbmV3VGFza0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bi1uZXdfdGFza1wiKTtcbiAgICBuZXdUYXNrRm9ybS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlTmV3VGFza1BvcHVwKTtcblxuICAgIC8vIEJ1dHRvbiBpbiBpbnB1dC1mb3JtIChuZXcgdGFzaykgdG8gY2FuY2VsIChjbG9zZSkgdGhlIE5ldy10YXNrIGZvcm1cbiAgICBjb25zdCBjYW5jZWxOZXdUYXNrRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FuY2VsX2J0bl90YXNrX2Zvcm1cIik7XG4gICAgY2FuY2VsTmV3VGFza0Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZ2dsZU5ld1Rhc2tQb3B1cCk7XG5cbiAgICAvLyBCdXR0b24gaW4gaW5wdXQtZm9ybSAobmV3IHRhc2spIHRvIGNyZWF0ZSBhbmQgYWRkIGEgbmV3IHRhc2tcbiAgICBjb25zdCBhZGROZXdUYXNrQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRfdGFza19idG5fZm9ybVwiKTtcbiAgICBhZGROZXdUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgIFwiY2xpY2tcIixcbiAgICAgICAgY3JlYXRlQW5kRWRpdFRhc2tPYmplY3RGcm9tUG9wdXBGb3JtXG4gICAgKTtcblxuICAgIC8vIEJ1dHRvbiBpbiB0aHcgTmV3TGlzdCBmb3JtIHdoaWNoIGFkZCBhIG5ldyBsaXN0XG4gICAgY29uc3QgYWRkTmV3TGlzdEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRkX2xpc3RfYnRuX2Zvcm1cIik7XG4gICAgYWRkTmV3TGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYWRkTmV3TGlzdCk7XG5cbiAgICAvLyBCdXR0b24gSG9tZSBpbiBzaWRlUGFuZWxcbiAgICBjb25zdCBob21lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcF9nX2hvbWVcIik7XG4gICAgaG9tZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xlYW5UYXNrc0ZpbHRlcnMpO1xuXG4gICAgLy8gQnV0dG9uIEhvbWUgaW4gc2lkZVBhbmVsXG4gICAgY29uc3QgdG9kYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfdG9kYXlcIik7XG4gICAgdG9kYXkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZGF5c1Rhc2tzRmlsdGVyKTtcblxuICAgIC8vIEJ1dHRvbiBIb21lIGluIHNpZGVQYW5lbFxuICAgIGNvbnN0IHVwY29taW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcF9nX3VwY29taW5nXCIpO1xuICAgIHVwY29taW5nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB1cGNvbWluZ1Rhc2tzRmlsdGVyKTtcblxuICAgIC8vIEJ1dHRvbiBIb21lIGluIHNpZGVQYW5lbFxuICAgIGNvbnN0IGFueXRpbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfYW55dGltZVwiKTtcbiAgICBhbnl0aW1lLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhbnl0aW1lVGFza3NGaWx0ZXIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGFza3NCeVByb2plY3QoKSB7XG4gICAgY29uc3QgbGlzdElEID0gdGhpcy5pZC5zbGljZSg1KTtcblxuICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGFyZW50X2xpc3RfbmFtZV9tYWluX3BhbmVsXCIpO1xuICAgIHByb2plY3RUaXRsZS50ZXh0Q29udGVudCA9IFwiLVwiO1xuXG4gICAgbGlzdEFycmF5LmZvckVhY2goKGxpc3QpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJsaXN0SUQgPSBcIiArIGxpc3RJRCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiKGVsZW1lbnQgaW4gYXJyYXkpIGxpc3QuaWQgPSBcIiArIGxpc3QuaWQpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIihlbGVtZW50IGluIGFycmF5KSBsaXN0Lm5hbWUgPSBcIiArIGxpc3QubmFtZSk7XG4gICAgICAgIGlmIChsaXN0LmlkID09IGxpc3RJRCkge1xuICAgICAgICAgICAgcHJvamVjdFRpdGxlLnRleHRDb250ZW50ID0gbGlzdC5uYW1lO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZyhcIihwdW50byAwKSB0YXNrc1Byb2plY3RGaWx0ZXIgaW4gdGFza0J5UHJvamVjdCgpOiBcIiArIHRhc2tzUHJvamVjdEZpbHRlcik7XG5cbiAgICB0YXNrc1Byb2plY3RGaWx0ZXIgPSBsaXN0SUQ7XG4gICAgY29uc29sZS5sb2coXCIocHVudG8gMSkgdGFza3NQcm9qZWN0RmlsdGVyIGluIHRhc2tCeVByb2plY3QoKTogXCIgKyB0YXNrc1Byb2plY3RGaWx0ZXIpO1xuXG4gICAgcmVmcmVzaExpc3RWaWV3KCk7IC8vY2xlYW5zIHRoZSBzcC1ncm91cC1zZWxlY3RlZCBjbGFzc1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5pZCkuY2xhc3NMaXN0LmFkZChcInNwLWdyb3VwLXNlbGVjdGVkXCIpO1xuXG4gICAgcmVmcmVzaFRhc2tzVmlldygpO1xuXG4gICAgLy8gY29uc29sZS5sb2coXCJ0YXNrIHBhcmVudCBsaXN0OiBcIiArIHRhc2tzQXJyYXlbMF0ucGFyZW50TGlzdCArIFwiIC0gVHlwZTogXCIgKyB0eXBlb2YodGFza3NBcnJheVswXS5wYXJlbnRMaXN0KSk7XG4gICAgLy8gY29uc29sZS5sb2coXCJmaWx0ZXI6IFwiICsgdGFza3NQcm9qZWN0RmlsdGVyICsgXCIgLSBUeXBlOiBcIiArIHR5cGVvZih0YXNrc1Byb2plY3RGaWx0ZXIpKTtcbiAgICAvLyBjb25zdCB0ZXN0dGVzdCA9IHRhc2tzQXJyYXlbMF0ucGFyZW50TGlzdCA9PSB0YXNrc1Byb2plY3RGaWx0ZXI7XG4gICAgLy8gY29uc29sZS5sb2coXCJlcXVhbD86IFwiICsgdGVzdHRlc3QpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDU1NDbGFzc0ZpbHRlclNlbGVjdGVkKCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3BfZ19ob21lXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzcC1ncm91cC1zZWxlY3RlZFwiKTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfdG9kYXlcIikuY2xhc3NMaXN0LnJlbW92ZShcInNwLWdyb3VwLXNlbGVjdGVkXCIpO1xuICAgIGRvY3VtZW50XG4gICAgICAgIC5nZXRFbGVtZW50QnlJZChcInNwX2dfdXBjb21pbmdcIilcbiAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJzcC1ncm91cC1zZWxlY3RlZFwiKTtcbiAgICBkb2N1bWVudFxuICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJzcF9nX2FueXRpbWVcIilcbiAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJzcC1ncm91cC1zZWxlY3RlZFwiKTtcbn1cblxuZnVuY3Rpb24gY2xlYW5UYXNrc0ZpbHRlcnMoKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaWx0ZXJfZGF0ZV90aXRsZV9tYWluX3BhbmVsXCIpLnRleHRDb250ZW50ID1cbiAgICAgICAgXCJIb21lXCI7XG5cbiAgICB0YXNrc0RhdGVGaWx0ZXIgPSBcImFueXRpbWVcIjtcblxuICAgIHRhc2tzUHJvamVjdEZpbHRlciA9IFwiXCI7XG5cbiAgICByZW1vdmVDU1NDbGFzc0ZpbHRlclNlbGVjdGVkKCk7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfaG9tZVwiKS5jbGFzc0xpc3QuYWRkKFwic3AtZ3JvdXAtc2VsZWN0ZWRcIik7XG5cbiAgICByZWZyZXNoVGFza3NWaWV3KCk7XG4gICAgcmVmcmVzaExpc3RWaWV3KCk7XG59XG5cbmZ1bmN0aW9uIHRvZGF5c1Rhc2tzRmlsdGVyKCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyX2RhdGVfdGl0bGVfbWFpbl9wYW5lbFwiKS50ZXh0Q29udGVudCA9XG4gICAgICAgIFwiVG9kYXlcIjtcblxuICAgIHRhc2tzRGF0ZUZpbHRlciA9IFwidG9kYXlcIjtcblxuICAgIC8vIHRhc2tzUHJvamVjdEZpbHRlciA9IFwiXCI7XG5cbiAgICByZW1vdmVDU1NDbGFzc0ZpbHRlclNlbGVjdGVkKCk7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfdG9kYXlcIikuY2xhc3NMaXN0LmFkZChcInNwLWdyb3VwLXNlbGVjdGVkXCIpO1xuXG4gICAgcmVmcmVzaFRhc2tzVmlldygpO1xufVxuXG5mdW5jdGlvbiB1cGNvbWluZ1Rhc2tzRmlsdGVyKCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyX2RhdGVfdGl0bGVfbWFpbl9wYW5lbFwiKS50ZXh0Q29udGVudCA9XG4gICAgICAgIFwiVXBjb21pbmdcIjtcblxuICAgIHRhc2tzRGF0ZUZpbHRlciA9IFwidXBjb21pbmdcIjtcblxuICAgIC8vIHRhc2tzUHJvamVjdEZpbHRlciA9IFwiXCI7XG5cbiAgICByZW1vdmVDU1NDbGFzc0ZpbHRlclNlbGVjdGVkKCk7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfdXBjb21pbmdcIikuY2xhc3NMaXN0LmFkZChcInNwLWdyb3VwLXNlbGVjdGVkXCIpO1xuXG4gICAgcmVmcmVzaFRhc2tzVmlldygpO1xufVxuXG5mdW5jdGlvbiBhbnl0aW1lVGFza3NGaWx0ZXIoKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaWx0ZXJfZGF0ZV90aXRsZV9tYWluX3BhbmVsXCIpLnRleHRDb250ZW50ID1cbiAgICAgICAgXCJBbnl0aW1lXCI7XG5cbiAgICB0YXNrc0RhdGVGaWx0ZXIgPSBcImFueXRpbWVcIjtcblxuICAgIC8vIHRhc2tzUHJvamVjdEZpbHRlciA9IFwiXCI7XG5cbiAgICByZW1vdmVDU1NDbGFzc0ZpbHRlclNlbGVjdGVkKCk7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2dfYW55dGltZVwiKS5jbGFzc0xpc3QuYWRkKFwic3AtZ3JvdXAtc2VsZWN0ZWRcIik7XG5cbiAgICByZWZyZXNoVGFza3NWaWV3KCk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZU5ld1Rhc2tQb3B1cCgpIHtcbiAgICAvLyBDU1MgY2xhc3MgdG8gY2hhbmdlIHRoZSBkaXNwbGF5IHBhcmFtZXRlclxuICAgIGRvY3VtZW50XG4gICAgICAgIC5nZXRFbGVtZW50QnlJZChcIm5ld190YXNrX3BvcHVwXCIpXG4gICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwicG9wdXAtdW5oaWRkZW5cIik7XG5cbiAgICAvLyBDbGVhbnMgdGhlIGlucHV0IGZpZWxkc1xuICAgIGNvbnN0IGlucHV0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmV3X3Rhc2tfaW5wdXRfbmFtZVwiKTtcbiAgICBpbnB1dE5hbWUudmFsdWUgPSBcIlwiO1xuXG4gICAgY29uc3QgaW5wdXREZXNjID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXdfdGFza19pbnB1dF9kZXNjXCIpO1xuICAgIGlucHV0RGVzYy52YWx1ZSA9IFwiXCI7XG5cbiAgICBjb25zdCBpbnB1dERhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ld190YXNrX2lucHV0X2RhdGVcIik7XG4gICAgaW5wdXREYXRlLnZhbHVlID0gXCJcIjtcblxuICAgIGNvbnN0IGlucHV0UHJpb3JpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ld190YXNrX2lucHV0X3ByaW9yaXR5XCIpO1xuICAgIGlucHV0UHJpb3JpdHkudmFsdWUgPSBcIlwiO1xuXG4gICAgY29uc3QgaW5wdXRQYXJlbnRMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICAgIFwibmV3X3Rhc2tfaW5wdXRfcGFyZW50X2xpc3RcIlxuICAgICk7XG4gICAgaW5wdXRQYXJlbnRMaXN0LnZhbHVlID0gXCJcIjtcblxuICAgIC8vIENsZWFuIHRoZSB2YXJpYWJsZSBpbiBjYXNlIHRoZSBwb3B1cCBoYXMgYmVlbiBvcGVuZWQgZnJvbSB0aGUgZWRpdCBidXR0b25cbiAgICBsYXN0SUQgPSBcIlwiO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVTaWRlUGFuZWwoKSB7XG4gICAgLy9DU1MgQ2xhc3MgXCJoaWRkZW5cIjogY2hhbmdlIHRoZSBncmlkIGxheW91dFxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnRvZ2dsZShcImhpZGRlblwiKTtcblxuICAgIC8vQ1NTIENsYXNzIFwic2lkZS1wYW5lbC1oaWRkZW5cIjogY2hhbmdlIGRpc3BsYXkgdG8gJ25vbmUnXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlUGFuZWxcIikuY2xhc3NMaXN0LnRvZ2dsZShcInNpZGUtcGFuZWwtaGlkZGVuXCIpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVOZXdMaXN0Rm9ybSgpIHtcbiAgICAvL1RvZ2dsZSBjbGFzcyB0byBzaG93IG9yIGhpZGUgdGhlIGZvcm1cbiAgICBkb2N1bWVudFxuICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJuZXdfbGlzdF9pbnB1dF9mb3JtXCIpXG4gICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwicG9wdXAtdW5oaWRkZW5cIik7XG5cbiAgICAvL0NsZWFucyB0aGUgaW5wdXQgZmllbGRcbiAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmV3X2xpc3RfaW5wdXRfZmllbGRfdGV4dFwiKTtcbiAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGFkZE5ld0xpc3QoKSB7XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgbmV3IGxpc3QgYW5kIGFwcGVuZCB0aGUgbGlzdCBlbGVtZW50IHRvIHRoZSBzaWRlUGFuZWwgbWVudVxuICAgICAqXG4gICAgICogVGhlIGlucHV0IHZhbHVlIChsaXN0IG5hbWUpIGlzIHZhbGlkYXRlZCB0byBhdm9pZCBkdXBsaWNhdGVzXG4gICAgICovXG5cbiAgICBjb25zdCBuZXdMaXN0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAgICAgICBcIm5ld19saXN0X2lucHV0X2ZpZWxkX3RleHRcIlxuICAgICkudmFsdWU7XG5cbiAgICBsZXQgaW5kZXggPSAtSW5maW5pdHk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAobGlzdEFycmF5W2ldLm5hbWUgPT09IG5ld0xpc3ROYW1lKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yOiBUYXNrTGlzdCAobmFtZSkgYWxyZWFkeSBjcmVhdGVkLlwiKTtcbiAgICAgICAgICAgIGFsZXJ0KFwiTmFtZSBsaXN0IGN1cnJlbnRseSBpbiB1c2UhXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpc3RBcnJheVtpXS5pZCA9PSBsYXN0TGlzdElEKSB7XG4gICAgICAgICAgICBpbmRleCA9IGk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICBsaXN0QXJyYXlbaW5kZXhdLm5hbWUgPSBuZXdMaXN0TmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBsaXN0QXJyYXkucHVzaChuZXcgVGFza0xpc3QobmV3TGlzdE5hbWUpKTtcbiAgICB9XG5cbiAgICBsYXN0TGlzdElEID0gXCJcIjtcblxuICAgIHRvZ2dsZU5ld0xpc3RGb3JtKCk7XG4gICAgcmVmcmVzaExpc3RWaWV3KCk7XG4gICAgcmVmcmVzaFRhc2tzVmlldygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5pcXVlSUQoKSB7XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGFuIHVuaXF1ZSBJRC4gVXNlZCB0byBpZGVudGlmeSBlYWNoIExpc3Qgb3IgVGFza1xuICAgICAqL1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBEYXRlLm5vdygpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlZnJlc2hUYXNrc1ZpZXcoKSB7XG4gICAgLyoqXG4gICAgICogQ2xlYXJzIHRoZSB1c2VyIGludGVyZmFjZSBhbmQgbG9hZHMgdGhlIGN1cnJlbnQgdGFza3MgYXJyYXkgdG9cbiAgICAgKiBkaXNwbGF5IHRoZW1cbiAgICAgKi9cblxuICAgIGNvbnN0IHRhc2tQYW5lbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFza19wYW5lbFwiKTtcblxuICAgIGxldCBmaWx0ZXJlZFRhc2tzQXJyYXk7XG4gICAgY29uc3QgYXJyYXlUb1ByaW50ID0gW107XG5cbiAgICAvL2NvbnN0IG1haW5TZWN0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluX2NvbnRlbnRcIik7XG5cbiAgICAvLyBDbGVhcnMgdGhlIHRhc2sgcGFuZWxcbiAgICB0YXNrUGFuZWwuaW5uZXJIVE1MID0gXCJcIjtcblxuICAgIC8vIEdlbmVyYXRlcyBIVE1MIGVsZW1lbnRzIGZyb20gdGFza3MgaW4gdGhlIHRhc2tzQXJyYXkuXG4gICAgLy8gVGhpcyBhcnJheSBjYW4gYmUgZmlsdGVyZWQgb3Igbm90LlxuXG4gICAgc3dpdGNoICh0YXNrc0RhdGVGaWx0ZXIpIHtcbiAgICAgICAgY2FzZSBcInRvZGF5XCI6XG4gICAgICAgICAgICBmaWx0ZXJlZFRhc2tzQXJyYXkgPSB0YXNrc0FycmF5LmZpbHRlcigodGFzaykgPT5cbiAgICAgICAgICAgICAgICBpc1RvZGF5KHRvRGF0ZSh0YXNrLmR1ZURhdGUpKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJ1cGNvbWluZ1wiOlxuICAgICAgICAgICAgZmlsdGVyZWRUYXNrc0FycmF5ID0gdGFza3NBcnJheS5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKHRhc2spID0+XG4gICAgICAgICAgICAgICAgICAgIGRpZmZlcmVuY2VJbkRheXModG9EYXRlKHRhc2suZHVlRGF0ZSksIHN0YXJ0T2ZUb2RheSgpKSA8XG4gICAgICAgICAgICAgICAgICAgICAgICA3ICYmXG4gICAgICAgICAgICAgICAgICAgIGRpZmZlcmVuY2VJbkRheXModG9EYXRlKHRhc2suZHVlRGF0ZSksIHN0YXJ0T2ZUb2RheSgpKSA+PSAwXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGZpbHRlcmVkVGFza3NBcnJheSA9IHRhc2tzQXJyYXk7XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG5cblxuICAgIGNvbnNvbGUubG9nKFwidGFza3NQcm9qZWN0RmlsdGVyIGluIHJlZnJlc2h0VGFza1ZpZXcoKTogXCIgKyB0YXNrc1Byb2plY3RGaWx0ZXIpO1xuXG4gICAgaWYgKHRhc2tzUHJvamVjdEZpbHRlciA9PSBcIlwiKSB7XG4gICAgICAgIGZpbHRlcmVkVGFza3NBcnJheS5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgICAgICB0YXNrUGFuZWwuYXBwZW5kQ2hpbGQoZ2VuZXJhdGVOZXdUYXNrRWxlbWVudCh0YXNrKSk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGZpbHRlcmVkVGFza3NBcnJheS5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgaWYgKHRhc2sucGFyZW50TGlzdCA9PSB0YXNrc1Byb2plY3RGaWx0ZXIpIGFycmF5VG9QcmludC5wdXNoKHRhc2spO1xuICAgICAgICB9KTtcblxuICAgICAgICBhcnJheVRvUHJpbnQuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgdGFza1BhbmVsLmFwcGVuZENoaWxkKGdlbmVyYXRlTmV3VGFza0VsZW1lbnQoaXRlbSkpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUFuZEVkaXRUYXNrT2JqZWN0RnJvbVBvcHVwRm9ybSgpIHtcbiAgICAvKipcbiAgICAgKiBJZiB0aGUgVGFzayBJRCBkb2VzIG5vdCBleGlzdCwgY3JlYXRlcyBhIG5ldyBUYXNrIHVzaW5nIHRoZSBmb3JtIGlucHV0XG4gICAgICogZmllbGRzIG9mIHRoZSBOZXdUYXNrIHBvcHVwLiBPdGhlcndpc2UsIHJlcGxhY2VzIHRoZSB2YWx1ZSBwcm9wZXJ0aWVzIG9mIHRoZVxuICAgICAqIGlkZW50aWZpZWQgdGFza1xuICAgICAqL1xuXG4gICAgY29uc3QgdGFza05hbWVGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXdfdGFza19pbnB1dF9uYW1lXCIpO1xuICAgIGNvbnN0IHRhc2tEZXNjRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmV3X3Rhc2tfaW5wdXRfZGVzY1wiKTtcbiAgICBjb25zdCB0YXNrRGF0ZUZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ld190YXNrX2lucHV0X2RhdGVcIik7XG4gICAgY29uc3QgdGFza1ByaW9yaXR5Rm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmV3X3Rhc2tfaW5wdXRfcHJpb3JpdHlcIik7XG4gICAgY29uc3QgdGFza1Byb2plY3RGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICAgIFwibmV3X3Rhc2tfaW5wdXRfcGFyZW50X2xpc3RcIlxuICAgICk7XG5cbiAgICAvKipcbiAgICAgKiBTZWFyY2ggZm9yIHRoZSBUYXNrIHdpdGggc2FtZSBJRCBhcyB0aGUgYnV0dG9uIHdhcyBjbGlja2VkICh3aGljaCBpcyB0aGUgc2FtZSBUYXNrT2JqZWN0IElEKVxuICAgICAqIElmIHRoZXJlJ3MgYSBjb2luY2lkZW5jZSwgdGhlIGVsZW1lbnQgcHJvcGVydGllcyBhcmUgb3ZlcndyaXR0ZW4uXG4gICAgICovXG4gICAgbGV0IGluZGV4ID0gLUluZmluaXR5O1xuXG4gICAgbGV0IHBhcmVudExpc3RJRCA9IFwiXCI7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhc2tzQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRhc2tzQXJyYXlbaV0uaWQgPT09IGxhc3RJRCkge1xuICAgICAgICAgICAgaW5kZXggPSBpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IHRhc2tzQXJyYXlbaW5kZXhdO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAobGlzdEFycmF5W2ldLm5hbWUgPT0gdGFza1Byb2plY3RGb3JtLnZhbHVlKVxuICAgICAgICAgICAgICAgIHBhcmVudExpc3RJRCA9IGxpc3RBcnJheVtpXS5pZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGVsZW1lbnQubmFtZSA9IHRhc2tOYW1lRm9ybS52YWx1ZTtcbiAgICAgICAgZWxlbWVudC5kZXNjID0gdGFza0Rlc2NGb3JtLnZhbHVlO1xuICAgICAgICBlbGVtZW50LmR1ZURhdGUgPSB0YXNrRGF0ZUZvcm0udmFsdWU7XG4gICAgICAgIGVsZW1lbnQucHJpb3JpdHkgPSB0YXNrUHJpb3JpdHlGb3JtLnZhbHVlO1xuICAgICAgICBlbGVtZW50LnBhcmVudExpc3QgPSBwYXJlbnRMaXN0SUQ7XG5cbiAgICAgICAgY29uc29sZS5sb2coXCJFZGl0ZWQ6IFwiICsgbGFzdElEKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGxpc3RBcnJheVtpXS5uYW1lID09IHRhc2tQcm9qZWN0Rm9ybS52YWx1ZSlcbiAgICAgICAgICAgICAgICBwYXJlbnRMaXN0SUQgPSBsaXN0QXJyYXlbaV0uaWQ7XG4gICAgICAgIH1cblxuICAgICAgICBhZGROZXdUYXNrKFxuICAgICAgICAgICAgdGFza05hbWVGb3JtLnZhbHVlLFxuICAgICAgICAgICAgdGFza0Rlc2NGb3JtLnZhbHVlLFxuICAgICAgICAgICAgdGFza0RhdGVGb3JtLnZhbHVlLFxuICAgICAgICAgICAgcGFyZW50TGlzdElELFxuICAgICAgICAgICAgdGFza1ByaW9yaXR5Rm9ybS52YWx1ZVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGxhc3RJRCA9IFwiXCI7XG5cbiAgICB0b2dnbGVOZXdUYXNrUG9wdXAoKTtcblxuICAgIHJlZnJlc2hUYXNrc1ZpZXcoKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVOZXdUYXNrRWxlbWVudCh0YXNrT2JqZWN0KSB7XG4gICAgLyoqXG4gICAgICogVGFrZXMgYSBUYXNrIChjbGFzcykgZWxlbWVudCBhbmRcbiAgICAgKiByZXR1cm5zIHRoZSBIVE1MIHRhc2sgY29udGFpbmVyIGJ1aWx0IHdpdGggdGhlIHRhc2sgcHJvcGVydGllc1xuICAgICAqIG5hbWUsIGR1ZURhdGUsIHBhcmVudExpc3QsIGRlc2MsIHByaW9yaXR5XG4gICAgICovXG5cbiAgICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0YXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLWNvbnRhaW5lclwiKTtcblxuICAgIGNvbnNvbGUubG9nKFwidGFza09iamVjdC5wcmlvcml0eTogXCIgKyB0YXNrT2JqZWN0LnByaW9yaXR5KTtcblxuICAgIHN3aXRjaCAocGFyc2VJbnQodGFza09iamVjdC5wcmlvcml0eSkpIHtcbiAgICAgICAgY2FzZSAtMTpcbiAgICAgICAgICAgIHRhc2tDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInRhc2stcHJpb3JpdHktbG93XCIpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgdGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGFzay1wcmlvcml0eS1tZWRpdW1cIik7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICB0YXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLXByaW9yaXR5LWhpZ2hcIik7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgY29uc3QgdGFza05hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gICAgdGFza05hbWUudGV4dENvbnRlbnQgPSB0YXNrT2JqZWN0Lm5hbWU7XG4gICAgdGFza05hbWUuY2xhc3NMaXN0LmFkZChcInRhc2stbmFtZVwiKTtcbiAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tOYW1lKTtcblxuICAgIGNvbnN0IHRhc2tEYXRlQW5kTGlzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGFza0RhdGVBbmRMaXN0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLWRhdGUtbGlzdC1pbmZvXCIpO1xuXG4gICAgY29uc3QgdGFza0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgdGFza0RhdGUuY2xhc3NMaXN0LmFkZChcInRhc2stZGF0ZVwiKTtcbiAgICB0YXNrRGF0ZS50ZXh0Q29udGVudCA9IHRhc2tPYmplY3QuZHVlRGF0ZTtcbiAgICB0YXNrRGF0ZUFuZExpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0RhdGUpO1xuXG4gICAgLy8gVG8gdXBkYXRlIHBhcmVudCBsaXN0IGluIHRhc2sgYXR0cmlidXRlcyB3aGVuIHRoaXMgaXMgbW9kaWZpZWRcbiAgICBjb25zdCB0YXNrUGFyZW50TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgICB0YXNrUGFyZW50TGlzdC5jbGFzc0xpc3QuYWRkKFwidGFzay1wYXJlbnQtbGlzdFwiKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChsaXN0QXJyYXlbaV0uaWQgPT0gdGFza09iamVjdC5wYXJlbnRMaXN0KVxuICAgICAgICAgICAgdGFza1BhcmVudExpc3QudGV4dENvbnRlbnQgPSBsaXN0QXJyYXlbaV0ubmFtZTtcbiAgICB9XG5cbiAgICB0YXNrRGF0ZUFuZExpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza1BhcmVudExpc3QpO1xuXG4gICAgLy8gY29uc3QgdGFza1ByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xuICAgIC8vIHRhc2tQcmlvcml0eS5jbGFzc0xpc3QuYWRkKFwidGFzay1wcmlvcml0eVwiKTtcbiAgICAvLyB0YXNrUHJpb3JpdHkudGV4dENvbnRlbnQgPSB0YXNrT2JqZWN0LnByaW9yaXR5O1xuICAgIC8vIHRhc2tEYXRlQW5kTGlzdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHkpO1xuXG4gICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrRGF0ZUFuZExpc3RDb250YWluZXIpO1xuXG4gICAgY29uc3QgdGFza0Rlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICB0YXNrRGVzYy5jbGFzc0xpc3QuYWRkKFwidGFzay1kZXNjXCIpO1xuICAgIHRhc2tEZXNjLnRleHRDb250ZW50ID0gdGFza09iamVjdC5kZXNjO1xuICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0Rlc2MpO1xuXG4gICAgY29uc3QgZWRpdFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGVkaXRUYXNrLmNsYXNzTGlzdC5hZGQoXCJidG4tZWRpdC10YXNrXCIpO1xuICAgIGNvbnN0IGVkaXRJY29uID0gbmV3IEltYWdlKCk7XG4gICAgZWRpdEljb24uc3JjID0gcGVuY2lsSWNvbjtcbiAgICBlZGl0SWNvbi5jbGFzc0xpc3QuYWRkKFwidGFzay1jb250cm9sc1wiKTtcbiAgICBlZGl0SWNvbi5zZXRBdHRyaWJ1dGUoXCJlZGl0SURcIiwgdGFza09iamVjdC5pZCk7XG4gICAgZWRpdEljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlYXJjaFRhc2tBbmRUb2dnbGVQb3B1cCk7XG4gICAgZWRpdFRhc2suYXBwZW5kQ2hpbGQoZWRpdEljb24pO1xuICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoZWRpdFRhc2spO1xuXG4gICAgY29uc3QgZGVsZXRlVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgZGVsZXRlVGFzay5jbGFzc0xpc3QuYWRkKFwiYnRuLWRlbGV0ZS10YXNrXCIpO1xuICAgIGNvbnN0IGRlbGV0ZUljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICBkZWxldGVJY29uLnNyYyA9IHRyYXNoSWNvbjtcbiAgICBkZWxldGVJY29uLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLWNvbnRyb2xzXCIpO1xuICAgIGRlbGV0ZUljb24uaWQgPSB0YXNrT2JqZWN0LmlkO1xuICAgIGRlbGV0ZUljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlYXJjaEFuZERlbGV0ZVRhc2spO1xuICAgIGRlbGV0ZVRhc2suYXBwZW5kQ2hpbGQoZGVsZXRlSWNvbik7XG4gICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZChkZWxldGVUYXNrKTtcblxuICAgIHJldHVybiB0YXNrQ29udGFpbmVyO1xufVxuXG5mdW5jdGlvbiBzZWFyY2hBbmREZWxldGVUYXNrKCkge1xuICAgIC8qKlxuICAgICAqIFNlYXJjaCBmb3IgdGhlIFRhc2sgd2l0aCBzYW1lIElEIGFzIHRoZSBidXR0b24gd2FzIGNsaWNrZWQgKHdoaWNoIGlzIHRoZSBzYW1lIFRhc2tPYmplY3QgSUQpXG4gICAgICogSWYgdGhlcmUncyBhIGNvaW5jaWRlbmNlLCB0aGUgYXJyYXkncyBlbGVtZW50IGlzIGRlbGV0ZWRcbiAgICAgKi9cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhc2tzQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRhc2tzQXJyYXlbaV0uaWQgPT0gdGhpcy5pZCkge1xuICAgICAgICAgICAgdGFza3NBcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRlbGV0ZWQgcGVybWFuZW50bHk6IFwiICsgdGhpcy5pZCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlZnJlc2hUYXNrc1ZpZXcoKTtcbn1cblxuZnVuY3Rpb24gc2VhcmNoVGFza0FuZFRvZ2dsZVBvcHVwKCkge1xuICAgIC8qKlxuICAgICAqIFNlYXJjaCBmb3IgdGhlIGFjdHVhbCB0YXNrIGFuZCBmaWxsIHVwIHRoZSBwb3B1cCBmb3JtLlxuICAgICAqIFRoZSB0YXNrIGF0dHJpYnV0ZXMgYXJlIHJlcGxhY2VkIHdpdGggdGhlIGZpbmFsIGZvcm0gdmFsdWVzLlxuICAgICAqL1xuICAgIGxldCBpbmRleCA9IC1JbmZpbml0eTtcblxuICAgIGxhc3RJRCA9IHRoaXMuZ2V0QXR0cmlidXRlKFwiZWRpdElEXCIpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YXNrc0FycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0YXNrc0FycmF5W2ldLmlkID09PSBsYXN0SUQpIHtcbiAgICAgICAgICAgIGluZGV4ID0gaTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0YXNrc0FycmF5W2luZGV4XTtcblxuICAgICAgICBjb25zdCB0YXNrTmFtZUZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ld190YXNrX2lucHV0X25hbWVcIik7XG4gICAgICAgIGNvbnN0IHRhc2tEZXNjRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmV3X3Rhc2tfaW5wdXRfZGVzY1wiKTtcbiAgICAgICAgY29uc3QgdGFza0RhdGVGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXdfdGFza19pbnB1dF9kYXRlXCIpO1xuICAgICAgICBjb25zdCB0YXNrUHJpb3JpdHlGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICAgICAgICBcIm5ld190YXNrX2lucHV0X3ByaW9yaXR5XCJcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgdGFza1BhcmVudExpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgICAgICAgICAgIFwibmV3X3Rhc2tfaW5wdXRfcGFyZW50X2xpc3RcIlxuICAgICAgICApO1xuXG4gICAgICAgIGxldCBwYXJlbnRMaXN0TmFtZSA9IFwiXCI7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChsaXN0QXJyYXlbaV0uaWQgPT0gZWxlbWVudC5wYXJlbnRMaXN0KVxuICAgICAgICAgICAgICAgIHBhcmVudExpc3ROYW1lID0gbGlzdEFycmF5W2ldLm5hbWU7XG4gICAgICAgIH1cblxuICAgICAgICB0b2dnbGVOZXdUYXNrUG9wdXAoKTtcblxuICAgICAgICAvLyB0aGUgdmFyaWFibGUgdmFsdWUgaXMgcmVwbGFjZWQgaW4gdG9nZ2xlTmV3VGFza1BvcHVwKClcbiAgICAgICAgbGFzdElEID0gdGhpcy5nZXRBdHRyaWJ1dGUoXCJlZGl0SURcIik7XG5cbiAgICAgICAgdGFza05hbWVGb3JtLnZhbHVlID0gZWxlbWVudC5uYW1lO1xuICAgICAgICB0YXNrRGVzY0Zvcm0udmFsdWUgPSBlbGVtZW50LmRlc2M7XG4gICAgICAgIHRhc2tEYXRlRm9ybS52YWx1ZSA9IGVsZW1lbnQuZHVlRGF0ZTtcbiAgICAgICAgdGFza1ByaW9yaXR5Rm9ybS52YWx1ZSA9IGVsZW1lbnQucHJpb3JpdHk7XG4gICAgICAgIHRhc2tQYXJlbnRMaXN0LnZhbHVlID0gcGFyZW50TGlzdE5hbWU7XG5cbiAgICAgICAgY29uc29sZS5sb2coXCJlbGVtZW50LnBhcmVudExpc3Q6IFwiICsgZWxlbWVudC5wYXJlbnRMaXN0KTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcIlBvcHVwIHJlZmlsbGVkIHdpdGg6IFwiICsgbGFzdElEKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGFkZE5ld1Rhc2soXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBUYXNrIG9iamVjdCBiZWZvcmUgYWRkaW5nIGl0IHRvIHRoZSB0YXNrQXJyYXlbXVxuICAgICAqL1xuICAgIG5hbWUsXG4gICAgZGVzY3JpcHRpb24gPSBcIlwiLFxuICAgIGR1ZURhdGUgPSBOT19EQVRFLFxuICAgIHBhcmVudExpc3QgPSBcIkdlbmVyYWxcIixcbiAgICBwcmlvcml0eSA9IHByaW9yaXR5VmFsdWVzLk1FRElVTVxuKSB7XG4gICAgY29uc3QgbmV3VGFzayA9IG5ldyBUYXNrKG5hbWUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwYXJlbnRMaXN0LCBwcmlvcml0eSk7XG4gICAgdGFza3NBcnJheS5wdXNoKG5ld1Rhc2spO1xuICAgIGNvbnNvbGUubG9nKFwiTmV3IHRhc2sgYWRkZWQgdG8gYXJyYXk6IFwiICsgbmV3VGFzay5pZCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWZyZXNoTGlzdFZpZXcoKSB7XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhbmQgY3JlYXRlcyB0aGUgdGFzayBsaXN0IGluIHRoZSBzaWRlIHBhbmVsIHVzaW5nIHRoZSBsaXN0QXJyYXlcbiAgICAgKi9cbiAgICB0cnkge1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZGVQYW5lbC1saXN0c1wiKS5yZW1vdmUoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhcImVsZW1lbnQgSUQ6IHNpZGVQYW5lbC1saXN0cyBET0VTIE5PVCBFWElTVFwiKTtcbiAgICB9XG5cbiAgICBjb25zdCBzaWRlUGFuZWxMaXN0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgc2lkZVBhbmVsTGlzdHMuaWQgPSBcInNpZGVQYW5lbC1saXN0c1wiO1xuXG4gICAgbGlzdEFycmF5LmZvckVhY2goKGxpc3QpID0+IHtcbiAgICAgICAgc2lkZVBhbmVsTGlzdHMuYXBwZW5kQ2hpbGQoY3JlYXRlU2lkZVBhbmVsTGlzdChsaXN0KSk7XG4gICAgfSk7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZGVQYW5lbFwiKS5hcHBlbmRDaGlsZChzaWRlUGFuZWxMaXN0cyk7XG5cbiAgICAvLyBEZWxldGVzIGFuZCBjcmVhdGVzIHRoZSBwb3B1cCB0byByZWZyZXNoIHRoZSBTZWxlY3QgZWxlbWVudCB2YWx1ZXMgKHBhcmVudExpc3QpXG4gICAgdHJ5IHtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXdfdGFza19wb3B1cFwiKS5yZW1vdmUoKTtcblxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGdlbmVyYXRlTmV3VGFza1BvcHVwKCkpO1xuXG4gICAgICAgIC8vIEJ1dHRvbiBpbiBpbnB1dC1mb3JtIChuZXcgdGFzaykgdG8gY2FuY2VsIChjbG9zZSkgdGhlIE5ldy10YXNrIGZvcm1cbiAgICAgICAgY29uc3QgY2FuY2VsTmV3VGFza0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgICAgICAgICAgIFwiY2FuY2VsX2J0bl90YXNrX2Zvcm1cIlxuICAgICAgICApO1xuICAgICAgICBjYW5jZWxOZXdUYXNrRm9ybS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlTmV3VGFza1BvcHVwKTtcblxuICAgICAgICAvLyBCdXR0b24gaW4gaW5wdXQtZm9ybSAobmV3IHRhc2spIHRvIGNyZWF0ZSBhbmQgYWRkIGEgbmV3IHRhc2tcbiAgICAgICAgY29uc3QgYWRkTmV3VGFza0J0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRkX3Rhc2tfYnRuX2Zvcm1cIik7XG4gICAgICAgIGFkZE5ld1Rhc2tCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgIFwiY2xpY2tcIixcbiAgICAgICAgICAgIGNyZWF0ZUFuZEVkaXRUYXNrT2JqZWN0RnJvbVBvcHVwRm9ybVxuICAgICAgICApO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZWxlbWVudCBJRDogbmV3X3Rhc2tfcG9wdXAgRE9FUyBOT1QgRVhJU1RcIik7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoQW5kRGVsZXRlTGlzdCgpIHtcbiAgICAvKipcbiAgICAgKiBTZWFyY2ggZm9yIHRoZSBMaXN0IHdpdGggc2FtZSBJRCBhcyB0aGUgYnV0dG9uIHdoaWNoIHdhcyBjbGlja2VkIChzYW1lIExpc3QgT2JqZWN0IElEKVxuICAgICAqIElmIHRoZXJlJ3MgYSBjb2luY2lkZW5jZSwgdGhlIGFycmF5J3MgZWxlbWVudCBpcyBkZWxldGVkXG4gICAgICovXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAobGlzdEFycmF5W2ldLmlkID09IHRoaXMuaWQpIHtcbiAgICAgICAgICAgIGxpc3RBcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRlbGV0ZWQgcGVybWFuZW50bHk6IFwiICsgdGhpcy5pZCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlZnJlc2hMaXN0VmlldygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoTGlzdEFuZFRvZ2dsZVBvcHVwKCkge1xuICAgIC8qKlxuICAgICAqIFNlYXJjaCBmb3IgdGhlIGFjdHVhbCBMaXN0IGFuZCBmaWxsIHVwIHRoZSBwb3B1cCBmb3JtLlxuICAgICAqIFRoZSBsaXN0IGF0dHJpYnV0ZXMgYXJlIHJlcGxhY2VkIHdpdGggdGhlIGZpbmFsIGZvcm0gdmFsdWVzLlxuICAgICAqL1xuICAgIGxldCBpbmRleCA9IC1JbmZpbml0eTtcblxuICAgIGxhc3RMaXN0SUQgPSB0aGlzLmdldEF0dHJpYnV0ZShcImVkaXRJRFwiKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChsaXN0QXJyYXlbaV0uaWQgPT09IGxhc3RMaXN0SUQpIHtcbiAgICAgICAgICAgIGluZGV4ID0gaTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGluZGV4KTtcblxuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBsaXN0QXJyYXlbaW5kZXhdO1xuXG4gICAgICAgIGNvbnN0IGxpc3ROYW1lRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAgICAgICAgICAgXCJuZXdfbGlzdF9pbnB1dF9maWVsZF90ZXh0XCJcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBUbyBhdm9pZCBjbG9zaW5nIGRlIGZvcm0gYWZ0ZXIgY2xpY2tpbmcgb3RoZXIgbGlzdCBlZGl0IGJ1dHRvbiB3aGVuIHRoZSBwb3B1cCBpcyB1bmhpZGRlblxuICAgICAgICBkb2N1bWVudFxuICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwibmV3X2xpc3RfaW5wdXRfZm9ybVwiKVxuICAgICAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cC11bmhpZGRlblwiKTtcblxuICAgICAgICB0b2dnbGVOZXdMaXN0Rm9ybSgpO1xuXG4gICAgICAgIGxpc3ROYW1lRm9ybS52YWx1ZSA9IGVsZW1lbnQubmFtZTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcIlBvcHVwIHJlZmlsbGVkIHdpdGg6IFwiICsgbGFzdElEKTtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZU9wdGlvbkZyb21MaXN0KGxpc3QpIHtcbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIGNyZWF0ZSBhbiBvcHRpb24gZnJvbSBhbiBhY3R1YWwgbGlzdCB0byBiZSBhcHBlbmRlZCBpbiBhIFNlbGVjdCBlbGVtZW50XG4gICAgICovXG4gICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBvcHRpb24udmFsdWUgPSBsaXN0Lm5hbWU7XG4gICAgb3B0aW9uLmlubmVyVGV4dCA9IGxpc3QubmFtZTtcblxuICAgIHJldHVybiBvcHRpb247XG59XG4iLCIvKipcbiAqIENyZWF0ZXMgdGhlIEhUTUwgZWxlbWVudHMgdG8gZ2VuZXJhdGUgdGhlIERPTVxuICovXG5cbmltcG9ydCBpY29uTWVudSBmcm9tIFwiLi9hc3NldHMvYmFycy1zb2xpZC5zdmdcIjtcbmltcG9ydCBpY29uUGx1cyBmcm9tIFwiLi9hc3NldHMvY2lyY2xlLXBsdXMtc29saWQuc3ZnXCI7XG5pbXBvcnQgZ2l0aHViSWNvbiBmcm9tIFwiLi9hc3NldHMvZ2l0aHViLnN2Z1wiO1xuaW1wb3J0IGhvbWVJY29uIGZyb20gXCIuL2Fzc2V0cy9ob21lLnN2Z1wiO1xuaW1wb3J0IHRvZGF5SWNvbiBmcm9tIFwiLi9hc3NldHMvdG9kYXkuc3ZnXCI7XG5pbXBvcnQgY2FsZW5kYXJJY29uIGZyb20gXCIuL2Fzc2V0cy9jYWxlbmRhci5zdmdcIjtcbmltcG9ydCBhbnl0aW1lSWNvbiBmcm9tIFwiLi9hc3NldHMvc3RhY2suc3ZnXCI7XG5pbXBvcnQgbmV3TGlzdEljb24gZnJvbSBcIi4vYXNzZXRzL2ZvbGRlci1wbHVzLnN2Z1wiO1xuaW1wb3J0IHBlbmNpbEljb24gZnJvbSBcIi4vYXNzZXRzL2VkaXQuc3ZnXCI7XG5pbXBvcnQgdHJhc2hJY29uIGZyb20gXCIuL2Fzc2V0cy90cmFzaC5zdmdcIjtcbmltcG9ydCB7XG4gICAgZ2VuZXJhdGVPcHRpb25Gcm9tTGlzdCxcbiAgICBzZWFyY2hBbmREZWxldGVMaXN0LFxuICAgIHNlYXJjaExpc3RBbmRUb2dnbGVQb3B1cCxcbiAgICB0YXNrc0J5UHJvamVjdCxcbn0gZnJvbSBcIi4vZnVuY3Rpb25hbGl0aWVzXCI7XG5pbXBvcnQgeyBsaXN0QXJyYXksIHByaW9yaXR5VmFsdWVzIH0gZnJvbSBcIi4vbW9kZWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlTmF2aWdhdGlvbkJhcigpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIHRoZSBuYXYgYmFyIGVsZW1lbnQgYW5kIHJldHVybnMgdGhlIEhUTUwgZWxlbWVudFxuICAgICAqL1xuXG4gICAgLy8gTGFiZWxzXG4gICAgY29uc3QgQlVUVE9OX0xBQkVMID0gXCJOZXcgdGFza1wiO1xuICAgIGNvbnN0IERFRkFVTFRfVElUTEUgPSBcIlRPLURPIHggSGFjZXIhXCI7XG5cbiAgICBjb25zdCBuYXZiYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibmF2XCIpO1xuXG4gICAgLy8gRElWIHRvIGtlZXAgdG9nZXRoZXIgdGhlIG1haW4gbG9nbyBhbmQgdGhlIGxpc3QgdGl0bGVcbiAgICBjb25zdCB0aXRsZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGl0bGVDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInRpdGxlLWNvbnRhaW5lclwiKTtcblxuICAgIGNvbnN0IG1lbnVJY29uID0gbmV3IEltYWdlKCk7XG4gICAgbWVudUljb24uc3JjID0gaWNvbk1lbnU7XG4gICAgbWVudUljb24uaWQgPSBcIm1lbnVJY29uXCI7XG4gICAgbWVudUljb24uY2xhc3NMaXN0LmFkZChcImxvZ29cIik7XG4gICAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQobWVudUljb24pO1xuXG4gICAgY29uc3QgYXBwTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICBhcHBOYW1lLmNsYXNzTGlzdC5hZGQoXCJhcHAtbmFtZVwiKTtcbiAgICBhcHBOYW1lLnRleHRDb250ZW50ID0gREVGQVVMVF9USVRMRTtcbiAgICB0aXRsZUNvbnRhaW5lci5hcHBlbmRDaGlsZChhcHBOYW1lKTtcblxuICAgIC8vIEFkZC1uZXctdGFzayBidXR0b25cbiAgICBjb25zdCBhZGRCdG4gPSBjcmVhdGVCdG5JY29uTGFiZWwoQlVUVE9OX0xBQkVMLCBpY29uUGx1cyk7XG5cbiAgICBuYXZiYXIuYXBwZW5kQ2hpbGQodGl0bGVDb250YWluZXIpO1xuICAgIG5hdmJhci5hcHBlbmRDaGlsZChhZGRCdG4pO1xuXG4gICAgcmV0dXJuIG5hdmJhcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlRm9vdGVyKCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgdGhlIGZvb3RlciBlbGVtZW50IGFuZCByZXR1cm5zIHRoZSBIVE1MIGVsZW1lbnRcbiAgICAgKi9cbiAgICBjb25zdCBHSVRIVUJfVVNFUiA9IFwibmljbzk1MDZcIjtcbiAgICBjb25zdCBHSVRIVUJfUkVQT19VUkwgPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9uaWNvOTUwNi9UT1AtdG9kb1wiO1xuXG4gICAgY29uc3QgZm9vdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvb3RlclwiKTtcblxuICAgIC8vIERJViB0byBrZWVwIHRvZ2V0aGVyIHRoZSBHaXRIdWIgbG9nbyBhbmQgdGhlIHVzZXJuYW1lXG4gICAgY29uc3QgZ2l0aHViTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgIGdpdGh1YkxpbmsuY2xhc3NMaXN0LmFkZChcImdpdGh1Yi1jb250YWN0LWluZm9cIik7XG4gICAgZ2l0aHViTGluay5ocmVmID0gR0lUSFVCX1JFUE9fVVJMO1xuXG4gICAgY29uc3QgbG9nbyA9IG5ldyBJbWFnZSgpO1xuICAgIGxvZ28uc3JjID0gZ2l0aHViSWNvbjtcbiAgICBsb2dvLmNsYXNzTGlzdC5hZGQoXCJmb290ZXItbG9nb1wiKTtcbiAgICBnaXRodWJMaW5rLmFwcGVuZENoaWxkKGxvZ28pO1xuXG4gICAgY29uc3QgZ2l0aHViVXNlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICBnaXRodWJVc2VyLmNsYXNzTGlzdC5hZGQoXCJnaXRodWItdXNlclwiKTtcbiAgICBnaXRodWJVc2VyLmlkID0gXCJnaXRodWJVc2VyXCI7XG4gICAgZ2l0aHViVXNlci50ZXh0Q29udGVudCA9IEdJVEhVQl9VU0VSO1xuICAgIGdpdGh1YkxpbmsuYXBwZW5kQ2hpbGQoZ2l0aHViVXNlcik7XG5cbiAgICBmb290ZXIuYXBwZW5kQ2hpbGQoZ2l0aHViTGluayk7XG5cbiAgICByZXR1cm4gZm9vdGVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTaWRlUGFuZWwoKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyB0aGUgc2lkZS1wYW5lbCBlbGVtZW50IGFuZCByZXR1cm5zIHRoZSBIVE1MIGVsZW1lbnRcbiAgICAgKi9cblxuICAgIC8vTmV3IGxpc3QgYnRuIGxhYmVsXG4gICAgY29uc3QgTkVXX0xJU1RfQlROX0xBQkVMID0gXCJuZXcgbGlzdFwiO1xuXG4gICAgLy9EZWZhdWx0IGdyb3VwIGZpbHRlcnNcbiAgICBjb25zdCBIT01FID0gXCJob21lXCI7XG4gICAgY29uc3QgVE9EQVkgPSBcInRvZGF5XCI7XG4gICAgY29uc3QgVVBDT01JTkcgPSBcInVwY29taW5nXCI7XG4gICAgY29uc3QgQU5ZVElNRSA9IFwiYW55dGltZVwiO1xuXG4gICAgY29uc3Qgc2lkZVBhbmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFzaWRlXCIpO1xuICAgIHNpZGVQYW5lbC5jbGFzc0xpc3QuYWRkKFwic2lkZS1wYW5lbFwiKTtcbiAgICBzaWRlUGFuZWwuaWQgPSBcInNpZGVQYW5lbFwiO1xuXG4gICAgc2lkZVBhbmVsLmFwcGVuZENoaWxkKGNyZWF0ZUJ0bkljb25MYWJlbChORVdfTElTVF9CVE5fTEFCRUwsIG5ld0xpc3RJY29uKSk7XG5cbiAgICBzaWRlUGFuZWwuYXBwZW5kQ2hpbGQoY3JlYXRlTmV3TGlzdEZvcm0oKSk7XG5cbiAgICBzaWRlUGFuZWwuYXBwZW5kQ2hpbGQoY3JlYXRlU2lkZVBhbmVsR3JvdXAoSE9NRSwgaG9tZUljb24pKTtcbiAgICBzaWRlUGFuZWwuYXBwZW5kQ2hpbGQoY3JlYXRlU2lkZVBhbmVsR3JvdXAoVE9EQVksIHRvZGF5SWNvbikpO1xuICAgIHNpZGVQYW5lbC5hcHBlbmRDaGlsZChjcmVhdGVTaWRlUGFuZWxHcm91cChVUENPTUlORywgY2FsZW5kYXJJY29uKSk7XG4gICAgc2lkZVBhbmVsLmFwcGVuZENoaWxkKGNyZWF0ZVNpZGVQYW5lbEdyb3VwKEFOWVRJTUUsIGFueXRpbWVJY29uKSk7XG5cbiAgICByZXR1cm4gc2lkZVBhbmVsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVNYWluUGFuZWwoKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyB0aGUgbWFpbiBjb250ZW50IHBhbmVsIGVsZW1lbnQgYW5kIHJldHVybnMgdGhlIEhUTUwgZWxlbWVudFxuICAgICAqL1xuXG4gICAgY29uc3QgbWFpblBhbmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm1haW5cIik7XG4gICAgbWFpblBhbmVsLmNsYXNzTGlzdC5hZGQoXCJtYWluLWNvbnRlbnRcIik7XG4gICAgbWFpblBhbmVsLmlkID0gXCJtYWluX2NvbnRlbnRcIjtcblxuICAgIGNvbnN0IHRpdGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aXRsZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwibWFpbi10aXRsZS1jb250YWluZXJcIik7XG5cbiAgICBjb25zdCBkdWVEYXRlVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gICAgZHVlRGF0ZVRpdGxlLnRleHRDb250ZW50ID0gXCJIb21lXCI7XG4gICAgZHVlRGF0ZVRpdGxlLmlkID0gXCJmaWx0ZXJfZGF0ZV90aXRsZV9tYWluX3BhbmVsXCI7XG4gICAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVlRGF0ZVRpdGxlKTtcblxuICAgIGNvbnN0IHBhcmVudExpc3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgICBwYXJlbnRMaXN0VGl0bGUudGV4dENvbnRlbnQgPSBcIkFsbCBwcm9qZWN0c1wiO1xuICAgIHBhcmVudExpc3RUaXRsZS5pZCA9IFwicGFyZW50X2xpc3RfbmFtZV9tYWluX3BhbmVsXCI7XG4gICAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQocGFyZW50TGlzdFRpdGxlKTtcblxuICAgIG1haW5QYW5lbC5hcHBlbmRDaGlsZCh0aXRsZUNvbnRhaW5lcik7XG5cbiAgICAvLyBNYWluIGNvbnRhaW5lciB0byBvcmdhbml6ZSBtdWx0aXBsZSB0YXNrIGNvbnRhaW5lcnNcbiAgICBjb25zdCB0YXNrU2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGFza1NlY3Rpb24uaWQgPSBcInRhc2tfcGFuZWxcIjtcbiAgICB0YXNrU2VjdGlvbi5jbGFzc0xpc3QuYWRkKFwidGFza3Mtc2VjdGlvblwiKTtcblxuICAgIG1haW5QYW5lbC5hcHBlbmRDaGlsZCh0YXNrU2VjdGlvbik7XG5cbiAgICByZXR1cm4gbWFpblBhbmVsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVOZXdUYXNrUG9wdXAoKSB7XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIHRoZSBIVE1MIGVsZW1lbnQgYm94IGNvbnRhaW5pbmcgdGhlIHByb3BlciBmaWVsZHNcbiAgICAgKiB0byBjcmVhdGUgVEFTS1NcbiAgICAgKi9cblxuICAgIGNvbnN0IFBPUFVQX1RJVExFID0gXCJUYXNrIHByb3BlcnRpZXNcIjtcbiAgICBjb25zdCBMQUJFTF9OQU1FID0gXCJOYW1lXCI7XG4gICAgY29uc3QgTEFCRUxfREVTQyA9IFwiRGVzY3JpcHRpb25cIjtcbiAgICBjb25zdCBMQUJFTF9EQVRFID0gXCJEZWFkbGluZVwiO1xuICAgIGNvbnN0IExBQkVMX1BSSU9SSVRZID0gXCJQcmlvcml0eVwiO1xuICAgIGNvbnN0IExBQkVMX1BBUkVOVF9MSVNUID0gXCJQcm9qZWN0XCI7XG5cbiAgICBjb25zdCBwb3B1cEZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHBvcHVwRm9ybS5pZCA9IFwibmV3X3Rhc2tfcG9wdXBcIjtcbiAgICBwb3B1cEZvcm0uY2xhc3NMaXN0LmFkZChcInBvcHVwLXRhc2tcIik7XG5cbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgZm9ybS5jbGFzc0xpc3QuYWRkKFwiZm9ybS1jb250YWluZXJcIik7XG4gICAgZm9ybS5hY3Rpb24gPSBcImphdmFzY3JpcHQ6dm9pZCgwKTtcIjtcblxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgxXCIpO1xuICAgIHRpdGxlLmNsYXNzTGlzdC5hZGQoXCJwb3B1cC10aXRsZVwiKTtcbiAgICB0aXRsZS50ZXh0Q29udGVudCA9IFBPUFVQX1RJVExFO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQodGl0bGUpO1xuXG4gICAgLy8gTmFtZVxuICAgIGNvbnN0IGxhYmVsTmV3VGFza05hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWxOZXdUYXNrTmFtZS5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJ0YXNrTmFtZVwiKTtcbiAgICBsYWJlbE5ld1Rhc2tOYW1lLnRleHRDb250ZW50ID0gTEFCRUxfTkFNRTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGxhYmVsTmV3VGFza05hbWUpO1xuXG4gICAgY29uc3QgaW5wdXROZXdUYXNrTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dE5ld1Rhc2tOYW1lLnR5cGUgPSBcInRleHRcIjtcbiAgICBpbnB1dE5ld1Rhc2tOYW1lLmlkID0gXCJuZXdfdGFza19pbnB1dF9uYW1lXCI7XG4gICAgaW5wdXROZXdUYXNrTmFtZS5wbGFjZWhvbGRlciA9IFwiTmV3IHRhc2sgbmFtZVwiO1xuICAgIGlucHV0TmV3VGFza05hbWUubmFtZSA9IFwidGFza05hbWVcIjtcbiAgICBpbnB1dE5ld1Rhc2tOYW1lLnJlcXVpcmVkO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoaW5wdXROZXdUYXNrTmFtZSk7XG5cbiAgICAvLyBEZXNjcmlwdGlvblxuICAgIGNvbnN0IGxhYmVsTmV3VGFza0Rlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWxOZXdUYXNrRGVzYy5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJ0YXNrRGVzY1wiKTtcbiAgICBsYWJlbE5ld1Rhc2tEZXNjLnRleHRDb250ZW50ID0gTEFCRUxfREVTQztcbiAgICBmb3JtLmFwcGVuZENoaWxkKGxhYmVsTmV3VGFza0Rlc2MpO1xuXG4gICAgY29uc3QgaW5wdXROZXdUYXNrRGVzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dE5ld1Rhc2tEZXNjLnR5cGUgPSBcInRleHRcIjtcbiAgICBpbnB1dE5ld1Rhc2tEZXNjLmlkID0gXCJuZXdfdGFza19pbnB1dF9kZXNjXCI7XG4gICAgaW5wdXROZXdUYXNrRGVzYy5wbGFjZWhvbGRlciA9IFwiVGFzayBkZXNjcmlwdGlvblwiO1xuICAgIGlucHV0TmV3VGFza0Rlc2MubmFtZSA9IFwidGFza0Rlc2NcIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0TmV3VGFza0Rlc2MpO1xuXG4gICAgLy8gRHVlIGRhdGVcbiAgICBjb25zdCBsYWJlbE5ld1Rhc2tEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIGxhYmVsTmV3VGFza0RhdGUuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwidGFza0RhdGVcIik7XG4gICAgbGFiZWxOZXdUYXNrRGF0ZS50ZXh0Q29udGVudCA9IExBQkVMX0RBVEU7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChsYWJlbE5ld1Rhc2tEYXRlKTtcblxuICAgIGNvbnN0IGlucHV0TmV3VGFza0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXROZXdUYXNrRGF0ZS50eXBlID0gXCJkYXRlXCI7XG4gICAgaW5wdXROZXdUYXNrRGF0ZS5pZCA9IFwibmV3X3Rhc2tfaW5wdXRfZGF0ZVwiO1xuICAgIC8vIGlucHV0TmV3VGFza0RhdGUucGxhY2Vob2xkZXIgPSBcIlRhc2sgZGVzY3JpcHRpb25cIjtcbiAgICBpbnB1dE5ld1Rhc2tEYXRlLm5hbWUgPSBcInRhc2tEYXRlXCI7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dE5ld1Rhc2tEYXRlKTtcblxuICAgIC8vIFByaW9yaXR5XG4gICAgY29uc3QgbGFiZWxOZXdUYXNrUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWxOZXdUYXNrUHJpb3JpdHkuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwibmV3X3Rhc2tfaW5wdXRfcHJpb3JpdHlcIik7XG4gICAgbGFiZWxOZXdUYXNrUHJpb3JpdHkudGV4dENvbnRlbnQgPSBMQUJFTF9QUklPUklUWTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGxhYmVsTmV3VGFza1ByaW9yaXR5KTtcblxuICAgIGNvbnN0IGlucHV0TmV3VGFza0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuICAgIGlucHV0TmV3VGFza0xpc3QuaWQgPSBcIm5ld190YXNrX2lucHV0X3ByaW9yaXR5XCI7XG4gICAgaW5wdXROZXdUYXNrTGlzdC5uYW1lID0gXCJuZXdfdGFza19pbnB1dF9wcmlvcml0eVwiO1xuXG4gICAgY29uc3QgaW5wdXRQcmlvcml0eVZhbHVlTG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBpbnB1dFByaW9yaXR5VmFsdWVMb3cudmFsdWUgPSBwcmlvcml0eVZhbHVlcy5MT1c7XG4gICAgaW5wdXRQcmlvcml0eVZhbHVlTG93LmlubmVyVGV4dCA9IFwiTG93XCI7XG4gICAgaW5wdXROZXdUYXNrTGlzdC5hcHBlbmRDaGlsZChpbnB1dFByaW9yaXR5VmFsdWVMb3cpO1xuXG4gICAgY29uc3QgaW5wdXRQcmlvcml0eVZhbHVlTWVkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBpbnB1dFByaW9yaXR5VmFsdWVNZWQudmFsdWUgPSBwcmlvcml0eVZhbHVlcy5NRURJVU07XG4gICAgaW5wdXRQcmlvcml0eVZhbHVlTWVkLmlubmVyVGV4dCA9IFwiTWVkaXVtXCI7XG4gICAgaW5wdXROZXdUYXNrTGlzdC5hcHBlbmRDaGlsZChpbnB1dFByaW9yaXR5VmFsdWVNZWQpO1xuXG4gICAgY29uc3QgaW5wdXRQcmlvcml0eVZhbHVlSGlnaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgaW5wdXRQcmlvcml0eVZhbHVlSGlnaC52YWx1ZSA9IHByaW9yaXR5VmFsdWVzLkhJR0g7XG4gICAgaW5wdXRQcmlvcml0eVZhbHVlSGlnaC5pbm5lclRleHQgPSBcIkhpZ2hcIjtcbiAgICBpbnB1dE5ld1Rhc2tMaXN0LmFwcGVuZENoaWxkKGlucHV0UHJpb3JpdHlWYWx1ZUhpZ2gpO1xuXG4gICAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dE5ld1Rhc2tMaXN0KTtcblxuICAgIC8vIFBhcmVudCBsaXN0IC8gUHJvamVjdFxuICAgIGNvbnN0IGxhYmVsTmV3VGFza1BhcmVudExpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWxOZXdUYXNrUGFyZW50TGlzdC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJuZXdfdGFza19pbnB1dF9wYXJlbnRfbGlzdFwiKTtcbiAgICBsYWJlbE5ld1Rhc2tQYXJlbnRMaXN0LnRleHRDb250ZW50ID0gTEFCRUxfUEFSRU5UX0xJU1Q7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChsYWJlbE5ld1Rhc2tQYXJlbnRMaXN0KTtcblxuICAgIGNvbnN0IGlucHV0TmV3VGFza1ByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgICBpbnB1dE5ld1Rhc2tQcmlvcml0eS5pZCA9IFwibmV3X3Rhc2tfaW5wdXRfcGFyZW50X2xpc3RcIjtcbiAgICBpbnB1dE5ld1Rhc2tQcmlvcml0eS5uYW1lID0gXCJuZXdfdGFza19pbnB1dF9wYXJlbnRfbGlzdFwiO1xuXG4gICAgbGlzdEFycmF5LmZvckVhY2goKGxpc3QpID0+IHtcbiAgICAgICAgaW5wdXROZXdUYXNrUHJpb3JpdHkuYXBwZW5kQ2hpbGQoZ2VuZXJhdGVPcHRpb25Gcm9tTGlzdChsaXN0KSk7XG4gICAgfSk7XG5cbiAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0TmV3VGFza1ByaW9yaXR5KTtcblxuICAgIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBhZGRCdG4udHlwZSA9IFwic3VibWl0XCI7XG4gICAgYWRkQnRuLmlkID0gXCJhZGRfdGFza19idG5fZm9ybVwiO1xuICAgIGFkZEJ0bi5jbGFzc0xpc3QuYWRkKFwiYnRuLWZvcm1cIik7XG4gICAgYWRkQnRuLnZhbHVlID0gXCJBY2NlcHRcIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGFkZEJ0bik7XG5cbiAgICBjb25zdCBjYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGNhbmNlbEJ0bi50eXBlID0gXCJidXR0b25cIjtcbiAgICBjYW5jZWxCdG4uaWQgPSBcImNhbmNlbF9idG5fdGFza19mb3JtXCI7XG4gICAgY2FuY2VsQnRuLmNsYXNzTGlzdC5hZGQoXCJidG4tZm9ybVwiLCBcImNhbmNlbFwiKTtcbiAgICBjYW5jZWxCdG4udGV4dENvbnRlbnQgPSBcIkNhbmNlbFwiO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoY2FuY2VsQnRuKTtcblxuICAgIHBvcHVwRm9ybS5hcHBlbmRDaGlsZChmb3JtKTtcblxuICAgIHJldHVybiBwb3B1cEZvcm07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaWRlUGFuZWxHcm91cChncm91cE5hbWUsIGljb25fcGF0aCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgdGhlIEhUTUwgZWxlbWVudCB0byB1c2UgcGxhY2UgaW4gdGhlIHNpZGUgcGFuZWwgbWVudVxuICAgICAqL1xuXG4gICAgY29uc3QgZ3JvdXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGdyb3VwLmlkID0gXCJzcF9nX1wiICsgZ3JvdXBOYW1lO1xuICAgIGdyb3VwLmNsYXNzTGlzdC5hZGQoXCJzcC1ncm91cFwiKTtcblxuICAgIGNvbnN0IGljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICBpY29uLnNyYyA9IGljb25fcGF0aDtcbiAgICBpY29uLmNsYXNzTGlzdC5hZGQoXCJzcC1nLWljb25cIik7XG4gICAgZ3JvdXAuYXBwZW5kQ2hpbGQoaWNvbik7XG5cbiAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgICBsYWJlbC5jbGFzc0xpc3QuYWRkKFwic3AtZy1sYWJlbFwiKTtcbiAgICBsYWJlbC50ZXh0Q29udGVudCA9IGdyb3VwTmFtZTtcbiAgICBncm91cC5hcHBlbmRDaGlsZChsYWJlbCk7XG5cbiAgICByZXR1cm4gZ3JvdXA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaWRlUGFuZWxMaXN0KGxpc3RPYmplY3QpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCByZXR1cm5zIHRoZSBIVE1MIGVsZW1lbnQgdG8gcGxhY2UgaW4gdGhlIHNpZGUgcGFuZWwgbWVudVxuICAgICAqL1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJsaXN0LWJveFwiKTtcblxuICAgIGNvbnN0IGdyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBncm91cC5pZCA9IFwic3BfZ19cIiArIGxpc3RPYmplY3QuaWQ7XG4gICAgZ3JvdXAuY2xhc3NMaXN0LmFkZChcInNwLWdyb3VwXCIpO1xuICAgIGdyb3VwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0YXNrc0J5UHJvamVjdCk7XG5cbiAgICBjb25zdCBpY29uID0gbmV3IEltYWdlKCk7XG4gICAgaWNvbi5zcmMgPSBhbnl0aW1lSWNvbjtcbiAgICBpY29uLmNsYXNzTGlzdC5hZGQoXCJzcC1nLWljb25cIik7XG4gICAgZ3JvdXAuYXBwZW5kQ2hpbGQoaWNvbik7XG5cbiAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgICBsYWJlbC5jbGFzc0xpc3QuYWRkKFwic3AtZy1sYWJlbFwiKTtcbiAgICBsYWJlbC50ZXh0Q29udGVudCA9IGxpc3RPYmplY3QubmFtZTtcbiAgICBncm91cC5hcHBlbmRDaGlsZChsYWJlbCk7XG5cbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZ3JvdXApO1xuXG4gICAgY29uc3QgZWRpdExpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGVkaXRMaXN0LmNsYXNzTGlzdC5hZGQoXCJidG4tZWRpdC1saXN0XCIpO1xuICAgIGNvbnN0IGVkaXRJY29uID0gbmV3IEltYWdlKCk7XG4gICAgZWRpdEljb24uc3JjID0gcGVuY2lsSWNvbjtcbiAgICBlZGl0SWNvbi5jbGFzc0xpc3QuYWRkKFwibGlzdC1jb250cm9sc1wiKTtcbiAgICBlZGl0SWNvbi5zZXRBdHRyaWJ1dGUoXCJlZGl0SURcIiwgbGlzdE9iamVjdC5pZCk7XG4gICAgZWRpdEljb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlYXJjaExpc3RBbmRUb2dnbGVQb3B1cCk7XG4gICAgZWRpdExpc3QuYXBwZW5kQ2hpbGQoZWRpdEljb24pO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChlZGl0TGlzdCk7XG5cbiAgICBjb25zdCBkZWxldGVMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBkZWxldGVMaXN0LmNsYXNzTGlzdC5hZGQoXCJidG4tZGVsZXRlLWxpc3RcIik7XG4gICAgY29uc3QgZGVsZXRlSWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGRlbGV0ZUljb24uc3JjID0gdHJhc2hJY29uO1xuICAgIGRlbGV0ZUljb24uY2xhc3NMaXN0LmFkZChcImxpc3QtY29udHJvbHNcIik7XG4gICAgZGVsZXRlSWNvbi5pZCA9IGxpc3RPYmplY3QuaWQ7XG4gICAgZGVsZXRlSWNvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgc2VhcmNoQW5kRGVsZXRlTGlzdCk7XG4gICAgZGVsZXRlTGlzdC5hcHBlbmRDaGlsZChkZWxldGVJY29uKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZGVsZXRlTGlzdCk7XG5cbiAgICByZXR1cm4gY29udGFpbmVyO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVCdG5JY29uTGFiZWwobGFiZWwsIGljb25fcGF0aCkge1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBjcmVhdGVkIGJ1dHRvbiBlbGVtZW50IGNvbnRhaW5pbmcgYW4gSWNvbiBhbmQgYSB0ZXh0IGxhYmVsXG4gICAgICovXG5cbiAgICAvLyBBZGQgdGFzayBidXR0b24gY29udGFpbnMgYW4gSWNvbiBhbmQgYSBsYWJlbFxuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgYnRuLmNsYXNzTGlzdC5hZGQoXCJidG4taWNvbi1sYWJlbFwiKTtcbiAgICBidG4uaWQgPSBcImJ0bi1cIiArIGxhYmVsLnRvTG93ZXJDYXNlKCkucmVwbGFjZShcIiBcIiwgXCJfXCIpO1xuICAgIGJ0bi50ZXh0Q29udGVudCA9IGxhYmVsO1xuXG4gICAgY29uc3QgaWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGljb24uc3JjID0gaWNvbl9wYXRoO1xuICAgIGJ0bi5hcHBlbmRDaGlsZChpY29uKTtcblxuICAgIHJldHVybiBidG47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU5ld0xpc3RGb3JtKCkge1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyB0aGUgZmllbGRzIHRvIGNyZWF0ZSBhIG5ldyBsaXN0LlxuICAgICAqIFJldHVybiB0aGUgY29udGFpbmVyIHdpdGggaXRzIGVsZW1lbnRzLlxuICAgICAqL1xuXG4gICAgY29uc3QgUE9QVVBfVElUTEUgPSBcIkxpc3QgcHJvcGVydGllc1wiO1xuXG4gICAgY29uc3QgcG9wdXBGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBwb3B1cEZvcm0uaWQgPSBcIm5ld19saXN0X2lucHV0X2Zvcm1cIjtcbiAgICBwb3B1cEZvcm0uY2xhc3NMaXN0LmFkZChcInBvcHVwXCIpO1xuXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuICAgIGZvcm0uY2xhc3NMaXN0LmFkZChcImZvcm0tY29udGFpbmVyXCIpO1xuXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gICAgdGl0bGUuY2xhc3NMaXN0LmFkZChcInBvcHVwLXRpdGxlXCIpO1xuICAgIHRpdGxlLnRleHRDb250ZW50ID0gUE9QVVBfVElUTEU7XG4gICAgZm9ybS5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cbiAgICAvLyBjb25zdCBsYWJlbE5ld0xpc3ROYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAvLyBsYWJlbE5ld0xpc3ROYW1lLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImxpc3ROYW1lXCIpO1xuICAgIC8vIGxhYmVsTmV3TGlzdE5hbWUudGV4dENvbnRlbnQgPSBcIkxpc3QgbmFtZVwiXG4gICAgLy8gZm9ybS5hcHBlbmRDaGlsZChsYWJlbE5ld0xpc3ROYW1lKTtcblxuICAgIGNvbnN0IGlucHV0TmV3TGlzdE5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXROZXdMaXN0TmFtZS50eXBlID0gXCJ0ZXh0XCI7XG4gICAgaW5wdXROZXdMaXN0TmFtZS5pZCA9IFwibmV3X2xpc3RfaW5wdXRfZmllbGRfdGV4dFwiO1xuICAgIGlucHV0TmV3TGlzdE5hbWUucGxhY2Vob2xkZXIgPSBcIkxpc3QgbmFtZVwiO1xuICAgIGlucHV0TmV3TGlzdE5hbWUubmFtZSA9IFwibGlzdE5hbWVcIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0TmV3TGlzdE5hbWUpO1xuXG4gICAgY29uc3QgYWRkQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBhZGRCdG4udHlwZSA9IFwiYnV0dG9uXCI7XG4gICAgYWRkQnRuLmlkID0gXCJhZGRfbGlzdF9idG5fZm9ybVwiO1xuICAgIGFkZEJ0bi5jbGFzc0xpc3QuYWRkKFwiYnRuLWZvcm1cIik7XG4gICAgYWRkQnRuLnRleHRDb250ZW50ID0gXCJBY2NlcHRcIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGFkZEJ0bik7XG5cbiAgICBjb25zdCBjYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGNhbmNlbEJ0bi50eXBlID0gXCJidXR0b25cIjtcbiAgICBjYW5jZWxCdG4uaWQgPSBcImNhbmNlbF9idG5fZm9ybVwiO1xuICAgIGNhbmNlbEJ0bi5jbGFzc0xpc3QuYWRkKFwiYnRuLWZvcm1cIik7XG4gICAgY2FuY2VsQnRuLmNsYXNzTGlzdC5hZGQoXCJjYW5jZWxcIik7XG4gICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGNhbmNlbEJ0bik7XG5cbiAgICBwb3B1cEZvcm0uYXBwZW5kQ2hpbGQoZm9ybSk7XG5cbiAgICByZXR1cm4gcG9wdXBGb3JtO1xufVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICogYXMgQXBwSW50ZXJmYWNlIGZyb20gXCIuL2hvbWUuanNcIjtcbmltcG9ydCAqIGFzIEFwcEZ1bmN0aW9uYWxpdGllcyBmcm9tIFwiLi9mdW5jdGlvbmFsaXRpZXMuanNcIjtcbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbihmdW5jdGlvbiBnZW5lcmF0ZVdlYlBhZ2UoKSB7XG4gICAgLyoqXG4gICAgICogTG9hZCB0aGUgY29tcG9uZW50cyB0byBjcmVhdGUgYW5kIHByaW50IHRoZSBIVE1MIGVsZW1lbnRzXG4gICAgICovXG5cbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQuYm9keTtcblxuICAgIGJvZHkuYXBwZW5kQ2hpbGQoQXBwSW50ZXJmYWNlLmdlbmVyYXRlTmF2aWdhdGlvbkJhcigpKTtcblxuICAgIGJvZHkuYXBwZW5kQ2hpbGQoQXBwSW50ZXJmYWNlLmdlbmVyYXRlU2lkZVBhbmVsKCkpO1xuXG4gICAgQXBwRnVuY3Rpb25hbGl0aWVzLnJlZnJlc2hMaXN0VmlldygpO1xuXG4gICAgYm9keS5hcHBlbmRDaGlsZChBcHBJbnRlcmZhY2UuZ2VuZXJhdGVNYWluUGFuZWwoKSk7XG5cbiAgICBib2R5LmFwcGVuZENoaWxkKEFwcEludGVyZmFjZS5nZW5lcmF0ZUZvb3RlcigpKTtcblxuICAgIGJvZHkuYXBwZW5kQ2hpbGQoQXBwSW50ZXJmYWNlLmdlbmVyYXRlTmV3VGFza1BvcHVwKCkpO1xuXG4gICAgQXBwRnVuY3Rpb25hbGl0aWVzLnJlZnJlc2hUYXNrc1ZpZXcoKTtcbn0pKCk7XG5cbihmdW5jdGlvbiBhZGRFdkxpc3RlbmVycygpIHtcbiAgICBBcHBGdW5jdGlvbmFsaXRpZXMuYWRkRXZMaXN0ZW5lcnMoKTtcbn0pKCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsIlRhc2siLCJjb25zdHJ1Y3RvciIsInRhc2tOYW1lIiwidGFza0Rlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsIk5PX0RBVEUiLCJwYXJlbnRMaXN0IiwicHJpb3JpdHkiLCJwcmlvcml0eVZhbHVlcyIsIk1FRElVTSIsInVuaXF1ZUlEIiwibmFtZSIsIm5ld05hbWUiLCJkZXNjIiwibmV3RGVzYyIsIm5ld0RhdGUiLCJuZXdQcmlvcml0eSIsIlRhc2tMaXN0IiwibGlzdE5hbWUiLCJmcmVlemUiLCJMT1ciLCJISUdIIiwidGFza3NEYXRlRmlsdGVyIiwidGFza3NQcm9qZWN0RmlsdGVyIiwidGFza3NBcnJheSIsImxpc3RBcnJheSIsInRvRGF0ZSIsImFyZ3VtZW50IiwiYXJnU3RyIiwiRGF0ZSIsIk5hTiIsInN0YXJ0T2ZEYXkiLCJkYXRlIiwiX2RhdGUiLCJzZXRIb3VycyIsImlzVG9kYXkiLCJkYXRlTGVmdCIsImRhdGVSaWdodCIsIm5vdyIsIk1hdGgiLCJwb3ciLCJtaWxsaXNlY29uZHNJbkRheSIsImdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMiLCJ1dGNEYXRlIiwiVVRDIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0TWlsbGlzZWNvbmRzIiwic2V0VVRDRnVsbFllYXIiLCJkaWZmZXJlbmNlSW5EYXlzIiwiX2RhdGVMZWZ0IiwiX2RhdGVSaWdodCIsInNpZ24iLCJjb21wYXJlTG9jYWxBc2MiLCJkaWZmZXJlbmNlIiwiYWJzIiwic3RhcnRPZkRheUxlZnQiLCJzdGFydE9mRGF5UmlnaHQiLCJ0aW1lc3RhbXBMZWZ0IiwidGltZXN0YW1wUmlnaHQiLCJyb3VuZCIsImRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyIsInNldERhdGUiLCJOdW1iZXIiLCJkaWZmIiwic3RhcnRPZlRvZGF5IiwibGFzdElEIiwibGFzdExpc3RJRCIsInRhc2tzQnlQcm9qZWN0IiwibGlzdElEIiwic2xpY2UiLCJwcm9qZWN0VGl0bGUiLCJnZXRFbGVtZW50QnlJZCIsInRleHRDb250ZW50IiwiZm9yRWFjaCIsImNvbnNvbGUiLCJsb2ciLCJyZWZyZXNoTGlzdFZpZXciLCJjbGFzc0xpc3QiLCJhZGQiLCJyZWZyZXNoVGFza3NWaWV3IiwicmVtb3ZlQ1NTQ2xhc3NGaWx0ZXJTZWxlY3RlZCIsInRvZ2dsZU5ld1Rhc2tQb3B1cCIsInRvZ2dsZSIsInZhbHVlIiwidG9nZ2xlTmV3TGlzdEZvcm0iLCJmbG9vciIsInJhbmRvbSIsInRhc2tQYW5lbCIsImZpbHRlcmVkVGFza3NBcnJheSIsImFycmF5VG9QcmludCIsImlubmVySFRNTCIsImZpbHRlciIsInRhc2siLCJnZW5lcmF0ZU5ld1Rhc2tFbGVtZW50IiwiY3JlYXRlQW5kRWRpdFRhc2tPYmplY3RGcm9tUG9wdXBGb3JtIiwidGFza05hbWVGb3JtIiwidGFza0Rlc2NGb3JtIiwidGFza0RhdGVGb3JtIiwidGFza1ByaW9yaXR5Rm9ybSIsInRhc2tQcm9qZWN0Rm9ybSIsInBhcmVudExpc3RJRCIsImRlc2NyaXB0aW9uIiwibmV3VGFzayIsImFkZE5ld1Rhc2siLCJ0YXNrT2JqZWN0IiwidGFza0NvbnRhaW5lciIsInBhcnNlSW50IiwidGFza0RhdGVBbmRMaXN0Q29udGFpbmVyIiwidGFza0RhdGUiLCJ0YXNrUGFyZW50TGlzdCIsInRhc2tEZXNjIiwiZWRpdFRhc2siLCJlZGl0SWNvbiIsIkltYWdlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlYXJjaFRhc2tBbmRUb2dnbGVQb3B1cCIsImRlbGV0ZVRhc2siLCJkZWxldGVJY29uIiwic2VhcmNoQW5kRGVsZXRlVGFzayIsImdldEF0dHJpYnV0ZSIsInBhcmVudExpc3ROYW1lIiwiZXJyb3IiLCJzaWRlUGFuZWxMaXN0cyIsImxpc3RPYmplY3QiLCJjb250YWluZXIiLCJncm91cCIsImljb24iLCJsYWJlbCIsImVkaXRMaXN0Iiwic2VhcmNoTGlzdEFuZFRvZ2dsZVBvcHVwIiwiZGVsZXRlTGlzdCIsInNlYXJjaEFuZERlbGV0ZUxpc3QiLCJjcmVhdGVTaWRlUGFuZWxMaXN0IiwiYm9keSIsImdlbmVyYXRlTmV3VGFza1BvcHVwIiwibGlzdE5hbWVGb3JtIiwicG9wdXBGb3JtIiwiZm9ybSIsImFjdGlvbiIsInRpdGxlIiwibGFiZWxOZXdUYXNrTmFtZSIsImlucHV0TmV3VGFza05hbWUiLCJ0eXBlIiwicGxhY2Vob2xkZXIiLCJyZXF1aXJlZCIsImxhYmVsTmV3VGFza0Rlc2MiLCJpbnB1dE5ld1Rhc2tEZXNjIiwibGFiZWxOZXdUYXNrRGF0ZSIsImlucHV0TmV3VGFza0RhdGUiLCJsYWJlbE5ld1Rhc2tQcmlvcml0eSIsImlucHV0TmV3VGFza0xpc3QiLCJpbnB1dFByaW9yaXR5VmFsdWVMb3ciLCJpbm5lclRleHQiLCJpbnB1dFByaW9yaXR5VmFsdWVNZWQiLCJpbnB1dFByaW9yaXR5VmFsdWVIaWdoIiwibGFiZWxOZXdUYXNrUGFyZW50TGlzdCIsImlucHV0TmV3VGFza1ByaW9yaXR5Iiwib3B0aW9uIiwiZ2VuZXJhdGVPcHRpb25Gcm9tTGlzdCIsImFkZEJ0biIsImNhbmNlbEJ0biIsImNyZWF0ZVNpZGVQYW5lbEdyb3VwIiwiZ3JvdXBOYW1lIiwiaWNvbl9wYXRoIiwiY3JlYXRlQnRuSWNvbkxhYmVsIiwiYnRuIiwidG9Mb3dlckNhc2UiLCJsb2NhbHMiLCJuYXZiYXIiLCJ0aXRsZUNvbnRhaW5lciIsIm1lbnVJY29uIiwiYXBwTmFtZSIsInNpZGVQYW5lbCIsImlucHV0TmV3TGlzdE5hbWUiLCJjcmVhdGVOZXdMaXN0Rm9ybSIsIm1haW5QYW5lbCIsImR1ZURhdGVUaXRsZSIsInBhcmVudExpc3RUaXRsZSIsInRhc2tTZWN0aW9uIiwiZm9vdGVyIiwiZ2l0aHViTGluayIsImhyZWYiLCJsb2dvIiwiZ2l0aHViVXNlciIsIm5ld0xpc3ROYW1lIiwiYWxlcnQiXSwic291cmNlUm9vdCI6IiJ9
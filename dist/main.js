(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(537),r=t.n(a),i=t(645),o=t.n(i)()(r());o.push([n.id,':root {\n    /* Color theme */\n    --ct-darker: #2d2d2d;\n    --ct-dark: #3d3d3d;\n    --ct-grey: #535353;\n    --ct-numix: #d64937;\n    --ct-blue: #379cd6;\n    --ct-green: #5cd637;\n    --ct-light: #dcdcdc;\n    --ct-white: #ffffff;\n    /* Color theme (filter) for SVG images */\n    --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n        brightness(102%) contrast(84%);\n    --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n        brightness(101%) contrast(74%);\n    --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n        brightness(95%) contrast(89%);\n    --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n        brightness(92%) contrast(80%);\n    --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n        brightness(123%) contrast(73%);\n    --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n        brightness(105%) contrast(102%);\n\n    /* Elements height */\n    --navbar-h: 3.8rem;\n    --side-panel-length: 15rem;\n    --content-h: calc(\n        100vh - var(--navbar-h) - var(--footer-h) - var(--side-panel-length)\n    );\n    --footer-h: 3rem;\n\n    /* Font size */\n    --logo-fs: 1.3rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.8rem;\n    --subheader-fs: 1.4rem;\n    --subheader-sm-fs: 1.3rem;\n    --content-fs: 0.9rem;\n\n    --taskRow-h: 4rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n        "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n    color: var(--ct-darker);\n}\n\nbody {\n    background-color: var(--ct-grey);\n    display: grid;\n    grid-template:\n        var(--navbar-h) var(--side-panel-length) var(--content-h) var(\n            --footer-h\n        )\n        / 1fr;\n    grid-template-areas:\n        "navbar"\n        "side-panel"\n        "main-content"\n        "footer";\n}\n\n.hidden {\n    grid-template-areas:\n        "navbar"\n        "main-content"\n        "main-content"\n        "footer";\n}\n\n/* --------------------- Nav bar -------------------- */\nnav {\n    grid-area: navbar;\n    background-color: var(--ct-darker);\n    font-size: var(--navbar-fs);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n}\n\n.title-container {\n    width: fit-content;\n    height: 90%;\n    display: flex;\n    align-items: center;\n}\n\n.logo {\n    width: var(--logo-fs);\n    margin-right: 1rem;\n    filter: var(--filter-light);\n}\n\n.logo:hover {\n    cursor: pointer;\n    filter: var(--filter-numix);\n}\n\n.app-name {\n    display: none;\n    color: var(--ct-light);\n    font-family: cursive, sans-serif;\n    font-style: italic;\n    font-size: var(--header-fs);\n    padding-top: 10px;\n}\n\n.btn-icon-label {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    gap: 0rem;\n    padding: 0.5rem;\n    font-size: 0; /*0px to hide the label*/\n    border-radius: 30px;\n    border: 0 none;\n    background-color: var(--ct-light);\n    text-transform: capitalize;\n}\n\n.btn-icon-label > img {\n    width: var(--header-fs);\n    filter: var(--filter-darker);\n}\n\n.btn-icon-label:hover {\n    cursor: pointer;\n    background-color: var(--ct-numix);\n}\n\n#sp_g_home {\n    margin-top: 2rem;\n}\n\n#sp_g_anytime {\n    margin-bottom: 2rem;\n}\n\n/* --------------------- Side panel -------------------- */\n.side-panel {\n    grid-area: side-panel;\n    background-color: var(--ct-grey);\n    padding: 1rem;\n    overflow: auto;\n    animation: slideDown 0.5s;\n}\n\n.side-panel-hidden {\n    display: none;\n}\n\n.side-panel > h1 {\n    color: var(--ct-light);\n}\n\n.sp-group {\n    height: var(--header-fs);\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5rem;\n    padding-left: 0.5rem;\n}\n\n.sp-group:hover {\n    cursor: pointer;\n    background-color: var(--ct-dark);\n    border: 0px solid var(--ct-dark);\n    border-radius: 10px;\n}\n\n.sp-group-selected {\n    background-color: var(--ct-darker);\n    border: 0px solid var(--ct-darker);\n    border-radius: 10px;\n}\n\n.sp-group > .sp-g-icon {\n    width: var(--subheader-fs);\n    filter: var(--filter-light);\n}\n\n.sp-group > .sp-g-label {\n    text-transform: capitalize;\n    color: var(--ct-light);\n}\n\n.popup {\n    margin-top: 1rem;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-unhidden {\n    display: block !important;\n    animation: scaleX 0.5s;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    font-size: var(--navbar-fs);\n    width: 100%;\n    text-align: center;\n}\n\n.form-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.form-container > input, .form-container > select {\n    width: 100%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form {\n    width: 47%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form:hover {\n    cursor: pointer;\n    background-color: var(--ct-green);\n    border: 2px solid var(--ct-green);\n    border-radius: 5px;\n}\n.form-container > .cancel:hover {\n    background-color: var(--ct-numix);\n    border: 2px solid var(--ct-numix);\n}\n\n.list-box {\n    display: grid;\n    grid-template: 1fr / 1fr var(--subheader-sm-fs) var(--subheader-sm-fs);\n}\n\n.btn-edit-list, .btn-delete-list {\n    background-color: var(--ct-light);\n    filter: var(--filter-light);\n    border: 0 none;\n    border-radius: 50%;\n    width: var(--subheader-sm-fs);\n    height: var(--subheader-sm-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-list {\n    margin-right: 3px;\n}\n\n.btn-edit-list:hover, .btn-delete-list:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-list:hover {\n    background-color: var(--ct-blue);\n    filter: unset;\n}\n\n.btn-delete-list:hover {\n    background-color: var(--ct-numix);\n    filter: unset;\n}\n\n/* --------------------- main panel -------------------- */\n.main-content {\n    grid-area: main-content;\n    background-color: var(--ct-light);\n    padding: 1rem;\n    display: grid;\n    grid-template: 4rem 1fr / 1fr;\n    grid-template-areas:\n        "parent-list-name"\n        "tasks-grid";\n}\n\n.main-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n}\n\n.popup-task {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    height: fit-content;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    grid-area: parent-list-name;\n}\n\n.popup-task > .form-container > label {\n    color: var(--ct-light);\n    width: 100%;\n    text-align: left;\n    margin-top: 0.5rem;\n}\n\n.popup-task > .form-container > input:nth-last-child(3) {\n    margin-bottom: 1rem;\n}\n\n.tasks-section {\n    grid-area: tasks-grid;\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 1rem; */\n    overflow-y: auto;\n}\n\n.task-container {\n    margin-bottom: 1rem;\n    width: 100%;\n    border: 1px solid var(--ct-grey);\n    border-radius: 10px;\n    padding: 0.5rem 1rem;\n    display: grid;\n    grid-template: var(--taskRow-h) var(--taskRow-h) calc(var(--taskRow-h) * 2) / 4fr 1fr 1fr;\n    grid-template-areas:\n        "taskName taskEdit taskDelete"\n        "taskDateAndParent taskDateAndParent taskDateAndParent"\n        "taskDesc taskDesc taskDesc";\n}\n\n.task-name {\n    grid-area: taskName;\n    overflow: auto;\n    font-size: var(--subheader-fs);\n}\n\n.task-desc {\n    grid-area: taskDesc;\n    overflow: auto;\n}\n\n.task-date-list-info {\n    grid-area: taskDateAndParent;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1rem;\n}\n\n.btn-edit-task, .btn-delete-task {\n    background-color: var(--ct-light);\n    /* filter: var(--filter-darker); */\n    border: 0 none;\n    width: var(--header-fs);\n    height: var(--header-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-task:hover, .btn-delete-task:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-task:hover {\n    background-color: var(--ct-blue);\n}\n\n.btn-delete-task:hover {\n    background-color: var(--ct-numix);\n}\n\n.btn-edit-task {\n    grid-area: taskEdit;\n}\n\n.btn-delete-task {\n    grid-area: taskDelete;\n}\n\n.task-controls {\n    width: var(--subheader-fs)\n}\n\n.task-priority-low {\n    border-color: var(--ct-white);\n    box-shadow: inset 0 0 10px 0 var(--ct-white);\n}\n\n.task-priority-medium {\n    border-color: var(--ct-blue);\n    box-shadow: inset 0 0 10px 0 var(--ct-blue);\n}\n\n.task-priority-high {\n    border-color: var(--ct-numix);\n    box-shadow: inset 0 0 10px 0 var(--ct-numix);\n}\n/* --------------------- Footer -------------------- */\nfooter {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--ct-darker);\n}\n\nfooter > .github-contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: 0.5rem;\n    text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n    width: var(--logo-fs);\n    filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n    font-size: var(--logo-fs);\n    color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n    color: var(--ct-numix);\n}\n\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --logo-fs: 1.4rem;\n        --navbar-fs: 1rem;\n        --header-fs: 1.9rem;\n        --subheader-fs: 1.5rem;\n        --subheader-sm-fs: 1.4rem;\n        --content-fs: 1rem;\n    }\n\n    .app-name {\n        display: block;\n    }\n\n    .btn-icon-label {\n        font-size: var(--navbar-fs);\n        gap: 0.5rem;\n        padding: 0.5rem 1rem 0.5rem 0.5rem;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --logo-fs: 1.5rem;\n        --navbar-fs: 1.1rem;\n        --header-fs: 2rem;\n        --subheader-fs: 1.6rem;\n        --subheader-sm-fs: 1.5rem;\n        --content-fs: 1rem;\n\n        /* Elements height */\n        --side-panel-length: min(14rem, 40%);\n        --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n    }\n\n    body {\n        grid-template:\n            var(--navbar-h) var(--content-h) var(--footer-h) / var(\n                --side-panel-length\n            )\n            1fr;\n        grid-template-areas:\n            "navbar navbar"\n            "side-panel main-content"\n            "footer footer";\n    }\n\n    .hidden {\n        grid-template-areas:\n            "navbar navbar"\n            "main-content main-content"\n            "footer footer";\n    }\n\n    .side-panel {\n        animation: slideRight 0.5s;\n    }\n\n    .task-container {\n        grid-template: var(--taskRow-h) var(--taskRow-h) / 2fr 3fr 1fr;\n        grid-template-areas:\n            "taskName taskDesc taskEdit"\n            "taskDateAndParent taskDesc taskDelete";\n    }\n\n    .task-desc {\n        padding-left: 1rem;\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    0% {\n        transform: translate(0, -100%);\n    }\n    100% {\n        transform: translate(0, 0);\n    }\n}\n\n@keyframes slideRight {\n    0% {\n        transform: translate(-100%);\n    }\n    100% {\n        transform: translate(0);\n    }\n}\n\n@keyframes scaleX {\n    0% {\n        transform: scaleX(0);\n    }\n    100% {\n        transform: scaleX(100%);\n    }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n    /* Color theme */\n    --ct-darker: #2d2d2d;\n    --ct-dark: #3d3d3d;\n    --ct-grey: #535353;\n    --ct-numix: #d64937;\n    --ct-blue: #379cd6;\n    --ct-green: #5cd637;\n    --ct-light: #dcdcdc;\n    --ct-white: #ffffff;\n    /* Color theme (filter) for SVG images */\n    --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n        brightness(102%) contrast(84%);\n    --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n        brightness(101%) contrast(74%);\n    --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n        brightness(95%) contrast(89%);\n    --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n        brightness(92%) contrast(80%);\n    --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n        brightness(123%) contrast(73%);\n    --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n        brightness(105%) contrast(102%);\n\n    /* Elements height */\n    --navbar-h: 3.8rem;\n    --side-panel-length: 15rem;\n    --content-h: calc(\n        100vh - var(--navbar-h) - var(--footer-h) - var(--side-panel-length)\n    );\n    --footer-h: 3rem;\n\n    /* Font size */\n    --logo-fs: 1.3rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.8rem;\n    --subheader-fs: 1.4rem;\n    --subheader-sm-fs: 1.3rem;\n    --content-fs: 0.9rem;\n\n    --taskRow-h: 4rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n        "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n    color: var(--ct-darker);\n}\n\nbody {\n    background-color: var(--ct-grey);\n    display: grid;\n    grid-template:\n        var(--navbar-h) var(--side-panel-length) var(--content-h) var(\n            --footer-h\n        )\n        / 1fr;\n    grid-template-areas:\n        "navbar"\n        "side-panel"\n        "main-content"\n        "footer";\n}\n\n.hidden {\n    grid-template-areas:\n        "navbar"\n        "main-content"\n        "main-content"\n        "footer";\n}\n\n/* --------------------- Nav bar -------------------- */\nnav {\n    grid-area: navbar;\n    background-color: var(--ct-darker);\n    font-size: var(--navbar-fs);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n}\n\n.title-container {\n    width: fit-content;\n    height: 90%;\n    display: flex;\n    align-items: center;\n}\n\n.logo {\n    width: var(--logo-fs);\n    margin-right: 1rem;\n    filter: var(--filter-light);\n}\n\n.logo:hover {\n    cursor: pointer;\n    filter: var(--filter-numix);\n}\n\n.app-name {\n    display: none;\n    color: var(--ct-light);\n    font-family: cursive, sans-serif;\n    font-style: italic;\n    font-size: var(--header-fs);\n    padding-top: 10px;\n}\n\n.btn-icon-label {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    gap: 0rem;\n    padding: 0.5rem;\n    font-size: 0; /*0px to hide the label*/\n    border-radius: 30px;\n    border: 0 none;\n    background-color: var(--ct-light);\n    text-transform: capitalize;\n}\n\n.btn-icon-label > img {\n    width: var(--header-fs);\n    filter: var(--filter-darker);\n}\n\n.btn-icon-label:hover {\n    cursor: pointer;\n    background-color: var(--ct-numix);\n}\n\n#sp_g_home {\n    margin-top: 2rem;\n}\n\n#sp_g_anytime {\n    margin-bottom: 2rem;\n}\n\n/* --------------------- Side panel -------------------- */\n.side-panel {\n    grid-area: side-panel;\n    background-color: var(--ct-grey);\n    padding: 1rem;\n    overflow: auto;\n    animation: slideDown 0.5s;\n}\n\n.side-panel-hidden {\n    display: none;\n}\n\n.side-panel > h1 {\n    color: var(--ct-light);\n}\n\n.sp-group {\n    height: var(--header-fs);\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5rem;\n    padding-left: 0.5rem;\n}\n\n.sp-group:hover {\n    cursor: pointer;\n    background-color: var(--ct-dark);\n    border: 0px solid var(--ct-dark);\n    border-radius: 10px;\n}\n\n.sp-group-selected {\n    background-color: var(--ct-darker);\n    border: 0px solid var(--ct-darker);\n    border-radius: 10px;\n}\n\n.sp-group > .sp-g-icon {\n    width: var(--subheader-fs);\n    filter: var(--filter-light);\n}\n\n.sp-group > .sp-g-label {\n    text-transform: capitalize;\n    color: var(--ct-light);\n}\n\n.popup {\n    margin-top: 1rem;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-unhidden {\n    display: block !important;\n    animation: scaleX 0.5s;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    font-size: var(--navbar-fs);\n    width: 100%;\n    text-align: center;\n}\n\n.form-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.form-container > input, .form-container > select {\n    width: 100%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form {\n    width: 47%;\n    font-size: var(--content-fs);\n}\n\n.form-container > .btn-form:hover {\n    cursor: pointer;\n    background-color: var(--ct-green);\n    border: 2px solid var(--ct-green);\n    border-radius: 5px;\n}\n.form-container > .cancel:hover {\n    background-color: var(--ct-numix);\n    border: 2px solid var(--ct-numix);\n}\n\n.list-box {\n    display: grid;\n    grid-template: 1fr / 1fr var(--subheader-sm-fs) var(--subheader-sm-fs);\n}\n\n.btn-edit-list, .btn-delete-list {\n    background-color: var(--ct-light);\n    filter: var(--filter-light);\n    border: 0 none;\n    border-radius: 50%;\n    width: var(--subheader-sm-fs);\n    height: var(--subheader-sm-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-list {\n    margin-right: 3px;\n}\n\n.btn-edit-list:hover, .btn-delete-list:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-list:hover {\n    background-color: var(--ct-blue);\n    filter: unset;\n}\n\n.btn-delete-list:hover {\n    background-color: var(--ct-numix);\n    filter: unset;\n}\n\n/* --------------------- main panel -------------------- */\n.main-content {\n    grid-area: main-content;\n    background-color: var(--ct-light);\n    padding: 1rem;\n    display: grid;\n    grid-template: 4rem 1fr / 1fr;\n    grid-template-areas:\n        "parent-list-name"\n        "tasks-grid";\n}\n\n.main-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 1rem;\n}\n\n.popup-task {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    height: fit-content;\n    padding: 0.5rem;\n    background-color: var(--ct-darker);\n    border-radius: 10px;\n    width: min(100%, 18rem);\n    display: none;\n}\n\n.popup-title {\n    color: var(--ct-light);\n    grid-area: parent-list-name;\n}\n\n.popup-task > .form-container > label {\n    color: var(--ct-light);\n    width: 100%;\n    text-align: left;\n    margin-top: 0.5rem;\n}\n\n.popup-task > .form-container > input:nth-last-child(3) {\n    margin-bottom: 1rem;\n}\n\n.tasks-section {\n    grid-area: tasks-grid;\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 1rem; */\n    overflow-y: auto;\n}\n\n.task-container {\n    margin-bottom: 1rem;\n    width: 100%;\n    border: 1px solid var(--ct-grey);\n    border-radius: 10px;\n    padding: 0.5rem 1rem;\n    display: grid;\n    grid-template: var(--taskRow-h) var(--taskRow-h) calc(var(--taskRow-h) * 2) / 4fr 1fr 1fr;\n    grid-template-areas:\n        "taskName taskEdit taskDelete"\n        "taskDateAndParent taskDateAndParent taskDateAndParent"\n        "taskDesc taskDesc taskDesc";\n}\n\n.task-name {\n    grid-area: taskName;\n    overflow: auto;\n    font-size: var(--subheader-fs);\n}\n\n.task-desc {\n    grid-area: taskDesc;\n    overflow: auto;\n}\n\n.task-date-list-info {\n    grid-area: taskDateAndParent;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1rem;\n}\n\n.btn-edit-task, .btn-delete-task {\n    background-color: var(--ct-light);\n    /* filter: var(--filter-darker); */\n    border: 0 none;\n    width: var(--header-fs);\n    height: var(--header-fs);\n    justify-self: center;\n    align-self: center;\n}\n\n.btn-edit-task:hover, .btn-delete-task:hover {\n    cursor: pointer;\n    border-radius: 100%;\n}\n\n.btn-edit-task:hover {\n    background-color: var(--ct-blue);\n}\n\n.btn-delete-task:hover {\n    background-color: var(--ct-numix);\n}\n\n.btn-edit-task {\n    grid-area: taskEdit;\n}\n\n.btn-delete-task {\n    grid-area: taskDelete;\n}\n\n.task-controls {\n    width: var(--subheader-fs)\n}\n\n.task-priority-low {\n    border-color: var(--ct-white);\n    box-shadow: inset 0 0 10px 0 var(--ct-white);\n}\n\n.task-priority-medium {\n    border-color: var(--ct-blue);\n    box-shadow: inset 0 0 10px 0 var(--ct-blue);\n}\n\n.task-priority-high {\n    border-color: var(--ct-numix);\n    box-shadow: inset 0 0 10px 0 var(--ct-numix);\n}\n/* --------------------- Footer -------------------- */\nfooter {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--ct-darker);\n}\n\nfooter > .github-contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: 0.5rem;\n    text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n    width: var(--logo-fs);\n    filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n    font-size: var(--logo-fs);\n    color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n    color: var(--ct-numix);\n}\n\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --logo-fs: 1.4rem;\n        --navbar-fs: 1rem;\n        --header-fs: 1.9rem;\n        --subheader-fs: 1.5rem;\n        --subheader-sm-fs: 1.4rem;\n        --content-fs: 1rem;\n    }\n\n    .app-name {\n        display: block;\n    }\n\n    .btn-icon-label {\n        font-size: var(--navbar-fs);\n        gap: 0.5rem;\n        padding: 0.5rem 1rem 0.5rem 0.5rem;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --logo-fs: 1.5rem;\n        --navbar-fs: 1.1rem;\n        --header-fs: 2rem;\n        --subheader-fs: 1.6rem;\n        --subheader-sm-fs: 1.5rem;\n        --content-fs: 1rem;\n\n        /* Elements height */\n        --side-panel-length: min(14rem, 40%);\n        --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n    }\n\n    body {\n        grid-template:\n            var(--navbar-h) var(--content-h) var(--footer-h) / var(\n                --side-panel-length\n            )\n            1fr;\n        grid-template-areas:\n            "navbar navbar"\n            "side-panel main-content"\n            "footer footer";\n    }\n\n    .hidden {\n        grid-template-areas:\n            "navbar navbar"\n            "main-content main-content"\n            "footer footer";\n    }\n\n    .side-panel {\n        animation: slideRight 0.5s;\n    }\n\n    .task-container {\n        grid-template: var(--taskRow-h) var(--taskRow-h) / 2fr 3fr 1fr;\n        grid-template-areas:\n            "taskName taskDesc taskEdit"\n            "taskDateAndParent taskDesc taskDelete";\n    }\n\n    .task-desc {\n        padding-left: 1rem;\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    0% {\n        transform: translate(0, -100%);\n    }\n    100% {\n        transform: translate(0, 0);\n    }\n}\n\n@keyframes slideRight {\n    0% {\n        transform: translate(-100%);\n    }\n    100% {\n        transform: translate(0);\n    }\n}\n\n@keyframes scaleX {\n    0% {\n        transform: scaleX(0);\n    }\n    100% {\n        transform: scaleX(100%);\n    }\n}\n'],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);a&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},o=[],s=0;s<n.length;s++){var d=n[s],A=a.base?d[0]+a.base:d[0],c=i[A]||0,l="".concat(A," ").concat(c);i[A]=c+1;var p=t(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,a);a.byIndex=s,e.splice(s,0,{identifier:l,updater:u,references:1})}o.push(l)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=a(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=t(i[o]);e[s].references--}for(var d=a(n,r),A=0;A<i.length;A++){var c=t(i[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var i=e[a]={id:a,exports:{}};return n[a](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!n;)n=a[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"34b6d4f73e126d6b67d3.svg",e=t.p+"6272eb45ad17559332c9.svg",a=t.p+"6d4f8d6e9335a6ad1b70.svg",r=t.p+"4378e7db70c0a08749bc.svg",i=t.p+"0714a8b8a10131b7ef5f.svg",o=t.p+"1766b7bc2dabaa983863.svg",s=t.p+"a616c2e47378174c9635.svg",d=t.p+"3a6d73eb09b146db3363.svg",A=t.p+"4275c76a6db68c66d788.svg",c=t.p+"20eafb8bf8283f483a6e.svg";class l{#n;#e;#t;#a;#r;#i;constructor(n,e="",t=_,a="General",r=m.MEDIUM){this.#n=n,this.#e=e,this.#t=t,this.#a=a,this.#r=r,this.#i="task_"+N()}get name(){return this.#n}set name(n){this.#n=n}get desc(){return this.#e}set desc(n){this.#e=n}get dueDate(){return this.#t}set dueDate(n){this.#t=n}get parentList(){return this.#a}set parentList(n){this.#a=n}get priority(){return this.#r}set priority(n){this.#r=n}get id(){return this.#i}toJSON(){return{taskName:this.#n,description:this.#e,dueDate:this.#t,parentListId:this.#a,priority:this.#r,taskId:this.#i}}}class p{#o;#s;constructor(n){this.#o=n,this.#s="list_"+N()}get name(){return this.#o}set name(n){this.#o=n}get id(){return this.#s}set id(n){this.#s=n}toJSON(){return{listName:this.#o,listID:this.#s}}}const m=Object.freeze({LOW:-1,MEDIUM:0,HIGH:1});let u="anytime",C="";const g=[],f=[];function h(n){const e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new n.constructor(+n):"number"==typeof n||"[object Number]"===e||"string"==typeof n||"[object String]"===e?new Date(n):new Date(NaN)}function B(n){const e=h(n);return e.setHours(0,0,0,0),e}function I(n){return e=n,t=Date.now(),+B(e)==+B(t);var e,t}Math.pow(10,8);const v=864e5;function b(n){const e=h(n),t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),+n-+t}function k(n,e){const t=h(n),a=h(e),r=y(t,a),i=Math.abs(function(n,e){const t=B(n),a=B(e),r=+t-b(t),i=+a-b(a);return Math.round((r-i)/v)}(t,a));t.setDate(t.getDate()-r*i);const o=r*(i-Number(y(t,a)===-r));return 0===o?0:o}function y(n,e){const t=n.getFullYear()-e.getFullYear()||n.getMonth()-e.getMonth()||n.getDate()-e.getDate()||n.getHours()-e.getHours()||n.getMinutes()-e.getMinutes()||n.getSeconds()-e.getSeconds()||n.getMilliseconds()-e.getMilliseconds();return t<0?-1:t>0?1:t}function E(){return B(Date.now())}const _=new Date(864e12);let x="",w="";function D(){const n=this.id.slice(5),e=document.getElementById("parent_list_name_main_panel");e.textContent="-",f.forEach((t=>{t.id==n&&(e.textContent=t.name)})),C=n,O(),document.getElementById(this.id).classList.add("sp-group-selected"),M()}function L(){document.getElementById("sp_g_home").classList.remove("sp-group-selected"),document.getElementById("sp_g_today").classList.remove("sp-group-selected"),document.getElementById("sp_g_upcoming").classList.remove("sp-group-selected"),document.getElementById("sp_g_anytime").classList.remove("sp-group-selected")}function j(){document.getElementById("new_task_popup").classList.toggle("popup-unhidden"),document.getElementById("new_task_input_name").value="",document.getElementById("new_task_input_desc").value="",document.getElementById("new_task_input_date").value="",document.getElementById("new_task_input_priority").value="",document.getElementById("new_task_input_parent_list").value="",x=""}function S(){document.getElementById("new_list_input_form").classList.toggle("popup-unhidden"),document.getElementById("new_list_input_field_text").value=""}function N(){return Math.floor(Math.random()*Date.now())}function M(){const n=document.getElementById("task_panel");let e;const t=[];switch(n.innerHTML="",u){case"today":e=g.filter((n=>I(h(n.dueDate))));break;case"upcoming":e=g.filter((n=>k(h(n.dueDate),E())<7&&k(h(n.dueDate),E())>=0));break;default:e=g}""==C?e.forEach((e=>{n.appendChild(z(e))})):(e.forEach((n=>{n.parentList==C&&t.push(n)})),t.forEach((e=>{n.appendChild(z(e))}))),localStorage.setItem("tasks",JSON.stringify(g)),localStorage.setItem("projects",JSON.stringify(f))}function Q(){const n=document.getElementById("new_task_input_name"),e=document.getElementById("new_task_input_desc"),t=document.getElementById("new_task_input_date"),a=document.getElementById("new_task_input_priority"),r=document.getElementById("new_task_input_parent_list");let i=-1/0,o="";for(let n=0;n<g.length;n++)g[n].id===x&&(i=n);if(i>-1){const s=g[i];for(let n=0;n<f.length;n++)f[n].name==r.value&&(o=f[n].id);s.name=n.value,s.desc=e.value,s.dueDate=t.value,s.priority=a.value,s.parentList=o,console.log("Edited: "+x)}else{for(let n=0;n<f.length;n++)f[n].name==r.value&&(o=f[n].id);!function(n,e="",t=_,a="General",r=m.MEDIUM){const i=new l(n,e,t,a,r);g.push(i),console.log("New task added to array: "+i.id)}(n.value,e.value,t.value,o,a.value)}x="",j(),M()}function z(n){const e=document.createElement("div");switch(e.classList.add("task-container"),parseInt(n.priority)){case-1:e.classList.add("task-priority-low");break;case 0:e.classList.add("task-priority-medium");break;case 1:e.classList.add("task-priority-high")}const t=document.createElement("h1");t.textContent=n.name,t.classList.add("task-name"),e.appendChild(t);const a=document.createElement("div");a.classList.add("task-date-list-info");const r=document.createElement("h3");r.classList.add("task-date"),r.textContent=n.dueDate,a.appendChild(r);const i=document.createElement("h3");i.classList.add("task-parent-list");for(let e=0;e<f.length;e++)f[e].id==n.parentList&&(i.textContent=f[e].name);a.appendChild(i),e.appendChild(a);const o=document.createElement("p");o.classList.add("task-desc"),o.textContent=n.desc,e.appendChild(o);const s=document.createElement("button");s.classList.add("btn-edit-task");const d=new Image;d.src=A,d.classList.add("task-controls"),d.setAttribute("editID",n.id),d.addEventListener("click",P),s.appendChild(d),e.appendChild(s);const l=document.createElement("button");l.classList.add("btn-delete-task");const p=new Image;return p.src=c,p.classList.add("task-controls"),p.id=n.id,p.addEventListener("click",T),l.appendChild(p),e.appendChild(l),e}function T(){for(let n=0;n<g.length;n++)if(g[n].id==this.id){g.splice(n,1),console.log("Deleted permanently: "+this.id);break}M()}function P(){let n=-1/0;x=this.getAttribute("editID");for(let e=0;e<g.length;e++)g[e].id===x&&(n=e);if(n>-1){const e=g[n],t=document.getElementById("new_task_input_name"),a=document.getElementById("new_task_input_desc"),r=document.getElementById("new_task_input_date"),i=document.getElementById("new_task_input_priority"),o=document.getElementById("new_task_input_parent_list");let s="";for(let n=0;n<f.length;n++)f[n].id==e.parentList&&(s=f[n].name);j(),x=this.getAttribute("editID"),t.value=e.name,a.value=e.desc,r.value=e.dueDate,i.value=e.priority,o.value=s,console.log("Popup filled up with: "+x)}}function O(){try{document.getElementById("sidePanel-lists").remove()}catch(n){console.log("element ID: sidePanel-lists DOES NOT EXIST")}const n=document.createElement("div");n.id="sidePanel-lists",f.forEach((e=>{n.appendChild(function(n){const e=document.createElement("div");e.classList.add("list-box");const t=document.createElement("div");t.id="sp_g_"+n.id,t.classList.add("sp-group"),t.addEventListener("click",D);const a=new Image;a.src=s,a.classList.add("sp-g-icon"),t.appendChild(a);const r=document.createElement("h3");r.classList.add("sp-g-label"),r.textContent=n.name,t.appendChild(r),e.appendChild(t);const i=document.createElement("button");i.classList.add("btn-edit-list");const o=new Image;o.src=A,o.classList.add("list-controls"),o.setAttribute("editID",n.id),o.addEventListener("click",U),i.appendChild(o),e.appendChild(i);const d=document.createElement("button");d.classList.add("btn-delete-list");const l=new Image;return l.src=c,l.classList.add("list-controls"),l.id=n.id,l.addEventListener("click",R),d.appendChild(l),e.appendChild(d),e}(e))})),document.getElementById("sidePanel").appendChild(n);try{document.getElementById("new_task_popup").remove(),document.body.appendChild(W()),document.getElementById("cancel_btn_task_form").addEventListener("click",j),document.getElementById("add_task_btn_form").addEventListener("click",Q)}catch(n){console.log("element ID: new_task_popup DOES NOT EXIST")}}function R(){for(let n=0;n<f.length;n++)if(f[n].id==this.id){f.splice(n,1),console.log("Deleted permanently: "+this.id);break}O()}function U(){let n=-1/0;w=this.getAttribute("editID");for(let e=0;e<f.length;e++)f[e].id===w&&(n=e);if(n>-1){const e=f[n],t=document.getElementById("new_list_input_field_text");document.getElementById("new_list_input_form").classList.remove("popup-unhidden"),S(),t.value=e.name,console.log("Popup filled up with: "+x)}}function W(){const n=document.createElement("div");n.id="new_task_popup",n.classList.add("popup-task");const e=document.createElement("form");e.classList.add("form-container"),e.action="javascript:void(0);";const t=document.createElement("h1");t.classList.add("popup-title"),t.textContent="Task properties",e.appendChild(t);const a=document.createElement("label");a.setAttribute("for","taskName"),a.textContent="Name",e.appendChild(a);const r=document.createElement("input");r.type="text",r.id="new_task_input_name",r.placeholder="New task name",r.name="taskName",r.required,e.appendChild(r);const i=document.createElement("label");i.setAttribute("for","taskDesc"),i.textContent="Description",e.appendChild(i);const o=document.createElement("input");o.type="text",o.id="new_task_input_desc",o.placeholder="Task description",o.name="taskDesc",e.appendChild(o);const s=document.createElement("label");s.setAttribute("for","taskDate"),s.textContent="Deadline",e.appendChild(s);const d=document.createElement("input");d.type="date",d.id="new_task_input_date",d.name="taskDate",e.appendChild(d);const A=document.createElement("label");A.setAttribute("for","new_task_input_priority"),A.textContent="Priority",e.appendChild(A);const c=document.createElement("select");c.id="new_task_input_priority",c.name="new_task_input_priority";const l=document.createElement("option");l.value=m.LOW,l.innerText="Low",c.appendChild(l);const p=document.createElement("option");p.value=m.MEDIUM,p.innerText="Medium",c.appendChild(p);const u=document.createElement("option");u.value=m.HIGH,u.innerText="High",c.appendChild(u),e.appendChild(c);const C=document.createElement("label");C.setAttribute("for","new_task_input_parent_list"),C.textContent="Project",e.appendChild(C);const g=document.createElement("select");g.id="new_task_input_parent_list",g.name="new_task_input_parent_list",f.forEach((n=>{g.appendChild(function(n){const e=document.createElement("option");return e.value=n.name,e.innerText=n.name,e}(n))})),e.appendChild(g);const h=document.createElement("input");h.type="submit",h.id="add_task_btn_form",h.classList.add("btn-form"),h.value="Accept",e.appendChild(h);const B=document.createElement("button");return B.type="button",B.id="cancel_btn_task_form",B.classList.add("btn-form","cancel"),B.textContent="Cancel",e.appendChild(B),n.appendChild(e),n}function q(n,e){const t=document.createElement("div");t.id="sp_g_"+n,t.classList.add("sp-group");const a=new Image;a.src=e,a.classList.add("sp-g-icon"),t.appendChild(a);const r=document.createElement("h3");return r.classList.add("sp-g-label"),r.textContent=n,t.appendChild(r),t}function X(n,e){const t=document.createElement("button");t.classList.add("btn-icon-label"),t.id="btn-"+n.toLowerCase().replace(" ","_"),t.textContent=n;const a=new Image;return a.src=e,t.appendChild(a),t}var J=t(379),F=t.n(J),H=t(795),G=t.n(H),Y=t(569),Z=t.n(Y),V=t(565),$=t.n(V),K=t(216),nn=t.n(K),en=t(589),tn=t.n(en),an=t(426),rn={};rn.styleTagTransform=tn(),rn.setAttributes=$(),rn.insert=Z().bind(null,"head"),rn.domAPI=G(),rn.insertStyleElement=nn(),F()(an.Z,rn),an.Z&&an.Z.locals&&an.Z.locals,function(){const t=document.body;t.appendChild(function(){const t=document.createElement("nav"),a=document.createElement("div");a.classList.add("title-container");const r=new Image;r.src=n,r.id="menuIcon",r.classList.add("logo"),a.appendChild(r);const i=document.createElement("h1");i.classList.add("app-name"),i.textContent="TO-DO x Hacer!",a.appendChild(i);const o=X("New task",e);return t.appendChild(a),t.appendChild(o),t}()),t.appendChild(function(){const n=document.createElement("aside");return n.classList.add("side-panel"),n.id="sidePanel",n.appendChild(X("new list",d)),n.appendChild(function(){const n=document.createElement("div");n.id="new_list_input_form",n.classList.add("popup");const e=document.createElement("form");e.classList.add("form-container");const t=document.createElement("h1");t.classList.add("popup-title"),t.textContent="List properties",e.appendChild(t);const a=document.createElement("input");a.type="text",a.id="new_list_input_field_text",a.placeholder="List name",a.name="listName",e.appendChild(a);const r=document.createElement("button");r.type="button",r.id="add_list_btn_form",r.classList.add("btn-form"),r.textContent="Accept",e.appendChild(r);const i=document.createElement("button");return i.type="button",i.id="cancel_btn_form",i.classList.add("btn-form"),i.classList.add("cancel"),i.textContent="Cancel",e.appendChild(i),n.appendChild(e),n}()),n.appendChild(q("home",r)),n.appendChild(q("today",i)),n.appendChild(q("upcoming",o)),n.appendChild(q("anytime",s)),n}());try{!function(){let n;JSON.parse(localStorage.getItem("projects")).forEach((e=>{n=new p(e.listName),n.id=e.listID,f.push(n)}))}()}catch(n){console.log("No PROJECTS in local storage found.")}O(),t.appendChild(function(){const n=document.createElement("main");n.classList.add("main-content"),n.id="main_content";const e=document.createElement("div");e.classList.add("main-title-container");const t=document.createElement("h1");t.textContent="Home",t.id="filter_date_title_main_panel",e.appendChild(t);const a=document.createElement("h3");a.textContent="All projects",a.id="parent_list_name_main_panel",e.appendChild(a),n.appendChild(e);const r=document.createElement("div");return r.id="task_panel",r.classList.add("tasks-section"),n.appendChild(r),n}()),t.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("a");e.classList.add("github-contact-info"),e.href="https://github.com/nico9506/TOP-todo";const t=new Image;t.src=a,t.classList.add("footer-logo"),e.appendChild(t);const r=document.createElement("h1");return r.classList.add("github-user"),r.id="githubUser",r.textContent="nico9506",e.appendChild(r),n.appendChild(e),n}()),t.appendChild(W());try{JSON.parse(localStorage.getItem("tasks")).forEach((n=>{g.push(new l(n.taskName,n.description,n.dueDate,n.parentListId,n.priority))}))}catch(n){console.log("No TASKS in local storage found.")}M()}(),document.getElementById("menuIcon").addEventListener("click",(function(){document.body.classList.toggle("hidden"),document.getElementById("sidePanel").classList.toggle("side-panel-hidden")})),document.getElementById("btn-new_list").addEventListener("click",S),document.getElementById("cancel_btn_form").addEventListener("click",S),document.getElementById("btn-new_task").addEventListener("click",j),document.getElementById("cancel_btn_task_form").addEventListener("click",j),document.getElementById("add_task_btn_form").addEventListener("click",Q),document.getElementById("add_list_btn_form").addEventListener("click",(function(){const n=document.getElementById("new_list_input_field_text").value;let e=-1/0;for(let t=0;t<f.length;t++){if(f[t].name===n)return console.log("Error: TaskList (name) already created."),void alert("Name list currently in use!");f[t].id==w&&(e=t)}e>-1?f[e].name=n:f.push(new p(n)),w="",S(),O(),M()})),document.getElementById("sp_g_home").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Home",document.getElementById("parent_list_name_main_panel").textContent="All projects",u="anytime",C="",L(),document.getElementById("sp_g_home").classList.add("sp-group-selected"),M(),O()})),document.getElementById("sp_g_today").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Today",u="today",L(),document.getElementById("sp_g_today").classList.add("sp-group-selected"),M()})),document.getElementById("sp_g_upcoming").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Upcoming",u="upcoming",L(),document.getElementById("sp_g_upcoming").classList.add("sp-group-selected"),M()})),document.getElementById("sp_g_anytime").addEventListener("click",(function(){document.getElementById("filter_date_title_main_panel").textContent="Anytime",u="anytime",L(),document.getElementById("sp_g_anytime").classList.add("sp-group-selected"),M()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,